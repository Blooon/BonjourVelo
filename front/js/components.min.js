/*Compiler*/var tempConsole=[console.log,console.error,console.info];console.log=function(){};console.error=function(){};console.info=function(){};/******/(function(modules){//webpackBootstrap/******/function hotDisposeChunk(chunkId){/******/delete installedChunks[chunkId];/******/}/******/var parentHotUpdateCallback=window["webpackHotUpdate"];/******/window["webpackHotUpdate"]=//eslint-disable-next-line no-unused-vars/******/function webpackHotUpdateCallback(chunkId,moreModules){/******/hotAddUpdateChunk(chunkId,moreModules);/******/if(parentHotUpdateCallback)parentHotUpdateCallback(chunkId,moreModules);/******/};/******//******///eslint-disable-next-line no-unused-vars/******/function hotDownloadUpdateChunk(chunkId){/******/var script=document.createElement("script");/******/script.charset="utf-8";/******/script.src=__webpack_require__.p+""+chunkId+"."+hotCurrentHash+".hot-update.js";/******/if(null)script.crossOrigin=null;/******/document.head.appendChild(script);/******/}/******//******///eslint-disable-next-line no-unused-vars/******/function hotDownloadManifest(requestTimeout){/******/requestTimeout=requestTimeout||10000;/******/return new Promise(function(resolve,reject){/******/if(typeof XMLHttpRequest==="undefined"){/******/return reject(new Error("No browser support"));/******/}/******/try{/******/var request=new XMLHttpRequest();/******/var requestPath=__webpack_require__.p+""+hotCurrentHash+".hot-update.json";/******/request.open("GET",requestPath,true);/******/request.timeout=requestTimeout;/******/request.send(null);/******/}catch(err){/******/return reject(err);/******/}/******/request.onreadystatechange=function(){/******/if(request.readyState!==4)return;/******/if(request.status===0){/******///timeout/******/reject(/******/new Error("Manifest request to"+requestPath+"timed out.")/******/);/******/}else if(request.status===404){/******///no update available/******/resolve();/******/}else if(request.status!==200&&request.status!==304){/******///other failure/******/reject(new Error("Manifest request to"+requestPath+"failed."));/******/}else{/******///success/******/try{/******/var update=JSON.parse(request.responseText);/******/}catch(e){/******/reject(e);/******/return;/******/}/******/resolve(update);/******/}/******/};/******/});/******/}/******//******/var hotApplyOnUpdate=true;/******///eslint-disable-next-line no-unused-vars/******/var hotCurrentHash="9d2eb7806aec4c4eb325";/******/var hotRequestTimeout=10000;/******/var hotCurrentModuleData={};/******/var hotCurrentChildModule;/******///eslint-disable-next-line no-unused-vars/******/var hotCurrentParents=[];/******///eslint-disable-next-line no-unused-vars/******/var hotCurrentParentsTemp=[];/******//******///eslint-disable-next-line no-unused-vars/******/function hotCreateRequire(moduleId){/******/var me=installedModules[moduleId];/******/if(!me)return __webpack_require__;/******/var fn=function(request){/******/if(me.hot.active){/******/if(installedModules[request]){/******/if(installedModules[request].parents.indexOf(moduleId)===-1){/******/installedModules[request].parents.push(moduleId);/******/}/******/}else{/******/hotCurrentParents=[moduleId];/******/hotCurrentChildModule=request;/******/}/******/if(me.children.indexOf(request)===-1){/******/me.children.push(request);/******/}/******/}else{/******/console.warn(/******/"[HMR]unexpected require("+/******/request+/******/")from disposed module"+/******/moduleId/******/);/******/hotCurrentParents=[];/******/}/******/return __webpack_require__(request);/******/};/******/var ObjectFactory=function ObjectFactory(name){/******/return{/******/configurable:true,/******/enumerable:true,/******/get:function(){/******/return __webpack_require__[name];/******/},/******/set:function(value){/******/__webpack_require__[name]=value;/******/}/******/};/******/};/******/for(var name in __webpack_require__){/******/if(/******/Object.prototype.hasOwnProperty.call(__webpack_require__,name)&&/******/name!=="e"&&/******/name!=="t"/******/){/******/Object.defineProperty(fn,name,ObjectFactory(name));/******/}/******/}/******/fn.e=function(chunkId){/******/if(hotStatus==="ready")hotSetStatus("prepare");/******/hotChunksLoading++;/******/return __webpack_require__.e(chunkId).then(finishChunkLoading,function(err){/******/finishChunkLoading();/******/throw err;/******/});/******//******/function finishChunkLoading(){/******/hotChunksLoading--;/******/if(hotStatus==="prepare"){/******/if(!hotWaitingFilesMap[chunkId]){/******/hotEnsureUpdateChunk(chunkId);/******/}/******/if(hotChunksLoading===0&&hotWaitingFiles===0){/******/hotUpdateDownloaded();/******/}/******/}/******/}/******/};/******/fn.t=function(value,mode){/******/if(mode&1)value=fn(value);/******/return __webpack_require__.t(value,mode&~1);/******/};/******/return fn;/******/}/******//******///eslint-disable-next-line no-unused-vars/******/function hotCreateModule(moduleId){/******/var hot={/******///private stuff/******/_acceptedDependencies:{},/******/_declinedDependencies:{},/******/_selfAccepted:false,/******/_selfDeclined:false,/******/_disposeHandlers:[],/******/_main:hotCurrentChildModule!==moduleId,/******//******///Module API/******/active:true,/******/accept:function(dep,callback){/******/if(dep===undefined)hot._selfAccepted=true;/******/else if(typeof dep==="function")hot._selfAccepted=dep;/******/else if(typeof dep==="object")/******/for(var i=0;i<dep.length;i++)/******/hot._acceptedDependencies[dep[i]]=callback||function(){};/******/else hot._acceptedDependencies[dep]=callback||function(){};/******/},/******/decline:function(dep){/******/if(dep===undefined)hot._selfDeclined=true;/******/else if(typeof dep==="object")/******/for(var i=0;i<dep.length;i++)/******/hot._declinedDependencies[dep[i]]=true;/******/else hot._declinedDependencies[dep]=true;/******/},/******/dispose:function(callback){/******/hot._disposeHandlers.push(callback);/******/},/******/addDisposeHandler:function(callback){/******/hot._disposeHandlers.push(callback);/******/},/******/removeDisposeHandler:function(callback){/******/var idx=hot._disposeHandlers.indexOf(callback);/******/if(idx>=0)hot._disposeHandlers.splice(idx,1);/******/},/******//******///Management API/******/check:hotCheck,/******/apply:hotApply,/******/status:function(l){/******/if(!l)return hotStatus;/******/hotStatusHandlers.push(l);/******/},/******/addStatusHandler:function(l){/******/hotStatusHandlers.push(l);/******/},/******/removeStatusHandler:function(l){/******/var idx=hotStatusHandlers.indexOf(l);/******/if(idx>=0)hotStatusHandlers.splice(idx,1);/******/},/******//******///inherit from previous dispose call/******/data:hotCurrentModuleData[moduleId]/******/};/******/hotCurrentChildModule=undefined;/******/return hot;/******/}/******//******/var hotStatusHandlers=[];/******/var hotStatus="idle";/******//******/function hotSetStatus(newStatus){/******/hotStatus=newStatus;/******/for(var i=0;i<hotStatusHandlers.length;i++)/******/hotStatusHandlers[i].call(null,newStatus);/******/}/******//******///while downloading/******/var hotWaitingFiles=0;/******/var hotChunksLoading=0;/******/var hotWaitingFilesMap={};/******/var hotRequestedFilesMap={};/******/var hotAvailableFilesMap={};/******/var hotDeferred;/******//******///The update info/******/var hotUpdate,hotUpdateNewHash;/******//******/function toModuleId(id){/******/var isNumber=+id+""===id;/******/return isNumber?+id:id;/******/}/******//******/function hotCheck(apply){/******/if(hotStatus!=="idle"){/******/throw new Error("check()is only allowed in idle status");/******/}/******/hotApplyOnUpdate=apply;/******/hotSetStatus("check");/******/return hotDownloadManifest(hotRequestTimeout).then(function(update){/******/if(!update){/******/hotSetStatus("idle");/******/return null;/******/}/******/hotRequestedFilesMap={};/******/hotWaitingFilesMap={};/******/hotAvailableFilesMap=update.c;/******/hotUpdateNewHash=update.h;/******//******/hotSetStatus("prepare");/******/var promise=new Promise(function(resolve,reject){/******/hotDeferred={/******/resolve:resolve,/******/reject:reject/******/};/******/});/******/hotUpdate={};/******/var chunkId="main";/******///eslint-disable-next-line no-lone-blocks/******/{/******//*globals chunkId*//******/hotEnsureUpdateChunk(chunkId);/******/}/******/if(/******/hotStatus==="prepare"&&/******/hotChunksLoading===0&&/******/hotWaitingFiles===0/******/){/******/hotUpdateDownloaded();/******/}/******/return promise;/******/});/******/}/******//******///eslint-disable-next-line no-unused-vars/******/function hotAddUpdateChunk(chunkId,moreModules){/******/if(!hotAvailableFilesMap[chunkId]||!hotRequestedFilesMap[chunkId])/******/return;/******/hotRequestedFilesMap[chunkId]=false;/******/for(var moduleId in moreModules){/******/if(Object.prototype.hasOwnProperty.call(moreModules,moduleId)){/******/hotUpdate[moduleId]=moreModules[moduleId];/******/}/******/}/******/if(--hotWaitingFiles===0&&hotChunksLoading===0){/******/hotUpdateDownloaded();/******/}/******/}/******//******/function hotEnsureUpdateChunk(chunkId){/******/if(!hotAvailableFilesMap[chunkId]){/******/hotWaitingFilesMap[chunkId]=true;/******/}else{/******/hotRequestedFilesMap[chunkId]=true;/******/hotWaitingFiles++;/******/hotDownloadUpdateChunk(chunkId);/******/}/******/}/******//******/function hotUpdateDownloaded(){/******/hotSetStatus("ready");/******/var deferred=hotDeferred;/******/hotDeferred=null;/******/if(!deferred)return;/******/if(hotApplyOnUpdate){/******///Wrap deferred object in Promise to mark it as a well-handled Promise to/******///avoid triggering uncaught exception warning in Chrome./******///See https://bugs.chromium.org/p/chromium/issues/detail?id=465666/******/Promise.resolve()/******/.then(function(){/******/return hotApply(hotApplyOnUpdate);/******/})/******/.then(/******/function(result){/******/deferred.resolve(result);/******/},/******/function(err){/******/deferred.reject(err);/******/}/******/);/******/}else{/******/var outdatedModules=[];/******/for(var id in hotUpdate){/******/if(Object.prototype.hasOwnProperty.call(hotUpdate,id)){/******/outdatedModules.push(toModuleId(id));/******/}/******/}/******/deferred.resolve(outdatedModules);/******/}/******/}/******//******/function hotApply(options){/******/if(hotStatus!=="ready")/******/throw new Error("apply()is only allowed in ready status");/******/options=options||{};/******//******/var cb;/******/var i;/******/var j;/******/var module;/******/var moduleId;/******//******/function getAffectedStuff(updateModuleId){/******/var outdatedModules=[updateModuleId];/******/var outdatedDependencies={};/******//******/var queue=outdatedModules.slice().map(function(id){/******/return{/******/chain:[id],/******/id:id/******/};/******/});/******/while(queue.length>0){/******/var queueItem=queue.pop();/******/var moduleId=queueItem.id;/******/var chain=queueItem.chain;/******/module=installedModules[moduleId];/******/if(!module||module.hot._selfAccepted)continue;/******/if(module.hot._selfDeclined){/******/return{/******/type:"self-declined",/******/chain:chain,/******/moduleId:moduleId/******/};/******/}/******/if(module.hot._main){/******/return{/******/type:"unaccepted",/******/chain:chain,/******/moduleId:moduleId/******/};/******/}/******/for(var i=0;i<module.parents.length;i++){/******/var parentId=module.parents[i];/******/var parent=installedModules[parentId];/******/if(!parent)continue;/******/if(parent.hot._declinedDependencies[moduleId]){/******/return{/******/type:"declined",/******/chain:chain.concat([parentId]),/******/moduleId:moduleId,/******/parentId:parentId/******/};/******/}/******/if(outdatedModules.indexOf(parentId)!==-1)continue;/******/if(parent.hot._acceptedDependencies[moduleId]){/******/if(!outdatedDependencies[parentId])/******/outdatedDependencies[parentId]=[];/******/addAllToSet(outdatedDependencies[parentId],[moduleId]);/******/continue;/******/}/******/delete outdatedDependencies[parentId];/******/outdatedModules.push(parentId);/******/queue.push({/******/chain:chain.concat([parentId]),/******/id:parentId/******/});/******/}/******/}/******//******/return{/******/type:"accepted",/******/moduleId:updateModuleId,/******/outdatedModules:outdatedModules,/******/outdatedDependencies:outdatedDependencies/******/};/******/}/******//******/function addAllToSet(a,b){/******/for(var i=0;i<b.length;i++){/******/var item=b[i];/******/if(a.indexOf(item)===-1)a.push(item);/******/}/******/}/******//******///at begin all updates modules are outdated/******///the"outdated"status can propagate to parents if they don't accept the children/******/var outdatedDependencies={};/******/var outdatedModules=[];/******/var appliedUpdate={};/******//******/var warnUnexpectedRequire=function warnUnexpectedRequire(){/******/console.warn(/******/"[HMR]unexpected require("+result.moduleId+")to disposed module"/******/);/******/};/******//******/for(var id in hotUpdate){/******/if(Object.prototype.hasOwnProperty.call(hotUpdate,id)){/******/moduleId=toModuleId(id);/******//**@type{TODO}*//******/var result;/******/if(hotUpdate[id]){/******/result=getAffectedStuff(moduleId);/******/}else{/******/result={/******/type:"disposed",/******/moduleId:id/******/};/******/}/******//**@type{Error|false}*//******/var abortError=false;/******/var doApply=false;/******/var doDispose=false;/******/var chainInfo="";/******/if(result.chain){/******/chainInfo="\nUpdate propagation:"+result.chain.join("->");/******/}/******/switch(result.type){/******/case"self-declined":/******/if(options.onDeclined)options.onDeclined(result);/******/if(!options.ignoreDeclined)/******/abortError=new Error(/******/"Aborted because of self decline:"+/******/result.moduleId+/******/chainInfo/******/);/******/break;/******/case"declined":/******/if(options.onDeclined)options.onDeclined(result);/******/if(!options.ignoreDeclined)/******/abortError=new Error(/******/"Aborted because of declined dependency:"+/******/result.moduleId+/******/"in"+/******/result.parentId+/******/chainInfo/******/);/******/break;/******/case"unaccepted":/******/if(options.onUnaccepted)options.onUnaccepted(result);/******/if(!options.ignoreUnaccepted)/******/abortError=new Error(/******/"Aborted because"+moduleId+"is not accepted"+chainInfo/******/);/******/break;/******/case"accepted":/******/if(options.onAccepted)options.onAccepted(result);/******/doApply=true;/******/break;/******/case"disposed":/******/if(options.onDisposed)options.onDisposed(result);/******/doDispose=true;/******/break;/******/default:/******/throw new Error("Unexception type"+result.type);/******/}/******/if(abortError){/******/hotSetStatus("abort");/******/return Promise.reject(abortError);/******/}/******/if(doApply){/******/appliedUpdate[moduleId]=hotUpdate[moduleId];/******/addAllToSet(outdatedModules,result.outdatedModules);/******/for(moduleId in result.outdatedDependencies){/******/if(/******/Object.prototype.hasOwnProperty.call(/******/result.outdatedDependencies,/******/moduleId/******/)/******/){/******/if(!outdatedDependencies[moduleId])/******/outdatedDependencies[moduleId]=[];/******/addAllToSet(/******/outdatedDependencies[moduleId],/******/result.outdatedDependencies[moduleId]/******/);/******/}/******/}/******/}/******/if(doDispose){/******/addAllToSet(outdatedModules,[result.moduleId]);/******/appliedUpdate[moduleId]=warnUnexpectedRequire;/******/}/******/}/******/}/******//******///Store self accepted outdated modules to require them later by the module system/******/var outdatedSelfAcceptedModules=[];/******/for(i=0;i<outdatedModules.length;i++){/******/moduleId=outdatedModules[i];/******/if(/******/installedModules[moduleId]&&/******/installedModules[moduleId].hot._selfAccepted/******/)/******/outdatedSelfAcceptedModules.push({/******/module:moduleId,/******/errorHandler:installedModules[moduleId].hot._selfAccepted/******/});/******/}/******//******///Now in"dispose"phase/******/hotSetStatus("dispose");/******/Object.keys(hotAvailableFilesMap).forEach(function(chunkId){/******/if(hotAvailableFilesMap[chunkId]===false){/******/hotDisposeChunk(chunkId);/******/}/******/});/******//******/var idx;/******/var queue=outdatedModules.slice();/******/while(queue.length>0){/******/moduleId=queue.pop();/******/module=installedModules[moduleId];/******/if(!module)continue;/******//******/var data={};/******//******///Call dispose handlers/******/var disposeHandlers=module.hot._disposeHandlers;/******/for(j=0;j<disposeHandlers.length;j++){/******/cb=disposeHandlers[j];/******/cb(data);/******/}/******/hotCurrentModuleData[moduleId]=data;/******//******///disable module(this disables requires from this module)/******/module.hot.active=false;/******//******///remove module from cache/******/delete installedModules[moduleId];/******//******///when disposing there is no need to call dispose handler/******/delete outdatedDependencies[moduleId];/******//******///remove"parents"references from all children/******/for(j=0;j<module.children.length;j++){/******/var child=installedModules[module.children[j]];/******/if(!child)continue;/******/idx=child.parents.indexOf(moduleId);/******/if(idx>=0){/******/child.parents.splice(idx,1);/******/}/******/}/******/}/******//******///remove outdated dependency from module children/******/var dependency;/******/var moduleOutdatedDependencies;/******/for(moduleId in outdatedDependencies){/******/if(/******/Object.prototype.hasOwnProperty.call(outdatedDependencies,moduleId)/******/){/******/module=installedModules[moduleId];/******/if(module){/******/moduleOutdatedDependencies=outdatedDependencies[moduleId];/******/for(j=0;j<moduleOutdatedDependencies.length;j++){/******/dependency=moduleOutdatedDependencies[j];/******/idx=module.children.indexOf(dependency);/******/if(idx>=0)module.children.splice(idx,1);/******/}/******/}/******/}/******/}/******//******///Not in"apply"phase/******/hotSetStatus("apply");/******//******/hotCurrentHash=hotUpdateNewHash;/******//******///insert new code/******/for(moduleId in appliedUpdate){/******/if(Object.prototype.hasOwnProperty.call(appliedUpdate,moduleId)){/******/modules[moduleId]=appliedUpdate[moduleId];/******/}/******/}/******//******///call accept handlers/******/var error=null;/******/for(moduleId in outdatedDependencies){/******/if(/******/Object.prototype.hasOwnProperty.call(outdatedDependencies,moduleId)/******/){/******/module=installedModules[moduleId];/******/if(module){/******/moduleOutdatedDependencies=outdatedDependencies[moduleId];/******/var callbacks=[];/******/for(i=0;i<moduleOutdatedDependencies.length;i++){/******/dependency=moduleOutdatedDependencies[i];/******/cb=module.hot._acceptedDependencies[dependency];/******/if(cb){/******/if(callbacks.indexOf(cb)!==-1)continue;/******/callbacks.push(cb);/******/}/******/}/******/for(i=0;i<callbacks.length;i++){/******/cb=callbacks[i];/******/try{/******/cb(moduleOutdatedDependencies);/******/}catch(err){/******/if(options.onErrored){/******/options.onErrored({/******/type:"accept-errored",/******/moduleId:moduleId,/******/dependencyId:moduleOutdatedDependencies[i],/******/error:err/******/});/******/}/******/if(!options.ignoreErrored){/******/if(!error)error=err;/******/}/******/}/******/}/******/}/******/}/******/}/******//******///Load self accepted modules/******/for(i=0;i<outdatedSelfAcceptedModules.length;i++){/******/var item=outdatedSelfAcceptedModules[i];/******/moduleId=item.module;/******/hotCurrentParents=[moduleId];/******/try{/******/__webpack_require__(moduleId);/******/}catch(err){/******/if(typeof item.errorHandler==="function"){/******/try{/******/item.errorHandler(err);/******/}catch(err2){/******/if(options.onErrored){/******/options.onErrored({/******/type:"self-accept-error-handler-errored",/******/moduleId:moduleId,/******/error:err2,/******/originalError:err/******/});/******/}/******/if(!options.ignoreErrored){/******/if(!error)error=err2;/******/}/******/if(!error)error=err;/******/}/******/}else{/******/if(options.onErrored){/******/options.onErrored({/******/type:"self-accept-errored",/******/moduleId:moduleId,/******/error:err/******/});/******/}/******/if(!options.ignoreErrored){/******/if(!error)error=err;/******/}/******/}/******/}/******/}/******//******///handle errors in accept handlers and self accepted module load/******/if(error){/******/hotSetStatus("fail");/******/return Promise.reject(error);/******/}/******//******/hotSetStatus("idle");/******/return new Promise(function(resolve){/******/resolve(outdatedModules);/******/});/******/}/******//******///The module cache/******/var installedModules={};/******//******///The require function/******/function __webpack_require__(moduleId){/******//******///Check if module is in cache/******/if(installedModules[moduleId]){/******/return installedModules[moduleId].exports;/******/}/******///Create a new module(and put it into the cache)/******/var module=installedModules[moduleId]={/******/i:moduleId,/******/l:false,/******/exports:{},/******/hot:hotCreateModule(moduleId),/******/parents:(hotCurrentParentsTemp=hotCurrentParents,hotCurrentParents=[],hotCurrentParentsTemp),/******/children:[]/******/};/******//******///Execute the module function/******/modules[moduleId].call(module.exports,module,module.exports,hotCreateRequire(moduleId));/******//******///Flag the module as loaded/******/module.l=true;/******//******///Return the exports of the module/******/return module.exports;/******/}/******//******//******///expose the modules object(__webpack_modules__)/******/__webpack_require__.m=modules;/******//******///expose the module cache/******/__webpack_require__.c=installedModules;/******//******///define getter function for harmony exports/******/__webpack_require__.d=function(exports,name,getter){/******/if(!__webpack_require__.o(exports,name)){/******/Object.defineProperty(exports,name,{enumerable:true,get:getter});/******/}/******/};/******//******///define __esModule on exports/******/__webpack_require__.r=function(exports){/******/if(typeof Symbol!=='undefined'&&Symbol.toStringTag){/******/Object.defineProperty(exports,Symbol.toStringTag,{value:'Module'});/******/}/******/Object.defineProperty(exports,'__esModule',{value:true});/******/};/******//******///create a fake namespace object/******///mode&1:value is a module id,require it/******///mode&2:merge all properties of value into the ns/******///mode&4:return value when already ns object/******///mode&8|1:behave like require/******/__webpack_require__.t=function(value,mode){/******/if(mode&1)value=__webpack_require__(value);/******/if(mode&8)return value;/******/if((mode&4)&&typeof value==='object'&&value&&value.__esModule)return value;/******/var ns=Object.create(null);/******/__webpack_require__.r(ns);/******/Object.defineProperty(ns,'default',{enumerable:true,value:value});/******/if(mode&2&&typeof value!='string')for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key];}.bind(null,key));/******/return ns;/******/};/******//******///getDefaultExport function for compatibility with non-harmony modules/******/__webpack_require__.n=function(module){/******/var getter=module&&module.__esModule?/******/function getDefault(){return module['default'];}:/******/function getModuleExports(){return module;};/******/__webpack_require__.d(getter,'a',getter);/******/return getter;/******/};/******//******///Object.prototype.hasOwnProperty.call/******/__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};/******//******///__webpack_public_path__/******/__webpack_require__.p="";/******//******///__webpack_hash__/******/__webpack_require__.h=function(){return hotCurrentHash;};/******//******//******///Load entry module and return exports/******/return hotCreateRequire(0)(__webpack_require__.s=0);/******/})/************************************************************************//******/({/***/"./assets/stylesheets/scss/app.scss":/*!******************************************!*\;!***./assets/stylesheets/scss/app.scss***!;\******************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){eval("module.exports=__webpack_require__.p+\"bundle.css\";//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvc3R5bGVzaGVldHMvc2Nzcy9hcHAuc2Nzcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXNoZWV0cy9zY3NzL2FwcC5zY3NzPzA5MzUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYnVuZGxlLmNzc1wiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//#sourceURL=webpack-internal:///./assets/stylesheets/scss/app.scss\n");/***/}),/***/"./node_modules/@material/base/component.js":/*!**************************************************!*\;!***./node_modules/@material/base/component.js***!;\**************************************************//*!exports provided:default*//***/(function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/*harmony import*/var _foundation__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(/*!./foundation*/\"./node_modules/@material/base/foundation.js\");\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n/**\r\n*@template F\r\n*/\r\nclass MDCComponent{\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCComponent}\r\n*/\r\n static attachTo(root){\r\n//Subclasses which extend MDCBase should provide an attachTo()method that takes a root element and\r\n//returns an instantiated component with its root set to that element.Also note that in the cases of\r\n//subclasses,an explicit foundation class will not have to be passed in;it will simply be initialized\r\n//from getDefaultFoundation().\r\n return new MDCComponent(root,new _foundation__WEBPACK_IMPORTED_MODULE_0__[\"default\"]());\r\n}\r\n\r\n/**\r\n*@param{!Element}root\r\n*@param{F=}foundation\r\n*@param{...?}args\r\n*/\r\n constructor(root,foundation=undefined,...args){\r\n/**@protected{!Element}*/\r\n this.root_=root;\r\n this.initialize(...args);\r\n//Note that we initialize foundation here and not within the constructor's default param so that\r\n//this.root_ is defined and can be used within the foundation class.\r\n/**@protected{!F}*/\r\n this.foundation_=foundation===undefined?this.getDefaultFoundation():foundation;\r\n this.foundation_.init();\r\n this.initialSyncWithDOM();\r\n}\r\n\r\n initialize(/*...args*/){\r\n//Subclasses can override this to do any additional setup work that would be considered part of a\r\n//\"constructor\".Essentially,it is a hook into the parent constructor before the foundation is\r\n//initialized.Any additional arguments besides root and foundation will be passed in here.\r\n}\r\n\r\n/**\r\n*@return{!F}foundation\r\n*/\r\n getDefaultFoundation(){\r\n//Subclasses must override this method to return a properly configured foundation class for the\r\n//component.\r\n throw new Error('Subclasses must override getDefaultFoundation to return a properly configured'+\r\n'foundation class');\r\n}\r\n\r\n initialSyncWithDOM(){\r\n//Subclasses should override this method if they need to perform work to synchronize with a host DOM\r\n//object.An example of this would be a form control wrapper that needs to synchronize its internal state\r\n//to some property or attribute of the host DOM.Please note:this is*not*the place to perform DOM\r\n//reads/writes that would cause layout/paint,as this is called synchronously from within the constructor.\r\n}\r\n\r\n destroy(){\r\n//Subclasses may implement this method to release any resources/deregister any listeners they have\r\n//attached.An example of this might be deregistering a resize event from the window object.\r\n this.foundation_.destroy();\r\n}\r\n\r\n/**\r\n*Wrapper method to add an event listener to the component's root element.This is most useful when\r\n*listening for custom events.\r\n*@param{string}evtType\r\n*@param{!Function}handler\r\n*/\r\n listen(evtType,handler){\r\n this.root_.addEventListener(evtType,handler);\r\n}\r\n\r\n/**\r\n*Wrapper method to remove an event listener to the component's root element.This is most useful when\r\n*unlistening for custom events.\r\n*@param{string}evtType\r\n*@param{!Function}handler\r\n*/\r\n unlisten(evtType,handler){\r\n this.root_.removeEventListener(evtType,handler);\r\n}\r\n\r\n/**\r\n*Fires a cross-browser-compatible custom event from the component root of the given type,\r\n*with the given data.\r\n*@param{string}evtType\r\n*@param{!Object}evtData\r\n*@param{boolean=}shouldBubble\r\n*/\r\n emit(evtType,evtData,shouldBubble=false){\r\n let evt;\r\n if(typeof CustomEvent==='function'){\r\n evt=new CustomEvent(evtType,{\r\n detail:evtData,\r\n bubbles:shouldBubble,\r\n});\r\n}else{\r\n evt=document.createEvent('CustomEvent');\r\n evt.initCustomEvent(evtType,shouldBubble,false,evtData);\r\n}\r\n\r\n this.root_.dispatchEvent(evt);\r\n}\r\n}\r\n\r\n/*harmony default export*/__webpack_exports__[\"default\"]=(MDCComponent);\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,\n//#sourceURL=webpack-internal:///./node_modules/@material/base/component.js\n");/***/}),/***/"./node_modules/@material/base/foundation.js":/*!***************************************************!*\;!***./node_modules/@material/base/foundation.js***!;\***************************************************//*!exports provided:default*//***/(function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n*@template A\r\n*/\r\nclass MDCFoundation{\r\n/**@return enum{cssClasses}*/\r\n static get cssClasses(){\r\n//Classes extending MDCFoundation should implement this method to return an object which exports every\r\n//CSS class the foundation class needs as a property.e.g.{ACTIVE:'mdc-component--active'}\r\n return{};\r\n}\r\n\r\n/**@return enum{strings}*/\r\n static get strings(){\r\n//Classes extending MDCFoundation should implement this method to return an object which exports all\r\n//semantic strings as constants.e.g.{ARIA_ROLE:'tablist'}\r\n return{};\r\n}\r\n\r\n/**@return enum{numbers}*/\r\n static get numbers(){\r\n//Classes extending MDCFoundation should implement this method to return an object which exports all\r\n//of its semantic numbers as constants.e.g.{ANIMATION_DELAY_MS:350}\r\n return{};\r\n}\r\n\r\n/**@return{!Object}*/\r\n static get defaultAdapter(){\r\n//Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\r\n//way of viewing the necessary methods of an adapter.In the future,this could also be used for adapter\r\n//validation.\r\n return{};\r\n}\r\n\r\n/**\r\n*@param{A=}adapter\r\n*/\r\n constructor(adapter={}){\r\n/**@protected{!A}*/\r\n this.adapter_=adapter;\r\n}\r\n\r\n init(){\r\n//Subclasses should override this method to perform initialization routines(registering events,etc.)\r\n}\r\n\r\n destroy(){\r\n//Subclasses should override this method to perform de-initialization routines(de-registering events,etc.)\r\n}\r\n}\r\n\r\n/*harmony default export*/__webpack_exports__[\"default\"]=(MDCFoundation);\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2Jhc2UvZm91bmRhdGlvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvYmFzZS9mb3VuZGF0aW9uLmpzPzY2ODkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuXHJcbiAqXHJcbiAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcclxuICogb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxyXG4gKiBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXHJcbiAqIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcclxuICogY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXHJcbiAqIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XHJcbiAqXHJcbiAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXHJcbiAqIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxyXG4gKlxyXG4gKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXHJcbiAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxyXG4gKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcclxuICogQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxyXG4gKiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxyXG4gKiBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXHJcbiAqIFRIRSBTT0ZUV0FSRS5cclxuICovXHJcblxyXG4vKipcclxuICogQHRlbXBsYXRlIEFcclxuICovXHJcbmNsYXNzIE1EQ0ZvdW5kYXRpb24ge1xyXG4gIC8qKiBAcmV0dXJuIGVudW17Y3NzQ2xhc3Nlc30gKi9cclxuICBzdGF0aWMgZ2V0IGNzc0NsYXNzZXMoKSB7XHJcbiAgICAvLyBDbGFzc2VzIGV4dGVuZGluZyBNRENGb3VuZGF0aW9uIHNob3VsZCBpbXBsZW1lbnQgdGhpcyBtZXRob2QgdG8gcmV0dXJuIGFuIG9iamVjdCB3aGljaCBleHBvcnRzIGV2ZXJ5XHJcbiAgICAvLyBDU1MgY2xhc3MgdGhlIGZvdW5kYXRpb24gY2xhc3MgbmVlZHMgYXMgYSBwcm9wZXJ0eS4gZS5nLiB7QUNUSVZFOiAnbWRjLWNvbXBvbmVudC0tYWN0aXZlJ31cclxuICAgIHJldHVybiB7fTtcclxuICB9XHJcblxyXG4gIC8qKiBAcmV0dXJuIGVudW17c3RyaW5nc30gKi9cclxuICBzdGF0aWMgZ2V0IHN0cmluZ3MoKSB7XHJcbiAgICAvLyBDbGFzc2VzIGV4dGVuZGluZyBNRENGb3VuZGF0aW9uIHNob3VsZCBpbXBsZW1lbnQgdGhpcyBtZXRob2QgdG8gcmV0dXJuIGFuIG9iamVjdCB3aGljaCBleHBvcnRzIGFsbFxyXG4gICAgLy8gc2VtYW50aWMgc3RyaW5ncyBhcyBjb25zdGFudHMuIGUuZy4ge0FSSUFfUk9MRTogJ3RhYmxpc3QnfVxyXG4gICAgcmV0dXJuIHt9O1xyXG4gIH1cclxuXHJcbiAgLyoqIEByZXR1cm4gZW51bXtudW1iZXJzfSAqL1xyXG4gIHN0YXRpYyBnZXQgbnVtYmVycygpIHtcclxuICAgIC8vIENsYXNzZXMgZXh0ZW5kaW5nIE1EQ0ZvdW5kYXRpb24gc2hvdWxkIGltcGxlbWVudCB0aGlzIG1ldGhvZCB0byByZXR1cm4gYW4gb2JqZWN0IHdoaWNoIGV4cG9ydHMgYWxsXHJcbiAgICAvLyBvZiBpdHMgc2VtYW50aWMgbnVtYmVycyBhcyBjb25zdGFudHMuIGUuZy4ge0FOSU1BVElPTl9ERUxBWV9NUzogMzUwfVxyXG4gICAgcmV0dXJuIHt9O1xyXG4gIH1cclxuXHJcbiAgLyoqIEByZXR1cm4geyFPYmplY3R9ICovXHJcbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcclxuICAgIC8vIENsYXNzZXMgZXh0ZW5kaW5nIE1EQ0ZvdW5kYXRpb24gbWF5IGNob29zZSB0byBpbXBsZW1lbnQgdGhpcyBnZXR0ZXIgaW4gb3JkZXIgdG8gcHJvdmlkZSBhIGNvbnZlbmllbnRcclxuICAgIC8vIHdheSBvZiB2aWV3aW5nIHRoZSBuZWNlc3NhcnkgbWV0aG9kcyBvZiBhbiBhZGFwdGVyLiBJbiB0aGUgZnV0dXJlLCB0aGlzIGNvdWxkIGFsc28gYmUgdXNlZCBmb3IgYWRhcHRlclxyXG4gICAgLy8gdmFsaWRhdGlvbi5cclxuICAgIHJldHVybiB7fTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7QT19IGFkYXB0ZXJcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihhZGFwdGVyID0ge30pIHtcclxuICAgIC8qKiBAcHJvdGVjdGVkIHshQX0gKi9cclxuICAgIHRoaXMuYWRhcHRlcl8gPSBhZGFwdGVyO1xyXG4gIH1cclxuXHJcbiAgaW5pdCgpIHtcclxuICAgIC8vIFN1YmNsYXNzZXMgc2hvdWxkIG92ZXJyaWRlIHRoaXMgbWV0aG9kIHRvIHBlcmZvcm0gaW5pdGlhbGl6YXRpb24gcm91dGluZXMgKHJlZ2lzdGVyaW5nIGV2ZW50cywgZXRjLilcclxuICB9XHJcblxyXG4gIGRlc3Ryb3koKSB7XHJcbiAgICAvLyBTdWJjbGFzc2VzIHNob3VsZCBvdmVycmlkZSB0aGlzIG1ldGhvZCB0byBwZXJmb3JtIGRlLWluaXRpYWxpemF0aW9uIHJvdXRpbmVzIChkZS1yZWdpc3RlcmluZyBldmVudHMsIGV0Yy4pXHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNRENGb3VuZGF0aW9uO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//#sourceURL=webpack-internal:///./node_modules/@material/base/foundation.js\n");/***/}),/***/"./node_modules/@material/floating-label/dist/mdc.floatingLabel.js":/*!*************************************************************************!*\;!***./node_modules/@material/floating-label/dist/mdc.floatingLabel.js***!;\*************************************************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){eval("/*!\r\n Material Components for the Web\r\n Copyright(c)2019 Google Inc.\r\n License:MIT\r\n*/\r\n(function webpackUniversalModuleDefinition(root,factory){\r\n\tif(true)\r\n\t\tmodule.exports=factory();\r\n\telse{}\r\n})(this,function(){\r\nreturn/******/(function(modules){//webpackBootstrap\r\n/******/\t//The module cache\r\n/******/\tvar installedModules={};\r\n/******/\r\n/******/\t//The require function\r\n/******/\tfunction __webpack_require__(moduleId){\r\n/******/\r\n/******/\t\t//Check if module is in cache\r\n/******/\t\tif(installedModules[moduleId]){\r\n/******/\t\t\treturn installedModules[moduleId].exports;\r\n/******/\t\t}\r\n/******/\t\t//Create a new module(and put it into the cache)\r\n/******/\t\tvar module=installedModules[moduleId]={\r\n/******/\t\t\ti:moduleId,\r\n/******/\t\t\tl:false,\r\n/******/\t\t\texports:{}\r\n/******/\t\t};\r\n/******/\r\n/******/\t\t//Execute the module function\r\n/******/\t\tmodules[moduleId].call(module.exports,module,module.exports,__webpack_require__);\r\n/******/\r\n/******/\t\t//Flag the module as loaded\r\n/******/\t\tmodule.l=true;\r\n/******/\r\n/******/\t\t//Return the exports of the module\r\n/******/\t\treturn module.exports;\r\n/******/\t}\r\n/******/\r\n/******/\r\n/******/\t//expose the modules object(__webpack_modules__)\r\n/******/\t__webpack_require__.m=modules;\r\n/******/\r\n/******/\t//expose the module cache\r\n/******/\t__webpack_require__.c=installedModules;\r\n/******/\r\n/******/\t//define getter function for harmony exports\r\n/******/\t__webpack_require__.d=function(exports,name,getter){\r\n/******/\t\tif(!__webpack_require__.o(exports,name)){\r\n/******/\t\t\tObject.defineProperty(exports,name,{\r\n/******/\t\t\t\tconfigurable:false,\r\n/******/\t\t\t\tenumerable:true,\r\n/******/\t\t\t\tget:getter\r\n/******/\t\t\t});\r\n/******/\t\t}\r\n/******/\t};\r\n/******/\r\n/******/\t//getDefaultExport function for compatibility with non-harmony modules\r\n/******/\t__webpack_require__.n=function(module){\r\n/******/\t\tvar getter=module&&module.__esModule?\r\n/******/\t\t\tfunction getDefault(){return module['default'];}:\r\n/******/\t\t\tfunction getModuleExports(){return module;};\r\n/******/\t\t__webpack_require__.d(getter,'a',getter);\r\n/******/\t\treturn getter;\r\n/******/\t};\r\n/******/\r\n/******/\t//Object.prototype.hasOwnProperty.call\r\n/******/\t__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};\r\n/******/\r\n/******/\t//__webpack_public_path__\r\n/******/\t__webpack_require__.p=\"\";\r\n/******/\r\n/******/\t//Load entry module and return exports\r\n/******/\treturn __webpack_require__(__webpack_require__.s=16);\r\n/******/})\r\n/************************************************************************/\r\n/******/({\r\n\r\n/***/0:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n*@template A\r\n*/\r\nvar MDCFoundation=function(){\r\n _createClass(MDCFoundation,null,[{\r\n key:\"cssClasses\",\r\n\r\n/**@return enum{cssClasses}*/\r\n get:function get(){\r\n//Classes extending MDCFoundation should implement this method to return an object which exports every\r\n//CSS class the foundation class needs as a property.e.g.{ACTIVE:'mdc-component--active'}\r\n return{};\r\n}\r\n\r\n/**@return enum{strings}*/\r\n\r\n},{\r\n key:\"strings\",\r\n get:function get(){\r\n//Classes extending MDCFoundation should implement this method to return an object which exports all\r\n//semantic strings as constants.e.g.{ARIA_ROLE:'tablist'}\r\n return{};\r\n}\r\n\r\n/**@return enum{numbers}*/\r\n\r\n},{\r\n key:\"numbers\",\r\n get:function get(){\r\n//Classes extending MDCFoundation should implement this method to return an object which exports all\r\n//of its semantic numbers as constants.e.g.{ANIMATION_DELAY_MS:350}\r\n return{};\r\n}\r\n\r\n/**@return{!Object}*/\r\n\r\n},{\r\n key:\"defaultAdapter\",\r\n get:function get(){\r\n//Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\r\n//way of viewing the necessary methods of an adapter.In the future,this could also be used for adapter\r\n//validation.\r\n return{};\r\n}\r\n\r\n/**\r\n*@param{A=}adapter\r\n*/\r\n\r\n}]);\r\n\r\n function MDCFoundation(){\r\n var adapter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};\r\n\r\n _classCallCheck(this,MDCFoundation);\r\n\r\n/**@protected{!A}*/\r\n this.adapter_=adapter;\r\n}\r\n\r\n _createClass(MDCFoundation,[{\r\n key:\"init\",\r\n value:function init(){\r\n//Subclasses should override this method to perform initialization routines(registering events,etc.)\r\n}\r\n},{\r\n key:\"destroy\",\r\n value:function destroy(){\r\n//Subclasses should override this method to perform de-initialization routines(de-registering events,etc.)\r\n}\r\n}]);\r\n\r\n return MDCFoundation;\r\n}();\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCFoundation);\r\n\r\n/***/}),\r\n\r\n/***/1:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__foundation__=__webpack_require__(0);\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n/**\r\n*@template F\r\n*/\r\n\r\nvar MDCComponent=function(){\r\n _createClass(MDCComponent,null,[{\r\n key:'attachTo',\r\n\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCComponent}\r\n*/\r\n value:function attachTo(root){\r\n//Subclasses which extend MDCBase should provide an attachTo()method that takes a root element and\r\n//returns an instantiated component with its root set to that element.Also note that in the cases of\r\n//subclasses,an explicit foundation class will not have to be passed in;it will simply be initialized\r\n//from getDefaultFoundation().\r\n return new MDCComponent(root,new __WEBPACK_IMPORTED_MODULE_0__foundation__[\"a\"/*default*/]());\r\n}\r\n\r\n/**\r\n*@param{!Element}root\r\n*@param{F=}foundation\r\n*@param{...?}args\r\n*/\r\n\r\n}]);\r\n\r\n function MDCComponent(root){\r\n var foundation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;\r\n\r\n _classCallCheck(this,MDCComponent);\r\n\r\n/**@protected{!Element}*/\r\n this.root_=root;\r\n\r\n for(var _len=arguments.length,args=Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){\r\n args[_key-2]=arguments[_key];\r\n}\r\n\r\n this.initialize.apply(this,args);\r\n//Note that we initialize foundation here and not within the constructor's default param so that\r\n//this.root_ is defined and can be used within the foundation class.\r\n/**@protected{!F}*/\r\n this.foundation_=foundation===undefined?this.getDefaultFoundation():foundation;\r\n this.foundation_.init();\r\n this.initialSyncWithDOM();\r\n}\r\n\r\n _createClass(MDCComponent,[{\r\n key:'initialize',\r\n value:function initialize()/*...args*/{}\r\n//Subclasses can override this to do any additional setup work that would be considered part of a\r\n//\"constructor\".Essentially,it is a hook into the parent constructor before the foundation is\r\n//initialized.Any additional arguments besides root and foundation will be passed in here.\r\n\r\n\r\n/**\r\n*@return{!F}foundation\r\n*/\r\n\r\n},{\r\n key:'getDefaultFoundation',\r\n value:function getDefaultFoundation(){\r\n//Subclasses must override this method to return a properly configured foundation class for the\r\n//component.\r\n throw new Error('Subclasses must override getDefaultFoundation to return a properly configured'+'foundation class');\r\n}\r\n},{\r\n key:'initialSyncWithDOM',\r\n value:function initialSyncWithDOM(){\r\n//Subclasses should override this method if they need to perform work to synchronize with a host DOM\r\n//object.An example of this would be a form control wrapper that needs to synchronize its internal state\r\n//to some property or attribute of the host DOM.Please note:this is*not*the place to perform DOM\r\n//reads/writes that would cause layout/paint,as this is called synchronously from within the constructor.\r\n}\r\n},{\r\n key:'destroy',\r\n value:function destroy(){\r\n//Subclasses may implement this method to release any resources/deregister any listeners they have\r\n//attached.An example of this might be deregistering a resize event from the window object.\r\n this.foundation_.destroy();\r\n}\r\n\r\n/**\r\n*Wrapper method to add an event listener to the component's root element.This is most useful when\r\n*listening for custom events.\r\n*@param{string}evtType\r\n*@param{!Function}handler\r\n*/\r\n\r\n},{\r\n key:'listen',\r\n value:function listen(evtType,handler){\r\n this.root_.addEventListener(evtType,handler);\r\n}\r\n\r\n/**\r\n*Wrapper method to remove an event listener to the component's root element.This is most useful when\r\n*unlistening for custom events.\r\n*@param{string}evtType\r\n*@param{!Function}handler\r\n*/\r\n\r\n},{\r\n key:'unlisten',\r\n value:function unlisten(evtType,handler){\r\n this.root_.removeEventListener(evtType,handler);\r\n}\r\n\r\n/**\r\n*Fires a cross-browser-compatible custom event from the component root of the given type,\r\n*with the given data.\r\n*@param{string}evtType\r\n*@param{!Object}evtData\r\n*@param{boolean=}shouldBubble\r\n*/\r\n\r\n},{\r\n key:'emit',\r\n value:function emit(evtType,evtData){\r\n var shouldBubble=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;\r\n\r\n var evt=void 0;\r\n if(typeof CustomEvent==='function'){\r\n evt=new CustomEvent(evtType,{\r\n detail:evtData,\r\n bubbles:shouldBubble\r\n});\r\n}else{\r\n evt=document.createEvent('CustomEvent');\r\n evt.initCustomEvent(evtType,shouldBubble,false,evtData);\r\n}\r\n\r\n this.root_.dispatchEvent(evt);\r\n}\r\n}]);\r\n\r\n return MDCComponent;\r\n}();\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCComponent);\r\n\r\n/***/}),\r\n\r\n/***/12:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/*eslint no-unused-vars:[2,{\"args\":\"none\"}]*/\r\n\r\n/**\r\n*Adapter for MDC Floating Label.\r\n*\r\n*Defines the shape of the adapter expected by the foundation.Implement this\r\n*adapter to integrate the floating label into your framework.See\r\n*https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\r\n*for more information.\r\n*\r\n*@record\r\n*/\r\nvar MDCFloatingLabelAdapter=function(){\r\n function MDCFloatingLabelAdapter(){\r\n _classCallCheck(this,MDCFloatingLabelAdapter);\r\n}\r\n\r\n _createClass(MDCFloatingLabelAdapter,[{\r\n key:\"addClass\",\r\n\r\n/**\r\n*Adds a class to the label element.\r\n*@param{string}className\r\n*/\r\n value:function addClass(className){}\r\n\r\n/**\r\n*Removes a class from the label element.\r\n*@param{string}className\r\n*/\r\n\r\n},{\r\n key:\"removeClass\",\r\n value:function removeClass(className){}\r\n\r\n/**\r\n*Returns the width of the label element.\r\n*@return{number}\r\n*/\r\n\r\n},{\r\n key:\"getWidth\",\r\n value:function getWidth(){}\r\n\r\n/**\r\n*Registers an event listener on the root element for a given event.\r\n*@param{string}evtType\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"registerInteractionHandler\",\r\n value:function registerInteractionHandler(evtType,handler){}\r\n\r\n/**\r\n*Deregisters an event listener on the root element for a given event.\r\n*@param{string}evtType\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"deregisterInteractionHandler\",\r\n value:function deregisterInteractionHandler(evtType,handler){}\r\n}]);\r\n\r\n return MDCFloatingLabelAdapter;\r\n}();\r\n\r\n/*unused harmony default export*/var _unused_webpack_default_export=(MDCFloatingLabelAdapter);\r\n\r\n/***/}),\r\n\r\n/***/16:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nObject.defineProperty(__webpack_exports__,\"__esModule\",{value:true});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCFloatingLabel\",function(){return MDCFloatingLabel;});\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_component__=__webpack_require__(1);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(12);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__foundation__=__webpack_require__(26);\r\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCFloatingLabelFoundation\",function(){return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"];});\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCComponent<!MDCFloatingLabelFoundation>}\r\n*@final\r\n*/\r\n\r\nvar MDCFloatingLabel=function(_MDCComponent){\r\n _inherits(MDCFloatingLabel,_MDCComponent);\r\n\r\n function MDCFloatingLabel(){\r\n _classCallCheck(this,MDCFloatingLabel);\r\n\r\n return _possibleConstructorReturn(this,(MDCFloatingLabel.__proto__||Object.getPrototypeOf(MDCFloatingLabel)).apply(this,arguments));\r\n}\r\n\r\n _createClass(MDCFloatingLabel,[{\r\n key:'shake',\r\n\r\n\r\n/**\r\n*Styles the label to produce the label shake for errors.\r\n*@param{boolean}shouldShake styles the label to shake by adding shake class\r\n*if true,otherwise will stop shaking by removing shake class.\r\n*/\r\n value:function shake(shouldShake){\r\n this.foundation_.shake(shouldShake);\r\n}\r\n\r\n/**\r\n*Styles label to float/dock.\r\n*@param{boolean}shouldFloat styles the label to float by adding float class\r\n*if true,otherwise docks the label by removing the float class.\r\n*/\r\n\r\n},{\r\n key:'float',\r\n value:function float(shouldFloat){\r\n this.foundation_.float(shouldFloat);\r\n}\r\n\r\n/**\r\n*@return{number}\r\n*/\r\n\r\n},{\r\n key:'getWidth',\r\n value:function getWidth(){\r\n return this.foundation_.getWidth();\r\n}\r\n\r\n/**\r\n*@return{!MDCFloatingLabelFoundation}\r\n*/\r\n\r\n},{\r\n key:'getDefaultFoundation',\r\n value:function getDefaultFoundation(){\r\n var _this2=this;\r\n\r\n return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"/*default*/]({\r\n addClass:function addClass(className){\r\n return _this2.root_.classList.add(className);\r\n},\r\n removeClass:function removeClass(className){\r\n return _this2.root_.classList.remove(className);\r\n},\r\n getWidth:function getWidth(){\r\n return _this2.root_.scrollWidth;\r\n},\r\n registerInteractionHandler:function registerInteractionHandler(evtType,handler){\r\n return _this2.root_.addEventListener(evtType,handler);\r\n},\r\n deregisterInteractionHandler:function deregisterInteractionHandler(evtType,handler){\r\n return _this2.root_.removeEventListener(evtType,handler);\r\n}\r\n});\r\n}\r\n}],[{\r\n key:'attachTo',\r\n\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCFloatingLabel}\r\n*/\r\n value:function attachTo(root){\r\n return new MDCFloatingLabel(root);\r\n}\r\n}]);\r\n\r\n return MDCFloatingLabel;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\"/*default*/]);\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/26:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__=__webpack_require__(0);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(12);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__constants__=__webpack_require__(27);\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCFoundation<!MDCFloatingLabelAdapter>}\r\n*@final\r\n*/\r\n\r\nvar MDCFloatingLabelFoundation=function(_MDCFoundation){\r\n _inherits(MDCFloatingLabelFoundation,_MDCFoundation);\r\n\r\n _createClass(MDCFloatingLabelFoundation,null,[{\r\n key:'cssClasses',\r\n\r\n/**@return enum{string}*/\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/];\r\n}\r\n\r\n/**\r\n*{@see MDCFloatingLabelAdapter}for typing information on parameters and return\r\n*types.\r\n*@return{!MDCFloatingLabelAdapter}\r\n*/\r\n\r\n},{\r\n key:'defaultAdapter',\r\n get:function get(){\r\n return(/**@type{!MDCFloatingLabelAdapter}*/{\r\n addClass:function addClass(){},\r\n removeClass:function removeClass(){},\r\n getWidth:function getWidth(){},\r\n registerInteractionHandler:function registerInteractionHandler(){},\r\n deregisterInteractionHandler:function deregisterInteractionHandler(){}\r\n}\r\n);\r\n}\r\n\r\n/**\r\n*@param{!MDCFloatingLabelAdapter}adapter\r\n*/\r\n\r\n}]);\r\n\r\n function MDCFloatingLabelFoundation(adapter){\r\n _classCallCheck(this,MDCFloatingLabelFoundation);\r\n\r\n/**@private{function(!Event):undefined}*/\r\n var _this=_possibleConstructorReturn(this,(MDCFloatingLabelFoundation.__proto__||Object.getPrototypeOf(MDCFloatingLabelFoundation)).call(this,_extends(MDCFloatingLabelFoundation.defaultAdapter,adapter)));\r\n\r\n _this.shakeAnimationEndHandler_=function(){\r\n return _this.handleShakeAnimationEnd_();\r\n};\r\n return _this;\r\n}\r\n\r\n _createClass(MDCFloatingLabelFoundation,[{\r\n key:'init',\r\n value:function init(){\r\n this.adapter_.registerInteractionHandler('animationend',this.shakeAnimationEndHandler_);\r\n}\r\n},{\r\n key:'destroy',\r\n value:function destroy(){\r\n this.adapter_.deregisterInteractionHandler('animationend',this.shakeAnimationEndHandler_);\r\n}\r\n\r\n/**\r\n*Returns the width of the label element.\r\n*@return{number}\r\n*/\r\n\r\n},{\r\n key:'getWidth',\r\n value:function getWidth(){\r\n return this.adapter_.getWidth();\r\n}\r\n\r\n/**\r\n*Styles the label to produce the label shake for errors.\r\n*@param{boolean}shouldShake adds shake class if true,\r\n*otherwise removes shake class.\r\n*/\r\n\r\n},{\r\n key:'shake',\r\n value:function shake(shouldShake){\r\n var LABEL_SHAKE=MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;\r\n\r\n if(shouldShake){\r\n this.adapter_.addClass(LABEL_SHAKE);\r\n}else{\r\n this.adapter_.removeClass(LABEL_SHAKE);\r\n}\r\n}\r\n\r\n/**\r\n*Styles the label to float or dock.\r\n*@param{boolean}shouldFloat adds float class if true,otherwise remove\r\n*float and shake class to dock label.\r\n*/\r\n\r\n},{\r\n key:'float',\r\n value:function float(shouldFloat){\r\n var _MDCFloatingLabelFoun=MDCFloatingLabelFoundation.cssClasses,\r\n LABEL_FLOAT_ABOVE=_MDCFloatingLabelFoun.LABEL_FLOAT_ABOVE,\r\n LABEL_SHAKE=_MDCFloatingLabelFoun.LABEL_SHAKE;\r\n\r\n if(shouldFloat){\r\n this.adapter_.addClass(LABEL_FLOAT_ABOVE);\r\n}else{\r\n this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\r\n this.adapter_.removeClass(LABEL_SHAKE);\r\n}\r\n}\r\n\r\n/**\r\n*Handles an interaction event on the root element.\r\n*/\r\n\r\n},{\r\n key:'handleShakeAnimationEnd_',\r\n value:function handleShakeAnimationEnd_(){\r\n var LABEL_SHAKE=MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;\r\n\r\n this.adapter_.removeClass(LABEL_SHAKE);\r\n}\r\n}]);\r\n\r\n return MDCFloatingLabelFoundation;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\"/*default*/]);\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCFloatingLabelFoundation);\r\n\r\n/***/}),\r\n\r\n/***/27:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"a\",function(){return cssClasses;});\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**@enum{string}*/\r\nvar cssClasses={\r\n LABEL_FLOAT_ABOVE:'mdc-floating-label--float-above',\r\n LABEL_SHAKE:'mdc-floating-label--shake',\r\n ROOT:'mdc-floating-label'\r\n};\r\n\r\n\r\n\r\n/***/})\r\n\r\n/******/});\r\n});\r\n//#sourceMappingURL=mdc.floatingLabel.js.map//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,\n//#sourceURL=webpack-internal:///./node_modules/@material/floating-label/dist/mdc.floatingLabel.js\n");/***/}),/***/"./node_modules/@material/notched-outline/dist/mdc.notchedOutline.js":/*!***************************************************************************!*\;!***./node_modules/@material/notched-outline/dist/mdc.notchedOutline.js***!;\***************************************************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){eval("/*!\r\n Material Components for the Web\r\n Copyright(c)2019 Google Inc.\r\n License:MIT\r\n*/\r\n(function webpackUniversalModuleDefinition(root,factory){\r\n\tif(true)\r\n\t\tmodule.exports=factory();\r\n\telse{}\r\n})(this,function(){\r\nreturn/******/(function(modules){//webpackBootstrap\r\n/******/\t//The module cache\r\n/******/\tvar installedModules={};\r\n/******/\r\n/******/\t//The require function\r\n/******/\tfunction __webpack_require__(moduleId){\r\n/******/\r\n/******/\t\t//Check if module is in cache\r\n/******/\t\tif(installedModules[moduleId]){\r\n/******/\t\t\treturn installedModules[moduleId].exports;\r\n/******/\t\t}\r\n/******/\t\t//Create a new module(and put it into the cache)\r\n/******/\t\tvar module=installedModules[moduleId]={\r\n/******/\t\t\ti:moduleId,\r\n/******/\t\t\tl:false,\r\n/******/\t\t\texports:{}\r\n/******/\t\t};\r\n/******/\r\n/******/\t\t//Execute the module function\r\n/******/\t\tmodules[moduleId].call(module.exports,module,module.exports,__webpack_require__);\r\n/******/\r\n/******/\t\t//Flag the module as loaded\r\n/******/\t\tmodule.l=true;\r\n/******/\r\n/******/\t\t//Return the exports of the module\r\n/******/\t\treturn module.exports;\r\n/******/\t}\r\n/******/\r\n/******/\r\n/******/\t//expose the modules object(__webpack_modules__)\r\n/******/\t__webpack_require__.m=modules;\r\n/******/\r\n/******/\t//expose the module cache\r\n/******/\t__webpack_require__.c=installedModules;\r\n/******/\r\n/******/\t//define getter function for harmony exports\r\n/******/\t__webpack_require__.d=function(exports,name,getter){\r\n/******/\t\tif(!__webpack_require__.o(exports,name)){\r\n/******/\t\t\tObject.defineProperty(exports,name,{\r\n/******/\t\t\t\tconfigurable:false,\r\n/******/\t\t\t\tenumerable:true,\r\n/******/\t\t\t\tget:getter\r\n/******/\t\t\t});\r\n/******/\t\t}\r\n/******/\t};\r\n/******/\r\n/******/\t//getDefaultExport function for compatibility with non-harmony modules\r\n/******/\t__webpack_require__.n=function(module){\r\n/******/\t\tvar getter=module&&module.__esModule?\r\n/******/\t\t\tfunction getDefault(){return module['default'];}:\r\n/******/\t\t\tfunction getModuleExports(){return module;};\r\n/******/\t\t__webpack_require__.d(getter,'a',getter);\r\n/******/\t\treturn getter;\r\n/******/\t};\r\n/******/\r\n/******/\t//Object.prototype.hasOwnProperty.call\r\n/******/\t__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};\r\n/******/\r\n/******/\t//__webpack_public_path__\r\n/******/\t__webpack_require__.p=\"\";\r\n/******/\r\n/******/\t//Load entry module and return exports\r\n/******/\treturn __webpack_require__(__webpack_require__.s=35);\r\n/******/})\r\n/************************************************************************/\r\n/******/([\r\n/*0*/\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n*@template A\r\n*/\r\nvar MDCFoundation=function(){\r\n _createClass(MDCFoundation,null,[{\r\n key:\"cssClasses\",\r\n\r\n/**@return enum{cssClasses}*/\r\n get:function get(){\r\n//Classes extending MDCFoundation should implement this method to return an object which exports every\r\n//CSS class the foundation class needs as a property.e.g.{ACTIVE:'mdc-component--active'}\r\n return{};\r\n}\r\n\r\n/**@return enum{strings}*/\r\n\r\n},{\r\n key:\"strings\",\r\n get:function get(){\r\n//Classes extending MDCFoundation should implement this method to return an object which exports all\r\n//semantic strings as constants.e.g.{ARIA_ROLE:'tablist'}\r\n return{};\r\n}\r\n\r\n/**@return enum{numbers}*/\r\n\r\n},{\r\n key:\"numbers\",\r\n get:function get(){\r\n//Classes extending MDCFoundation should implement this method to return an object which exports all\r\n//of its semantic numbers as constants.e.g.{ANIMATION_DELAY_MS:350}\r\n return{};\r\n}\r\n\r\n/**@return{!Object}*/\r\n\r\n},{\r\n key:\"defaultAdapter\",\r\n get:function get(){\r\n//Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\r\n//way of viewing the necessary methods of an adapter.In the future,this could also be used for adapter\r\n//validation.\r\n return{};\r\n}\r\n\r\n/**\r\n*@param{A=}adapter\r\n*/\r\n\r\n}]);\r\n\r\n function MDCFoundation(){\r\n var adapter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};\r\n\r\n _classCallCheck(this,MDCFoundation);\r\n\r\n/**@protected{!A}*/\r\n this.adapter_=adapter;\r\n}\r\n\r\n _createClass(MDCFoundation,[{\r\n key:\"init\",\r\n value:function init(){\r\n//Subclasses should override this method to perform initialization routines(registering events,etc.)\r\n}\r\n},{\r\n key:\"destroy\",\r\n value:function destroy(){\r\n//Subclasses should override this method to perform de-initialization routines(de-registering events,etc.)\r\n}\r\n}]);\r\n\r\n return MDCFoundation;\r\n}();\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCFoundation);\r\n\r\n/***/}),\r\n/*1*/\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__foundation__=__webpack_require__(0);\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n/**\r\n*@template F\r\n*/\r\n\r\nvar MDCComponent=function(){\r\n _createClass(MDCComponent,null,[{\r\n key:'attachTo',\r\n\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCComponent}\r\n*/\r\n value:function attachTo(root){\r\n//Subclasses which extend MDCBase should provide an attachTo()method that takes a root element and\r\n//returns an instantiated component with its root set to that element.Also note that in the cases of\r\n//subclasses,an explicit foundation class will not have to be passed in;it will simply be initialized\r\n//from getDefaultFoundation().\r\n return new MDCComponent(root,new __WEBPACK_IMPORTED_MODULE_0__foundation__[\"a\"/*default*/]());\r\n}\r\n\r\n/**\r\n*@param{!Element}root\r\n*@param{F=}foundation\r\n*@param{...?}args\r\n*/\r\n\r\n}]);\r\n\r\n function MDCComponent(root){\r\n var foundation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;\r\n\r\n _classCallCheck(this,MDCComponent);\r\n\r\n/**@protected{!Element}*/\r\n this.root_=root;\r\n\r\n for(var _len=arguments.length,args=Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){\r\n args[_key-2]=arguments[_key];\r\n}\r\n\r\n this.initialize.apply(this,args);\r\n//Note that we initialize foundation here and not within the constructor's default param so that\r\n//this.root_ is defined and can be used within the foundation class.\r\n/**@protected{!F}*/\r\n this.foundation_=foundation===undefined?this.getDefaultFoundation():foundation;\r\n this.foundation_.init();\r\n this.initialSyncWithDOM();\r\n}\r\n\r\n _createClass(MDCComponent,[{\r\n key:'initialize',\r\n value:function initialize()/*...args*/{}\r\n//Subclasses can override this to do any additional setup work that would be considered part of a\r\n//\"constructor\".Essentially,it is a hook into the parent constructor before the foundation is\r\n//initialized.Any additional arguments besides root and foundation will be passed in here.\r\n\r\n\r\n/**\r\n*@return{!F}foundation\r\n*/\r\n\r\n},{\r\n key:'getDefaultFoundation',\r\n value:function getDefaultFoundation(){\r\n//Subclasses must override this method to return a properly configured foundation class for the\r\n//component.\r\n throw new Error('Subclasses must override getDefaultFoundation to return a properly configured'+'foundation class');\r\n}\r\n},{\r\n key:'initialSyncWithDOM',\r\n value:function initialSyncWithDOM(){\r\n//Subclasses should override this method if they need to perform work to synchronize with a host DOM\r\n//object.An example of this would be a form control wrapper that needs to synchronize its internal state\r\n//to some property or attribute of the host DOM.Please note:this is*not*the place to perform DOM\r\n//reads/writes that would cause layout/paint,as this is called synchronously from within the constructor.\r\n}\r\n},{\r\n key:'destroy',\r\n value:function destroy(){\r\n//Subclasses may implement this method to release any resources/deregister any listeners they have\r\n//attached.An example of this might be deregistering a resize event from the window object.\r\n this.foundation_.destroy();\r\n}\r\n\r\n/**\r\n*Wrapper method to add an event listener to the component's root element.This is most useful when\r\n*listening for custom events.\r\n*@param{string}evtType\r\n*@param{!Function}handler\r\n*/\r\n\r\n},{\r\n key:'listen',\r\n value:function listen(evtType,handler){\r\n this.root_.addEventListener(evtType,handler);\r\n}\r\n\r\n/**\r\n*Wrapper method to remove an event listener to the component's root element.This is most useful when\r\n*unlistening for custom events.\r\n*@param{string}evtType\r\n*@param{!Function}handler\r\n*/\r\n\r\n},{\r\n key:'unlisten',\r\n value:function unlisten(evtType,handler){\r\n this.root_.removeEventListener(evtType,handler);\r\n}\r\n\r\n/**\r\n*Fires a cross-browser-compatible custom event from the component root of the given type,\r\n*with the given data.\r\n*@param{string}evtType\r\n*@param{!Object}evtData\r\n*@param{boolean=}shouldBubble\r\n*/\r\n\r\n},{\r\n key:'emit',\r\n value:function emit(evtType,evtData){\r\n var shouldBubble=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;\r\n\r\n var evt=void 0;\r\n if(typeof CustomEvent==='function'){\r\n evt=new CustomEvent(evtType,{\r\n detail:evtData,\r\n bubbles:shouldBubble\r\n});\r\n}else{\r\n evt=document.createEvent('CustomEvent');\r\n evt.initCustomEvent(evtType,shouldBubble,false,evtData);\r\n}\r\n\r\n this.root_.dispatchEvent(evt);\r\n}\r\n}]);\r\n\r\n return MDCComponent;\r\n}();\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCComponent);\r\n\r\n/***/}),\r\n/*2*/,\r\n/*3*/,\r\n/*4*/,\r\n/*5*/,\r\n/*6*/,\r\n/*7*/,\r\n/*8*/,\r\n/*9*/,\r\n/*10*/,\r\n/*11*/,\r\n/*12*/\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/*eslint no-unused-vars:[2,{\"args\":\"none\"}]*/\r\n\r\n/**\r\n*Adapter for MDC Floating Label.\r\n*\r\n*Defines the shape of the adapter expected by the foundation.Implement this\r\n*adapter to integrate the floating label into your framework.See\r\n*https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\r\n*for more information.\r\n*\r\n*@record\r\n*/\r\nvar MDCFloatingLabelAdapter=function(){\r\n function MDCFloatingLabelAdapter(){\r\n _classCallCheck(this,MDCFloatingLabelAdapter);\r\n}\r\n\r\n _createClass(MDCFloatingLabelAdapter,[{\r\n key:\"addClass\",\r\n\r\n/**\r\n*Adds a class to the label element.\r\n*@param{string}className\r\n*/\r\n value:function addClass(className){}\r\n\r\n/**\r\n*Removes a class from the label element.\r\n*@param{string}className\r\n*/\r\n\r\n},{\r\n key:\"removeClass\",\r\n value:function removeClass(className){}\r\n\r\n/**\r\n*Returns the width of the label element.\r\n*@return{number}\r\n*/\r\n\r\n},{\r\n key:\"getWidth\",\r\n value:function getWidth(){}\r\n\r\n/**\r\n*Registers an event listener on the root element for a given event.\r\n*@param{string}evtType\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"registerInteractionHandler\",\r\n value:function registerInteractionHandler(evtType,handler){}\r\n\r\n/**\r\n*Deregisters an event listener on the root element for a given event.\r\n*@param{string}evtType\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"deregisterInteractionHandler\",\r\n value:function deregisterInteractionHandler(evtType,handler){}\r\n}]);\r\n\r\n return MDCFloatingLabelAdapter;\r\n}();\r\n\r\n/*unused harmony default export*/var _unused_webpack_default_export=(MDCFloatingLabelAdapter);\r\n\r\n/***/}),\r\n/*13*/,\r\n/*14*/,\r\n/*15*/,\r\n/*16*/\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nObject.defineProperty(__webpack_exports__,\"__esModule\",{value:true});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCFloatingLabel\",function(){return MDCFloatingLabel;});\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_component__=__webpack_require__(1);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(12);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__foundation__=__webpack_require__(26);\r\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCFloatingLabelFoundation\",function(){return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"];});\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCComponent<!MDCFloatingLabelFoundation>}\r\n*@final\r\n*/\r\n\r\nvar MDCFloatingLabel=function(_MDCComponent){\r\n _inherits(MDCFloatingLabel,_MDCComponent);\r\n\r\n function MDCFloatingLabel(){\r\n _classCallCheck(this,MDCFloatingLabel);\r\n\r\n return _possibleConstructorReturn(this,(MDCFloatingLabel.__proto__||Object.getPrototypeOf(MDCFloatingLabel)).apply(this,arguments));\r\n}\r\n\r\n _createClass(MDCFloatingLabel,[{\r\n key:'shake',\r\n\r\n\r\n/**\r\n*Styles the label to produce the label shake for errors.\r\n*@param{boolean}shouldShake styles the label to shake by adding shake class\r\n*if true,otherwise will stop shaking by removing shake class.\r\n*/\r\n value:function shake(shouldShake){\r\n this.foundation_.shake(shouldShake);\r\n}\r\n\r\n/**\r\n*Styles label to float/dock.\r\n*@param{boolean}shouldFloat styles the label to float by adding float class\r\n*if true,otherwise docks the label by removing the float class.\r\n*/\r\n\r\n},{\r\n key:'float',\r\n value:function float(shouldFloat){\r\n this.foundation_.float(shouldFloat);\r\n}\r\n\r\n/**\r\n*@return{number}\r\n*/\r\n\r\n},{\r\n key:'getWidth',\r\n value:function getWidth(){\r\n return this.foundation_.getWidth();\r\n}\r\n\r\n/**\r\n*@return{!MDCFloatingLabelFoundation}\r\n*/\r\n\r\n},{\r\n key:'getDefaultFoundation',\r\n value:function getDefaultFoundation(){\r\n var _this2=this;\r\n\r\n return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"/*default*/]({\r\n addClass:function addClass(className){\r\n return _this2.root_.classList.add(className);\r\n},\r\n removeClass:function removeClass(className){\r\n return _this2.root_.classList.remove(className);\r\n},\r\n getWidth:function getWidth(){\r\n return _this2.root_.scrollWidth;\r\n},\r\n registerInteractionHandler:function registerInteractionHandler(evtType,handler){\r\n return _this2.root_.addEventListener(evtType,handler);\r\n},\r\n deregisterInteractionHandler:function deregisterInteractionHandler(evtType,handler){\r\n return _this2.root_.removeEventListener(evtType,handler);\r\n}\r\n});\r\n}\r\n}],[{\r\n key:'attachTo',\r\n\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCFloatingLabel}\r\n*/\r\n value:function attachTo(root){\r\n return new MDCFloatingLabel(root);\r\n}\r\n}]);\r\n\r\n return MDCFloatingLabel;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\"/*default*/]);\r\n\r\n\r\n\r\n/***/}),\r\n/*17*/,\r\n/*18*/,\r\n/*19*/,\r\n/*20*/,\r\n/*21*/,\r\n/*22*/\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/*eslint no-unused-vars:[2,{\"args\":\"none\"}]*/\r\n\r\n/**\r\n*Adapter for MDC Notched Outline.\r\n*\r\n*Defines the shape of the adapter expected by the foundation.Implement this\r\n*adapter to integrate the Notched Outline into your framework.See\r\n*https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\r\n*for more information.\r\n*\r\n*@record\r\n*/\r\nvar MDCNotchedOutlineAdapter=function(){\r\n function MDCNotchedOutlineAdapter(){\r\n _classCallCheck(this,MDCNotchedOutlineAdapter);\r\n}\r\n\r\n _createClass(MDCNotchedOutlineAdapter,[{\r\n key:\"addClass\",\r\n\r\n/**\r\n*Adds a class to the root element.\r\n*@param{string}className\r\n*/\r\n value:function addClass(className){}\r\n\r\n/**\r\n*Removes a class from the root element.\r\n*@param{string}className\r\n*/\r\n\r\n},{\r\n key:\"removeClass\",\r\n value:function removeClass(className){}\r\n\r\n/**\r\n*Sets the width style property of the notch element.\r\n*@param{number}width\r\n*/\r\n\r\n},{\r\n key:\"setNotchWidthProperty\",\r\n value:function setNotchWidthProperty(width){}\r\n\r\n/**\r\n*Removes the width style property from the notch element.\r\n*/\r\n\r\n},{\r\n key:\"removeNotchWidthProperty\",\r\n value:function removeNotchWidthProperty(){}\r\n}]);\r\n\r\n return MDCNotchedOutlineAdapter;\r\n}();\r\n\r\n/*unused harmony default export*/var _unused_webpack_default_export=(MDCNotchedOutlineAdapter);\r\n\r\n/***/}),\r\n/*23*/\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"a\",function(){return cssClasses;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"b\",function(){return numbers;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"c\",function(){return strings;});\r\n/**\r\n*@license\r\n*Copyright 2018 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**@enum{string}*/\r\nvar strings={\r\n NOTCH_ELEMENT_SELECTOR:'.mdc-notched-outline__notch'\r\n};\r\n\r\n/**@enum{number}*/\r\nvar numbers={\r\n//This should stay in sync with $mdc-notched-outline-padding*2.\r\n NOTCH_ELEMENT_PADDING:8\r\n};\r\n\r\n/**@enum{string}*/\r\nvar cssClasses={\r\n OUTLINE_NOTCHED:'mdc-notched-outline--notched',\r\n OUTLINE_UPGRADED:'mdc-notched-outline--upgraded',\r\n NO_LABEL:'mdc-notched-outline--no-label'\r\n};\r\n\r\n\r\n\r\n/***/}),\r\n/*24*/,\r\n/*25*/,\r\n/*26*/\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__=__webpack_require__(0);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(12);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__constants__=__webpack_require__(27);\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCFoundation<!MDCFloatingLabelAdapter>}\r\n*@final\r\n*/\r\n\r\nvar MDCFloatingLabelFoundation=function(_MDCFoundation){\r\n _inherits(MDCFloatingLabelFoundation,_MDCFoundation);\r\n\r\n _createClass(MDCFloatingLabelFoundation,null,[{\r\n key:'cssClasses',\r\n\r\n/**@return enum{string}*/\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/];\r\n}\r\n\r\n/**\r\n*{@see MDCFloatingLabelAdapter}for typing information on parameters and return\r\n*types.\r\n*@return{!MDCFloatingLabelAdapter}\r\n*/\r\n\r\n},{\r\n key:'defaultAdapter',\r\n get:function get(){\r\n return(/**@type{!MDCFloatingLabelAdapter}*/{\r\n addClass:function addClass(){},\r\n removeClass:function removeClass(){},\r\n getWidth:function getWidth(){},\r\n registerInteractionHandler:function registerInteractionHandler(){},\r\n deregisterInteractionHandler:function deregisterInteractionHandler(){}\r\n}\r\n);\r\n}\r\n\r\n/**\r\n*@param{!MDCFloatingLabelAdapter}adapter\r\n*/\r\n\r\n}]);\r\n\r\n function MDCFloatingLabelFoundation(adapter){\r\n _classCallCheck(this,MDCFloatingLabelFoundation);\r\n\r\n/**@private{function(!Event):undefined}*/\r\n var _this=_possibleConstructorReturn(this,(MDCFloatingLabelFoundation.__proto__||Object.getPrototypeOf(MDCFloatingLabelFoundation)).call(this,_extends(MDCFloatingLabelFoundation.defaultAdapter,adapter)));\r\n\r\n _this.shakeAnimationEndHandler_=function(){\r\n return _this.handleShakeAnimationEnd_();\r\n};\r\n return _this;\r\n}\r\n\r\n _createClass(MDCFloatingLabelFoundation,[{\r\n key:'init',\r\n value:function init(){\r\n this.adapter_.registerInteractionHandler('animationend',this.shakeAnimationEndHandler_);\r\n}\r\n},{\r\n key:'destroy',\r\n value:function destroy(){\r\n this.adapter_.deregisterInteractionHandler('animationend',this.shakeAnimationEndHandler_);\r\n}\r\n\r\n/**\r\n*Returns the width of the label element.\r\n*@return{number}\r\n*/\r\n\r\n},{\r\n key:'getWidth',\r\n value:function getWidth(){\r\n return this.adapter_.getWidth();\r\n}\r\n\r\n/**\r\n*Styles the label to produce the label shake for errors.\r\n*@param{boolean}shouldShake adds shake class if true,\r\n*otherwise removes shake class.\r\n*/\r\n\r\n},{\r\n key:'shake',\r\n value:function shake(shouldShake){\r\n var LABEL_SHAKE=MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;\r\n\r\n if(shouldShake){\r\n this.adapter_.addClass(LABEL_SHAKE);\r\n}else{\r\n this.adapter_.removeClass(LABEL_SHAKE);\r\n}\r\n}\r\n\r\n/**\r\n*Styles the label to float or dock.\r\n*@param{boolean}shouldFloat adds float class if true,otherwise remove\r\n*float and shake class to dock label.\r\n*/\r\n\r\n},{\r\n key:'float',\r\n value:function float(shouldFloat){\r\n var _MDCFloatingLabelFoun=MDCFloatingLabelFoundation.cssClasses,\r\n LABEL_FLOAT_ABOVE=_MDCFloatingLabelFoun.LABEL_FLOAT_ABOVE,\r\n LABEL_SHAKE=_MDCFloatingLabelFoun.LABEL_SHAKE;\r\n\r\n if(shouldFloat){\r\n this.adapter_.addClass(LABEL_FLOAT_ABOVE);\r\n}else{\r\n this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\r\n this.adapter_.removeClass(LABEL_SHAKE);\r\n}\r\n}\r\n\r\n/**\r\n*Handles an interaction event on the root element.\r\n*/\r\n\r\n},{\r\n key:'handleShakeAnimationEnd_',\r\n value:function handleShakeAnimationEnd_(){\r\n var LABEL_SHAKE=MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;\r\n\r\n this.adapter_.removeClass(LABEL_SHAKE);\r\n}\r\n}]);\r\n\r\n return MDCFloatingLabelFoundation;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\"/*default*/]);\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCFloatingLabelFoundation);\r\n\r\n/***/}),\r\n/*27*/\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"a\",function(){return cssClasses;});\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**@enum{string}*/\r\nvar cssClasses={\r\n LABEL_FLOAT_ABOVE:'mdc-floating-label--float-above',\r\n LABEL_SHAKE:'mdc-floating-label--shake',\r\n ROOT:'mdc-floating-label'\r\n};\r\n\r\n\r\n\r\n/***/}),\r\n/*28*/,\r\n/*29*/,\r\n/*30*/,\r\n/*31*/,\r\n/*32*/,\r\n/*33*/,\r\n/*34*/,\r\n/*35*/\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nObject.defineProperty(__webpack_exports__,\"__esModule\",{value:true});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCNotchedOutline\",function(){return MDCNotchedOutline;});\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_component__=__webpack_require__(1);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(22);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__foundation__=__webpack_require__(36);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_3__material_floating_label_index__=__webpack_require__(16);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_4__constants__=__webpack_require__(23);\r\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCNotchedOutlineFoundation\",function(){return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"];});\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCComponent<!MDCNotchedOutlineFoundation>}\r\n*@final\r\n*/\r\n\r\nvar MDCNotchedOutline=function(_MDCComponent){\r\n _inherits(MDCNotchedOutline,_MDCComponent);\r\n\r\n _createClass(MDCNotchedOutline,null,[{\r\n key:'attachTo',\r\n\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCNotchedOutline}\r\n*/\r\n value:function attachTo(root){\r\n return new MDCNotchedOutline(root);\r\n}\r\n/**@param{...?}args*/\r\n\r\n}]);\r\n\r\n function MDCNotchedOutline(){\r\n var _ref;\r\n\r\n _classCallCheck(this,MDCNotchedOutline);\r\n\r\n for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){\r\n args[_key]=arguments[_key];\r\n}\r\n\r\n/**@private{Element}*/\r\n var _this=_possibleConstructorReturn(this,(_ref=MDCNotchedOutline.__proto__||Object.getPrototypeOf(MDCNotchedOutline)).call.apply(_ref,[this].concat(args)));\r\n\r\n _this.notchElement_;\r\n return _this;\r\n}\r\n\r\n _createClass(MDCNotchedOutline,[{\r\n key:'initialSyncWithDOM',\r\n value:function initialSyncWithDOM(){\r\n var label=this.root_.querySelector('.'+__WEBPACK_IMPORTED_MODULE_3__material_floating_label_index__[\"MDCFloatingLabelFoundation\"].cssClasses.ROOT);\r\n this.notchElement_=this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__[\"c\"/*strings*/].NOTCH_ELEMENT_SELECTOR);\r\n\r\n if(label){\r\n label.style.transitionDuration='0s';\r\n this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_4__constants__[\"a\"/*cssClasses*/].OUTLINE_UPGRADED);\r\n requestAnimationFrame(function(){\r\n label.style.transitionDuration='';\r\n});\r\n}else{\r\n this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_4__constants__[\"a\"/*cssClasses*/].NO_LABEL);\r\n}\r\n}\r\n\r\n/**\r\n*Updates classes and styles to open the notch to the specified width.\r\n*@param{number}notchWidth The notch width in the outline.\r\n*/\r\n\r\n},{\r\n key:'notch',\r\n value:function notch(notchWidth){\r\n this.foundation_.notch(notchWidth);\r\n}\r\n\r\n/**\r\n*Updates classes and styles to close the notch.\r\n*/\r\n\r\n},{\r\n key:'closeNotch',\r\n value:function closeNotch(){\r\n this.foundation_.closeNotch();\r\n}\r\n\r\n/**\r\n*@return{!MDCNotchedOutlineFoundation}\r\n*/\r\n\r\n},{\r\n key:'getDefaultFoundation',\r\n value:function getDefaultFoundation(){\r\n var _this2=this;\r\n\r\n return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"/*default*/](\r\n/**@type{!MDCNotchedOutlineAdapter}*/_extends({\r\n addClass:function addClass(className){\r\n return _this2.root_.classList.add(className);\r\n},\r\n removeClass:function removeClass(className){\r\n return _this2.root_.classList.remove(className);\r\n},\r\n setNotchWidthProperty:function setNotchWidthProperty(width){\r\n return _this2.notchElement_.style.setProperty('width',width+'px');\r\n},\r\n removeNotchWidthProperty:function removeNotchWidthProperty(){\r\n return _this2.notchElement_.style.removeProperty('width');\r\n}\r\n}));\r\n}\r\n}]);\r\n\r\n return MDCNotchedOutline;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\"/*default*/]);\r\n\r\n\r\n\r\n/***/}),\r\n/*36*/\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__=__webpack_require__(0);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(22);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__constants__=__webpack_require__(23);\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCFoundation<!MDCNotchedOutlineAdapter>}\r\n*@final\r\n*/\r\n\r\nvar MDCNotchedOutlineFoundation=function(_MDCFoundation){\r\n _inherits(MDCNotchedOutlineFoundation,_MDCFoundation);\r\n\r\n _createClass(MDCNotchedOutlineFoundation,null,[{\r\n key:'strings',\r\n\r\n/**@return enum{string}*/\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"c\"/*strings*/];\r\n}\r\n\r\n/**@return enum{string}*/\r\n\r\n},{\r\n key:'cssClasses',\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/];\r\n}\r\n\r\n/**@return enum{number}*/\r\n\r\n},{\r\n key:'numbers',\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"/*numbers*/];\r\n}\r\n\r\n/**\r\n*{@see MDCNotchedOutlineAdapter}for typing information on parameters and return\r\n*types.\r\n*@return{!MDCNotchedOutlineAdapter}\r\n*/\r\n\r\n},{\r\n key:'defaultAdapter',\r\n get:function get(){\r\n return(/**@type{!MDCNotchedOutlineAdapter}*/{\r\n addClass:function addClass(){},\r\n removeClass:function removeClass(){},\r\n setNotchWidthProperty:function setNotchWidthProperty(){},\r\n removeNotchWidthProperty:function removeNotchWidthProperty(){}\r\n}\r\n);\r\n}\r\n\r\n/**\r\n*@param{!MDCNotchedOutlineAdapter}adapter\r\n*/\r\n\r\n}]);\r\n\r\n function MDCNotchedOutlineFoundation(adapter){\r\n _classCallCheck(this,MDCNotchedOutlineFoundation);\r\n\r\n return _possibleConstructorReturn(this,(MDCNotchedOutlineFoundation.__proto__||Object.getPrototypeOf(MDCNotchedOutlineFoundation)).call(this,_extends(MDCNotchedOutlineFoundation.defaultAdapter,adapter)));\r\n}\r\n\r\n/**\r\n*Adds the outline notched selector and updates the notch width\r\n*calculated based off of notchWidth.\r\n*@param{number}notchWidth\r\n*/\r\n\r\n\r\n _createClass(MDCNotchedOutlineFoundation,[{\r\n key:'notch',\r\n value:function notch(notchWidth){\r\n var OUTLINE_NOTCHED=MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;\r\n\r\n\r\n if(notchWidth>0){\r\n notchWidth+=__WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"/*numbers*/].NOTCH_ELEMENT_PADDING;//Add padding from left/right.\r\n}\r\n\r\n this.adapter_.setNotchWidthProperty(notchWidth);\r\n this.adapter_.addClass(OUTLINE_NOTCHED);\r\n}\r\n\r\n/**\r\n*Removes notched outline selector to close the notch in the outline.\r\n*/\r\n\r\n},{\r\n key:'closeNotch',\r\n value:function closeNotch(){\r\n var OUTLINE_NOTCHED=MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;\r\n\r\n this.adapter_.removeClass(OUTLINE_NOTCHED);\r\n this.adapter_.removeNotchWidthProperty();\r\n}\r\n}]);\r\n\r\n return MDCNotchedOutlineFoundation;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\"/*default*/]);\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCNotchedOutlineFoundation);\r\n\r\n/***/})\r\n/******/]);\r\n});\r\n//#sourceMappingURL=mdc.notchedOutline.js.map//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,\n//#sourceURL=webpack-internal:///./node_modules/@material/notched-outline/dist/mdc.notchedOutline.js\n");/***/}),/***/"./node_modules/@material/ripple/dist/mdc.ripple.js":/*!**********************************************************!*\;!***./node_modules/@material/ripple/dist/mdc.ripple.js***!;\**********************************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){eval("/*!\n Material Components for the Web\n Copyright(c)2019 Google Inc.\n License:MIT\n*/\n(function webpackUniversalModuleDefinition(root,factory){\n\tif(true)\n\t\tmodule.exports=factory();\n\telse{}\n})(this,function(){\nreturn/******/(function(modules){//webpackBootstrap\n/******/\t//The module cache\n/******/\tvar installedModules={};\n/******/\n/******/\t//The require function\n/******/\tfunction __webpack_require__(moduleId){\n/******/\n/******/\t\t//Check if module is in cache\n/******/\t\tif(installedModules[moduleId]){\n/******/\t\t\treturn installedModules[moduleId].exports;\n/******/\t\t}\n/******/\t\t//Create a new module(and put it into the cache)\n/******/\t\tvar module=installedModules[moduleId]={\n/******/\t\t\ti:moduleId,\n/******/\t\t\tl:false,\n/******/\t\t\texports:{}\n/******/\t\t};\n/******/\n/******/\t\t//Execute the module function\n/******/\t\tmodules[moduleId].call(module.exports,module,module.exports,__webpack_require__);\n/******/\n/******/\t\t//Flag the module as loaded\n/******/\t\tmodule.l=true;\n/******/\n/******/\t\t//Return the exports of the module\n/******/\t\treturn module.exports;\n/******/\t}\n/******/\n/******/\n/******/\t//expose the modules object(__webpack_modules__)\n/******/\t__webpack_require__.m=modules;\n/******/\n/******/\t//expose the module cache\n/******/\t__webpack_require__.c=installedModules;\n/******/\n/******/\t//define getter function for harmony exports\n/******/\t__webpack_require__.d=function(exports,name,getter){\n/******/\t\tif(!__webpack_require__.o(exports,name)){\n/******/\t\t\tObject.defineProperty(exports,name,{\n/******/\t\t\t\tconfigurable:false,\n/******/\t\t\t\tenumerable:true,\n/******/\t\t\t\tget:getter\n/******/\t\t\t});\n/******/\t\t}\n/******/\t};\n/******/\n/******/\t//getDefaultExport function for compatibility with non-harmony modules\n/******/\t__webpack_require__.n=function(module){\n/******/\t\tvar getter=module&&module.__esModule?\n/******/\t\t\tfunction getDefault(){return module['default'];}:\n/******/\t\t\tfunction getModuleExports(){return module;};\n/******/\t\t__webpack_require__.d(getter,'a',getter);\n/******/\t\treturn getter;\n/******/\t};\n/******/\n/******/\t//Object.prototype.hasOwnProperty.call\n/******/\t__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};\n/******/\n/******/\t//__webpack_public_path__\n/******/\t__webpack_require__.p=\"\";\n/******/\n/******/\t//Load entry module and return exports\n/******/\treturn __webpack_require__(__webpack_require__.s=4);\n/******/})\n/************************************************************************/\n/******/([\n/*0*/\n/***/(function(module,__webpack_exports__,__webpack_require__){\n\n\"use strict\";\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\n\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\n\n/**\n*@license\n*Copyright 2016 Google Inc.\n*\n*Permission is hereby granted,free of charge,to any person obtaining a copy\n*of this software and associated documentation files(the\"Software\"),to deal\n*in the Software without restriction,including without limitation the rights\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\n*copies of the Software,and to permit persons to whom the Software is\n*furnished to do so,subject to the following conditions:\n*\n*The above copyright notice and this permission notice shall be included in\n*all copies or substantial portions of the Software.\n*\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*THE SOFTWARE.\n*/\n\n/**\n*@template A\n*/\nvar MDCFoundation=function(){\n _createClass(MDCFoundation,null,[{\n key:\"cssClasses\",\n\n/**@return enum{cssClasses}*/\n get:function get(){\n//Classes extending MDCFoundation should implement this method to return an object which exports every\n//CSS class the foundation class needs as a property.e.g.{ACTIVE:'mdc-component--active'}\n return{};\n}\n\n/**@return enum{strings}*/\n\n},{\n key:\"strings\",\n get:function get(){\n//Classes extending MDCFoundation should implement this method to return an object which exports all\n//semantic strings as constants.e.g.{ARIA_ROLE:'tablist'}\n return{};\n}\n\n/**@return enum{numbers}*/\n\n},{\n key:\"numbers\",\n get:function get(){\n//Classes extending MDCFoundation should implement this method to return an object which exports all\n//of its semantic numbers as constants.e.g.{ANIMATION_DELAY_MS:350}\n return{};\n}\n\n/**@return{!Object}*/\n\n},{\n key:\"defaultAdapter\",\n get:function get(){\n//Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n//way of viewing the necessary methods of an adapter.In the future,this could also be used for adapter\n//validation.\n return{};\n}\n\n/**\n*@param{A=}adapter\n*/\n\n}]);\n\n function MDCFoundation(){\n var adapter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};\n\n _classCallCheck(this,MDCFoundation);\n\n/**@protected{!A}*/\n this.adapter_=adapter;\n}\n\n _createClass(MDCFoundation,[{\n key:\"init\",\n value:function init(){\n//Subclasses should override this method to perform initialization routines(registering events,etc.)\n}\n},{\n key:\"destroy\",\n value:function destroy(){\n//Subclasses should override this method to perform de-initialization routines(de-registering events,etc.)\n}\n}]);\n\n return MDCFoundation;\n}();\n\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCFoundation);\n\n/***/}),\n/*1*/\n/***/(function(module,__webpack_exports__,__webpack_require__){\n\n\"use strict\";\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__foundation__=__webpack_require__(0);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\n\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\n\n/**\n*@license\n*Copyright 2016 Google Inc.\n*\n*Permission is hereby granted,free of charge,to any person obtaining a copy\n*of this software and associated documentation files(the\"Software\"),to deal\n*in the Software without restriction,including without limitation the rights\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\n*copies of the Software,and to permit persons to whom the Software is\n*furnished to do so,subject to the following conditions:\n*\n*The above copyright notice and this permission notice shall be included in\n*all copies or substantial portions of the Software.\n*\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*THE SOFTWARE.\n*/\n\n\n\n/**\n*@template F\n*/\n\nvar MDCComponent=function(){\n _createClass(MDCComponent,null,[{\n key:'attachTo',\n\n/**\n*@param{!Element}root\n*@return{!MDCComponent}\n*/\n value:function attachTo(root){\n//Subclasses which extend MDCBase should provide an attachTo()method that takes a root element and\n//returns an instantiated component with its root set to that element.Also note that in the cases of\n//subclasses,an explicit foundation class will not have to be passed in;it will simply be initialized\n//from getDefaultFoundation().\n return new MDCComponent(root,new __WEBPACK_IMPORTED_MODULE_0__foundation__[\"a\"/*default*/]());\n}\n\n/**\n*@param{!Element}root\n*@param{F=}foundation\n*@param{...?}args\n*/\n\n}]);\n\n function MDCComponent(root){\n var foundation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;\n\n _classCallCheck(this,MDCComponent);\n\n/**@protected{!Element}*/\n this.root_=root;\n\n for(var _len=arguments.length,args=Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){\n args[_key-2]=arguments[_key];\n}\n\n this.initialize.apply(this,args);\n//Note that we initialize foundation here and not within the constructor's default param so that\n//this.root_ is defined and can be used within the foundation class.\n/**@protected{!F}*/\n this.foundation_=foundation===undefined?this.getDefaultFoundation():foundation;\n this.foundation_.init();\n this.initialSyncWithDOM();\n}\n\n _createClass(MDCComponent,[{\n key:'initialize',\n value:function initialize()/*...args*/{}\n//Subclasses can override this to do any additional setup work that would be considered part of a\n//\"constructor\".Essentially,it is a hook into the parent constructor before the foundation is\n//initialized.Any additional arguments besides root and foundation will be passed in here.\n\n\n/**\n*@return{!F}foundation\n*/\n\n},{\n key:'getDefaultFoundation',\n value:function getDefaultFoundation(){\n//Subclasses must override this method to return a properly configured foundation class for the\n//component.\n throw new Error('Subclasses must override getDefaultFoundation to return a properly configured'+'foundation class');\n}\n},{\n key:'initialSyncWithDOM',\n value:function initialSyncWithDOM(){\n//Subclasses should override this method if they need to perform work to synchronize with a host DOM\n//object.An example of this would be a form control wrapper that needs to synchronize its internal state\n//to some property or attribute of the host DOM.Please note:this is*not*the place to perform DOM\n//reads/writes that would cause layout/paint,as this is called synchronously from within the constructor.\n}\n},{\n key:'destroy',\n value:function destroy(){\n//Subclasses may implement this method to release any resources/deregister any listeners they have\n//attached.An example of this might be deregistering a resize event from the window object.\n this.foundation_.destroy();\n}\n\n/**\n*Wrapper method to add an event listener to the component's root element.This is most useful when\n*listening for custom events.\n*@param{string}evtType\n*@param{!Function}handler\n*/\n\n},{\n key:'listen',\n value:function listen(evtType,handler){\n this.root_.addEventListener(evtType,handler);\n}\n\n/**\n*Wrapper method to remove an event listener to the component's root element.This is most useful when\n*unlistening for custom events.\n*@param{string}evtType\n*@param{!Function}handler\n*/\n\n},{\n key:'unlisten',\n value:function unlisten(evtType,handler){\n this.root_.removeEventListener(evtType,handler);\n}\n\n/**\n*Fires a cross-browser-compatible custom event from the component root of the given type,\n*with the given data.\n*@param{string}evtType\n*@param{!Object}evtData\n*@param{boolean=}shouldBubble\n*/\n\n},{\n key:'emit',\n value:function emit(evtType,evtData){\n var shouldBubble=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;\n\n var evt=void 0;\n if(typeof CustomEvent==='function'){\n evt=new CustomEvent(evtType,{\n detail:evtData,\n bubbles:shouldBubble\n});\n}else{\n evt=document.createEvent('CustomEvent');\n evt.initCustomEvent(evtType,shouldBubble,false,evtData);\n}\n\n this.root_.dispatchEvent(evt);\n}\n}]);\n\n return MDCComponent;\n}();\n\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCComponent);\n\n/***/}),\n/*2*/\n/***/(function(module,__webpack_exports__,__webpack_require__){\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__,\"__esModule\",{value:true});\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"supportsCssVariables\",function(){return supportsCssVariables;});\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"applyPassive\",function(){return applyPassive;});\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"getMatchesProperty\",function(){return getMatchesProperty;});\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"getNormalizedEventCoords\",function(){return getNormalizedEventCoords;});\n/**\n*@license\n*Copyright 2016 Google Inc.\n*\n*Permission is hereby granted,free of charge,to any person obtaining a copy\n*of this software and associated documentation files(the\"Software\"),to deal\n*in the Software without restriction,including without limitation the rights\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\n*copies of the Software,and to permit persons to whom the Software is\n*furnished to do so,subject to the following conditions:\n*\n*The above copyright notice and this permission notice shall be included in\n*all copies or substantial portions of the Software.\n*\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*THE SOFTWARE.\n*/\n\n/**\n*Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n*@private{boolean|undefined}\n*/\nvar supportsCssVariables_=void 0;\n\n/**\n*Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n*@private{boolean|undefined}\n*/\nvar supportsPassive_=void 0;\n\n/**\n*@param{!Window}windowObj\n*@return{boolean}\n*/\nfunction detectEdgePseudoVarBug(windowObj){\n//Detect versions of Edge with buggy var()support\n//See:https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n var document=windowObj.document;\n var node=document.createElement('div');\n node.className='mdc-ripple-surface--test-edge-var-bug';\n document.body.appendChild(node);\n\n//The bug exists if::before style ends up propagating to the parent element.\n//Additionally,getComputedStyle returns null in iframes with display:\"none\"in Firefox,\n//but Firefox is known to support CSS custom properties correctly.\n//See:https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n var computedStyle=windowObj.getComputedStyle(node);\n var hasPseudoVarBug=computedStyle!==null&&computedStyle.borderTopStyle==='solid';\n node.remove();\n return hasPseudoVarBug;\n}\n\n/**\n*@param{!Window}windowObj\n*@param{boolean=}forceRefresh\n*@return{boolean|undefined}\n*/\n\nfunction supportsCssVariables(windowObj){\n var forceRefresh=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;\n\n var supportsCssVariables=supportsCssVariables_;\n if(typeof supportsCssVariables_==='boolean'&&!forceRefresh){\n return supportsCssVariables;\n}\n\n var supportsFunctionPresent=windowObj.CSS&&typeof windowObj.CSS.supports==='function';\n if(!supportsFunctionPresent){\n return;\n}\n\n var explicitlySupportsCssVars=windowObj.CSS.supports('--css-vars','yes');\n//See:https://bugs.webkit.org/show_bug.cgi?id=154669\n//See:README section on Safari\n var weAreFeatureDetectingSafari10plus=windowObj.CSS.supports('(--css-vars:yes)')&&windowObj.CSS.supports('color','#00000000');\n\n if(explicitlySupportsCssVars||weAreFeatureDetectingSafari10plus){\n supportsCssVariables=!detectEdgePseudoVarBug(windowObj);\n}else{\n supportsCssVariables=false;\n}\n\n if(!forceRefresh){\n supportsCssVariables_=supportsCssVariables;\n}\n return supportsCssVariables;\n}\n\n//\n/**\n*Determine whether the current browser supports passive event listeners,and if so,use them.\n*@param{!Window=}globalObj\n*@param{boolean=}forceRefresh\n*@return{boolean|!EventListenerOptions}\n*/\nfunction applyPassive(){\n var globalObj=arguments.length>0&&arguments[0]!==undefined?arguments[0]:window;\n var forceRefresh=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;\n\n if(supportsPassive_===undefined||forceRefresh){\n var isSupported=false;\n try{\n globalObj.document.addEventListener('test',null,{get passive(){\n isSupported=true;\n return isSupported;\n}});\n}catch(e){}\n\n supportsPassive_=isSupported;\n}\n\n return supportsPassive_?/**@type{!EventListenerOptions}*/{passive:true}:false;\n}\n\n/**\n*@param{!Object}HTMLElementPrototype\n*@return{string}\n*/\nfunction getMatchesProperty(HTMLElementPrototype){\n/**\n*Order is important because we return the first existing method we find.\n*Do not change the order of the items in the below array.\n*/\n var matchesMethods=['matches','webkitMatchesSelector','msMatchesSelector'];\n var method='matches';\n for(var i=0;i<matchesMethods.length;i++){\n var matchesMethod=matchesMethods[i];\n if(matchesMethod in HTMLElementPrototype){\n method=matchesMethod;\n break;\n}\n}\n\n return method;\n}\n\n/**\n*@param{!Event}ev\n*@param{{x:number,y:number}}pageOffset\n*@param{!ClientRect}clientRect\n*@return{{x:number,y:number}}\n*/\nfunction getNormalizedEventCoords(ev,pageOffset,clientRect){\n var x=pageOffset.x,\n y=pageOffset.y;\n\n var documentX=x+clientRect.left;\n var documentY=y+clientRect.top;\n\n var normalizedX=void 0;\n var normalizedY=void 0;\n//Determine touch point relative to the ripple container.\n if(ev.type==='touchstart'){\n ev=/**@type{!TouchEvent}*/ev;\n normalizedX=ev.changedTouches[0].pageX-documentX;\n normalizedY=ev.changedTouches[0].pageY-documentY;\n}else{\n ev=/**@type{!MouseEvent}*/ev;\n normalizedX=ev.pageX-documentX;\n normalizedY=ev.pageY-documentY;\n}\n\n return{x:normalizedX,y:normalizedY};\n}\n\n\n\n/***/}),\n/*3*/\n/***/(function(module,__webpack_exports__,__webpack_require__){\n\n\"use strict\";\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\n\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\n\n/**\n*@license\n*Copyright 2016 Google Inc.\n*\n*Permission is hereby granted,free of charge,to any person obtaining a copy\n*of this software and associated documentation files(the\"Software\"),to deal\n*in the Software without restriction,including without limitation the rights\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\n*copies of the Software,and to permit persons to whom the Software is\n*furnished to do so,subject to the following conditions:\n*\n*The above copyright notice and this permission notice shall be included in\n*all copies or substantial portions of the Software.\n*\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*THE SOFTWARE.\n*/\n\n/*eslint no-unused-vars:[2,{\"args\":\"none\"}]*/\n\n/**\n*Adapter for MDC Ripple.Provides an interface for managing\n*-classes\n*-dom\n*-CSS variables\n*-position\n*-dimensions\n*-scroll position\n*-event handlers\n*-unbounded,active and disabled states\n*\n*Additionally,provides type information for the adapter to the Closure\n*compiler.\n*\n*Implement this adapter for your framework of choice to delegate updates to\n*the component in your framework of choice.See architecture documentation\n*for more details.\n*https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n*\n*@record\n*/\nvar MDCRippleAdapter=function(){\n function MDCRippleAdapter(){\n _classCallCheck(this,MDCRippleAdapter);\n}\n\n _createClass(MDCRippleAdapter,[{\n key:\"browserSupportsCssVars\",\n\n/**@return{boolean}*/\n value:function browserSupportsCssVars(){}\n\n/**@return{boolean}*/\n\n},{\n key:\"isUnbounded\",\n value:function isUnbounded(){}\n\n/**@return{boolean}*/\n\n},{\n key:\"isSurfaceActive\",\n value:function isSurfaceActive(){}\n\n/**@return{boolean}*/\n\n},{\n key:\"isSurfaceDisabled\",\n value:function isSurfaceDisabled(){}\n\n/**@param{string}className*/\n\n},{\n key:\"addClass\",\n value:function addClass(className){}\n\n/**@param{string}className*/\n\n},{\n key:\"removeClass\",\n value:function removeClass(className){}\n\n/**@param{!EventTarget}target*/\n\n},{\n key:\"containsEventTarget\",\n value:function containsEventTarget(target){}\n\n/**\n*@param{string}evtType\n*@param{!Function}handler\n*/\n\n},{\n key:\"registerInteractionHandler\",\n value:function registerInteractionHandler(evtType,handler){}\n\n/**\n*@param{string}evtType\n*@param{!Function}handler\n*/\n\n},{\n key:\"deregisterInteractionHandler\",\n value:function deregisterInteractionHandler(evtType,handler){}\n\n/**\n*@param{string}evtType\n*@param{!Function}handler\n*/\n\n},{\n key:\"registerDocumentInteractionHandler\",\n value:function registerDocumentInteractionHandler(evtType,handler){}\n\n/**\n*@param{string}evtType\n*@param{!Function}handler\n*/\n\n},{\n key:\"deregisterDocumentInteractionHandler\",\n value:function deregisterDocumentInteractionHandler(evtType,handler){}\n\n/**\n*@param{!Function}handler\n*/\n\n},{\n key:\"registerResizeHandler\",\n value:function registerResizeHandler(handler){}\n\n/**\n*@param{!Function}handler\n*/\n\n},{\n key:\"deregisterResizeHandler\",\n value:function deregisterResizeHandler(handler){}\n\n/**\n*@param{string}varName\n*@param{?number|string}value\n*/\n\n},{\n key:\"updateCssVariable\",\n value:function updateCssVariable(varName,value){}\n\n/**@return{!ClientRect}*/\n\n},{\n key:\"computeBoundingRect\",\n value:function computeBoundingRect(){}\n\n/**@return{{x:number,y:number}}*/\n\n},{\n key:\"getWindowPageOffset\",\n value:function getWindowPageOffset(){}\n}]);\n\n return MDCRippleAdapter;\n}();\n\n/*unused harmony default export*/var _unused_webpack_default_export=(MDCRippleAdapter);\n\n/***/}),\n/*4*/\n/***/(function(module,__webpack_exports__,__webpack_require__){\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__,\"__esModule\",{value:true});\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCRipple\",function(){return MDCRipple;});\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"RippleCapableSurface\",function(){return RippleCapableSurface;});\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_component__=__webpack_require__(1);\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(3);\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__foundation__=__webpack_require__(5);\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_3__util__=__webpack_require__(2);\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCRippleFoundation\",function(){return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"];});\n/*harmony reexport(module object)*/__webpack_require__.d(__webpack_exports__,\"util\",function(){return __WEBPACK_IMPORTED_MODULE_3__util__;});\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\n\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\n\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\n\n/**\n*@license\n*Copyright 2016 Google Inc.\n*\n*Permission is hereby granted,free of charge,to any person obtaining a copy\n*of this software and associated documentation files(the\"Software\"),to deal\n*in the Software without restriction,including without limitation the rights\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\n*copies of the Software,and to permit persons to whom the Software is\n*furnished to do so,subject to the following conditions:\n*\n*The above copyright notice and this permission notice shall be included in\n*all copies or substantial portions of the Software.\n*\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*THE SOFTWARE.\n*/\n\n\n\n\n\n\n/**\n*@extends MDCComponent<!MDCRippleFoundation>\n*/\n\nvar MDCRipple=function(_MDCComponent){\n _inherits(MDCRipple,_MDCComponent);\n\n/**@param{...?}args*/\n function MDCRipple(){\n var _ref;\n\n _classCallCheck(this,MDCRipple);\n\n for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){\n args[_key]=arguments[_key];\n}\n\n/**@type{boolean}*/\n var _this=_possibleConstructorReturn(this,(_ref=MDCRipple.__proto__||Object.getPrototypeOf(MDCRipple)).call.apply(_ref,[this].concat(args)));\n\n _this.disabled=false;\n\n/**@private{boolean}*/\n _this.unbounded_;\n return _this;\n}\n\n/**\n*@param{!Element}root\n*@param{{isUnbounded:(boolean|undefined)}=}options\n*@return{!MDCRipple}\n*/\n\n\n _createClass(MDCRipple,[{\n key:'setUnbounded_',\n\n\n/**\n*Closure Compiler throws an access control error when directly accessing a\n*protected or private property inside a getter/setter,like unbounded above.\n*By accessing the protected property inside a method,we solve that problem.\n*That's why this function exists.\n*@private\n*/\n value:function setUnbounded_(){\n this.foundation_.setUnbounded(this.unbounded_);\n}\n},{\n key:'activate',\n value:function activate(){\n this.foundation_.activate();\n}\n},{\n key:'deactivate',\n value:function deactivate(){\n this.foundation_.deactivate();\n}\n},{\n key:'layout',\n value:function layout(){\n this.foundation_.layout();\n}\n\n/**\n*@return{!MDCRippleFoundation}\n*@override\n*/\n\n},{\n key:'getDefaultFoundation',\n value:function getDefaultFoundation(){\n return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"/*default*/](MDCRipple.createAdapter(this));\n}\n\n/**@override*/\n\n},{\n key:'initialSyncWithDOM',\n value:function initialSyncWithDOM(){\n this.unbounded='mdcRippleIsUnbounded'in this.root_.dataset;\n}\n},{\n key:'unbounded',\n\n\n/**@return{boolean}*/\n get:function get(){\n return this.unbounded_;\n}\n\n/**@param{boolean}unbounded*/\n,\n set:function set(unbounded){\n this.unbounded_=Boolean(unbounded);\n this.setUnbounded_();\n}\n}],[{\n key:'attachTo',\n value:function attachTo(root){\n var _ref2=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},\n _ref2$isUnbounded=_ref2.isUnbounded,\n isUnbounded=_ref2$isUnbounded===undefined?undefined:_ref2$isUnbounded;\n\n var ripple=new MDCRipple(root);\n//Only override unbounded behavior if option is explicitly specified\n if(isUnbounded!==undefined){\n ripple.unbounded=/**@type{boolean}*/isUnbounded;\n}\n return ripple;\n}\n\n/**\n*@param{!RippleCapableSurface}instance\n*@return{!MDCRippleAdapter}\n*/\n\n},{\n key:'createAdapter',\n value:function createAdapter(instance){\n var MATCHES=__WEBPACK_IMPORTED_MODULE_3__util__[\"getMatchesProperty\"](HTMLElement.prototype);\n\n return{\n browserSupportsCssVars:function browserSupportsCssVars(){\n return __WEBPACK_IMPORTED_MODULE_3__util__[\"supportsCssVariables\"](window);\n},\n isUnbounded:function isUnbounded(){\n return instance.unbounded;\n},\n isSurfaceActive:function isSurfaceActive(){\n return instance.root_[MATCHES](':active');\n},\n isSurfaceDisabled:function isSurfaceDisabled(){\n return instance.disabled;\n},\n addClass:function addClass(className){\n return instance.root_.classList.add(className);\n},\n removeClass:function removeClass(className){\n return instance.root_.classList.remove(className);\n},\n containsEventTarget:function containsEventTarget(target){\n return instance.root_.contains(target);\n},\n registerInteractionHandler:function registerInteractionHandler(evtType,handler){\n return instance.root_.addEventListener(evtType,handler,__WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\n},\n deregisterInteractionHandler:function deregisterInteractionHandler(evtType,handler){\n return instance.root_.removeEventListener(evtType,handler,__WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\n},\n registerDocumentInteractionHandler:function registerDocumentInteractionHandler(evtType,handler){\n return document.documentElement.addEventListener(evtType,handler,__WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\n},\n deregisterDocumentInteractionHandler:function deregisterDocumentInteractionHandler(evtType,handler){\n return document.documentElement.removeEventListener(evtType,handler,__WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\n},\n registerResizeHandler:function registerResizeHandler(handler){\n return window.addEventListener('resize',handler);\n},\n deregisterResizeHandler:function deregisterResizeHandler(handler){\n return window.removeEventListener('resize',handler);\n},\n updateCssVariable:function updateCssVariable(varName,value){\n return instance.root_.style.setProperty(varName,value);\n},\n computeBoundingRect:function computeBoundingRect(){\n return instance.root_.getBoundingClientRect();\n},\n getWindowPageOffset:function getWindowPageOffset(){\n return{x:window.pageXOffset,y:window.pageYOffset};\n}\n};\n}\n}]);\n\n return MDCRipple;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\"/*default*/]);\n\n/**\n*See Material Design spec for more details on when to use ripples.\n*https://material.io/guidelines/motion/choreography.html#choreography-creation\n*@record\n*/\n\n\nvar RippleCapableSurface=function RippleCapableSurface(){\n _classCallCheck(this,RippleCapableSurface);\n};\n\n/**@protected{!Element}*/\n\n\nRippleCapableSurface.prototype.root_;\n\n/**\n*Whether or not the ripple bleeds out of the bounds of the element.\n*@type{boolean|undefined}\n*/\nRippleCapableSurface.prototype.unbounded;\n\n/**\n*Whether or not the ripple is attached to a disabled component.\n*@type{boolean|undefined}\n*/\nRippleCapableSurface.prototype.disabled;\n\n\n\n/***/}),\n/*5*/\n/***/(function(module,__webpack_exports__,__webpack_require__){\n\n\"use strict\";\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__=__webpack_require__(0);\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(3);\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__constants__=__webpack_require__(6);\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_3__util__=__webpack_require__(2);\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\n\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\n\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\n\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\n\n/**\n*@license\n*Copyright 2016 Google Inc.\n*\n*Permission is hereby granted,free of charge,to any person obtaining a copy\n*of this software and associated documentation files(the\"Software\"),to deal\n*in the Software without restriction,including without limitation the rights\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\n*copies of the Software,and to permit persons to whom the Software is\n*furnished to do so,subject to the following conditions:\n*\n*The above copyright notice and this permission notice shall be included in\n*all copies or substantial portions of the Software.\n*\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*THE SOFTWARE.\n*/\n\n\n\n\n\n\n/**\n*@typedef{{\n*isActivated:(boolean|undefined),\n*hasDeactivationUXRun:(boolean|undefined),\n*wasActivatedByPointer:(boolean|undefined),\n*wasElementMadeActive:(boolean|undefined),\n*activationEvent:(!Event|undefined),\n*isProgrammatic:(boolean|undefined)\n*}}\n*/\nvar ActivationStateType=void 0;\n\n/**\n*@typedef{{\n*activate:(string|undefined),\n*deactivate:(string|undefined),\n*focus:(string|undefined),\n*blur:(string|undefined)\n*}}\n*/\nvar ListenerInfoType=void 0;\n\n/**\n*@typedef{{\n*activate:function(!Event),\n*deactivate:function(!Event=),\n*focus:function(),\n*blur:function()\n*}}\n*/\nvar ListenersType=void 0;\n\n/**\n*@typedef{{\n*x:number,\n*y:number\n*}}\n*/\nvar PointType=void 0;\n\n//Activation events registered on the root element of each instance for activation\nvar ACTIVATION_EVENT_TYPES=['touchstart','pointerdown','mousedown','keydown'];\n\n//Deactivation events registered on documentElement when a pointer-related down event occurs\nvar POINTER_DEACTIVATION_EVENT_TYPES=['touchend','pointerup','mouseup','contextmenu'];\n\n//Tracks activations that have occurred on the current frame,to avoid simultaneous nested activations\n/**@type{!Array<!EventTarget>}*/\nvar activatedTargets=[];\n\n/**\n*@extends{MDCFoundation<!MDCRippleAdapter>}\n*/\n\nvar MDCRippleFoundation=function(_MDCFoundation){\n _inherits(MDCRippleFoundation,_MDCFoundation);\n\n _createClass(MDCRippleFoundation,null,[{\n key:'cssClasses',\n get:function get(){\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/];\n}\n},{\n key:'strings',\n get:function get(){\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"c\"/*strings*/];\n}\n},{\n key:'numbers',\n get:function get(){\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"/*numbers*/];\n}\n},{\n key:'defaultAdapter',\n get:function get(){\n return{\n browserSupportsCssVars:function browserSupportsCssVars()/*boolean-cached*/{},\n isUnbounded:function isUnbounded()/*boolean*/{},\n isSurfaceActive:function isSurfaceActive()/*boolean*/{},\n isSurfaceDisabled:function isSurfaceDisabled()/*boolean*/{},\n addClass:function addClass()/*className:string*/{},\n removeClass:function removeClass()/*className:string*/{},\n containsEventTarget:function containsEventTarget()/*target:!EventTarget*/{},\n registerInteractionHandler:function registerInteractionHandler()/*evtType:string,handler:EventListener*/{},\n deregisterInteractionHandler:function deregisterInteractionHandler()/*evtType:string,handler:EventListener*/{},\n registerDocumentInteractionHandler:function registerDocumentInteractionHandler()/*evtType:string,handler:EventListener*/{},\n deregisterDocumentInteractionHandler:function deregisterDocumentInteractionHandler()/*evtType:string,handler:EventListener*/{},\n registerResizeHandler:function registerResizeHandler()/*handler:EventListener*/{},\n deregisterResizeHandler:function deregisterResizeHandler()/*handler:EventListener*/{},\n updateCssVariable:function updateCssVariable()/*varName:string,value:string*/{},\n computeBoundingRect:function computeBoundingRect()/*ClientRect*/{},\n getWindowPageOffset:function getWindowPageOffset()/*{x:number,y:number}*/{}\n};\n}\n}]);\n\n function MDCRippleFoundation(adapter){\n _classCallCheck(this,MDCRippleFoundation);\n\n/**@private{number}*/\n var _this=_possibleConstructorReturn(this,(MDCRippleFoundation.__proto__||Object.getPrototypeOf(MDCRippleFoundation)).call(this,_extends(MDCRippleFoundation.defaultAdapter,adapter)));\n\n _this.layoutFrame_=0;\n\n/**@private{!ClientRect}*/\n _this.frame_=/**@type{!ClientRect}*/{width:0,height:0};\n\n/**@private{!ActivationStateType}*/\n _this.activationState_=_this.defaultActivationState_();\n\n/**@private{number}*/\n _this.initialSize_=0;\n\n/**@private{number}*/\n _this.maxRadius_=0;\n\n/**@private{function(!Event)}*/\n _this.activateHandler_=function(e){\n return _this.activate_(e);\n};\n\n/**@private{function(!Event=)}*/\n _this.deactivateHandler_=function(){\n return _this.deactivate_();\n};\n\n/**@private{function(!Event=)}*/\n _this.focusHandler_=function(){\n return _this.handleFocus();\n};\n\n/**@private{function(!Event=)}*/\n _this.blurHandler_=function(){\n return _this.handleBlur();\n};\n\n/**@private{!Function}*/\n _this.resizeHandler_=function(){\n return _this.layout();\n};\n\n/**@private{{left:number,top:number}}*/\n _this.unboundedCoords_={\n left:0,\n top:0\n};\n\n/**@private{number}*/\n _this.fgScale_=0;\n\n/**@private{number}*/\n _this.activationTimer_=0;\n\n/**@private{number}*/\n _this.fgDeactivationRemovalTimer_=0;\n\n/**@private{boolean}*/\n _this.activationAnimationHasEnded_=false;\n\n/**@private{!Function}*/\n _this.activationTimerCallback_=function(){\n _this.activationAnimationHasEnded_=true;\n _this.runDeactivationUXLogicIfReady_();\n};\n\n/**@private{!Event|undefined}*/\n _this.previousActivationEvent_;\n return _this;\n}\n\n/**\n*We compute this property so that we are not querying information about the client\n*until the point in time where the foundation requests it.This prevents scenarios where\n*client-side feature-detection may happen too early,such as when components are rendered on the server\n*and then initialized at mount time on the client.\n*@return{boolean}\n*@private\n*/\n\n\n _createClass(MDCRippleFoundation,[{\n key:'supportsPressRipple_',\n value:function supportsPressRipple_(){\n return this.adapter_.browserSupportsCssVars();\n}\n\n/**\n*@return{!ActivationStateType}\n*/\n\n},{\n key:'defaultActivationState_',\n value:function defaultActivationState_(){\n return{\n isActivated:false,\n hasDeactivationUXRun:false,\n wasActivatedByPointer:false,\n wasElementMadeActive:false,\n activationEvent:undefined,\n isProgrammatic:false\n};\n}\n\n/**@override*/\n\n},{\n key:'init',\n value:function init(){\n var _this2=this;\n\n var supportsPressRipple=this.supportsPressRipple_();\n\n this.registerRootHandlers_(supportsPressRipple);\n\n if(supportsPressRipple){\n var _MDCRippleFoundation$=MDCRippleFoundation.cssClasses,\n ROOT=_MDCRippleFoundation$.ROOT,\n UNBOUNDED=_MDCRippleFoundation$.UNBOUNDED;\n\n requestAnimationFrame(function(){\n _this2.adapter_.addClass(ROOT);\n if(_this2.adapter_.isUnbounded()){\n _this2.adapter_.addClass(UNBOUNDED);\n//Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n _this2.layoutInternal_();\n}\n});\n}\n}\n\n/**@override*/\n\n},{\n key:'destroy',\n value:function destroy(){\n var _this3=this;\n\n if(this.supportsPressRipple_()){\n if(this.activationTimer_){\n clearTimeout(this.activationTimer_);\n this.activationTimer_=0;\n this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n}\n\n if(this.fgDeactivationRemovalTimer_){\n clearTimeout(this.fgDeactivationRemovalTimer_);\n this.fgDeactivationRemovalTimer_=0;\n this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n}\n\n var _MDCRippleFoundation$2=MDCRippleFoundation.cssClasses,\n ROOT=_MDCRippleFoundation$2.ROOT,\n UNBOUNDED=_MDCRippleFoundation$2.UNBOUNDED;\n\n requestAnimationFrame(function(){\n _this3.adapter_.removeClass(ROOT);\n _this3.adapter_.removeClass(UNBOUNDED);\n _this3.removeCssVars_();\n});\n}\n\n this.deregisterRootHandlers_();\n this.deregisterDeactivationHandlers_();\n}\n\n/**\n*@param{boolean}supportsPressRipple Passed from init to save a redundant function call\n*@private\n*/\n\n},{\n key:'registerRootHandlers_',\n value:function registerRootHandlers_(supportsPressRipple){\n var _this4=this;\n\n if(supportsPressRipple){\n ACTIVATION_EVENT_TYPES.forEach(function(type){\n _this4.adapter_.registerInteractionHandler(type,_this4.activateHandler_);\n});\n if(this.adapter_.isUnbounded()){\n this.adapter_.registerResizeHandler(this.resizeHandler_);\n}\n}\n\n this.adapter_.registerInteractionHandler('focus',this.focusHandler_);\n this.adapter_.registerInteractionHandler('blur',this.blurHandler_);\n}\n\n/**\n*@param{!Event}e\n*@private\n*/\n\n},{\n key:'registerDeactivationHandlers_',\n value:function registerDeactivationHandlers_(e){\n var _this5=this;\n\n if(e.type==='keydown'){\n this.adapter_.registerInteractionHandler('keyup',this.deactivateHandler_);\n}else{\n POINTER_DEACTIVATION_EVENT_TYPES.forEach(function(type){\n _this5.adapter_.registerDocumentInteractionHandler(type,_this5.deactivateHandler_);\n});\n}\n}\n\n/**@private*/\n\n},{\n key:'deregisterRootHandlers_',\n value:function deregisterRootHandlers_(){\n var _this6=this;\n\n ACTIVATION_EVENT_TYPES.forEach(function(type){\n _this6.adapter_.deregisterInteractionHandler(type,_this6.activateHandler_);\n});\n this.adapter_.deregisterInteractionHandler('focus',this.focusHandler_);\n this.adapter_.deregisterInteractionHandler('blur',this.blurHandler_);\n\n if(this.adapter_.isUnbounded()){\n this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n}\n}\n\n/**@private*/\n\n},{\n key:'deregisterDeactivationHandlers_',\n value:function deregisterDeactivationHandlers_(){\n var _this7=this;\n\n this.adapter_.deregisterInteractionHandler('keyup',this.deactivateHandler_);\n POINTER_DEACTIVATION_EVENT_TYPES.forEach(function(type){\n _this7.adapter_.deregisterDocumentInteractionHandler(type,_this7.deactivateHandler_);\n});\n}\n\n/**@private*/\n\n},{\n key:'removeCssVars_',\n value:function removeCssVars_(){\n var _this8=this;\n\n var strings=MDCRippleFoundation.strings;\n\n Object.keys(strings).forEach(function(k){\n if(k.indexOf('VAR_')===0){\n _this8.adapter_.updateCssVariable(strings[k],null);\n}\n});\n}\n\n/**\n*@param{!Event=}e\n*@private\n*/\n\n},{\n key:'activate_',\n value:function activate_(e){\n var _this9=this;\n\n if(this.adapter_.isSurfaceDisabled()){\n return;\n}\n\n var activationState=this.activationState_;\n if(activationState.isActivated){\n return;\n}\n\n//Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n var previousActivationEvent=this.previousActivationEvent_;\n var isSameInteraction=previousActivationEvent&&e!==undefined&&previousActivationEvent.type!==e.type;\n if(isSameInteraction){\n return;\n}\n\n activationState.isActivated=true;\n activationState.isProgrammatic=e===undefined;\n activationState.activationEvent=e;\n activationState.wasActivatedByPointer=activationState.isProgrammatic?false:e!==undefined&&(e.type==='mousedown'||e.type==='touchstart'||e.type==='pointerdown');\n\n var hasActivatedChild=e!==undefined&&activatedTargets.length>0&&activatedTargets.some(function(target){\n return _this9.adapter_.containsEventTarget(target);\n});\n if(hasActivatedChild){\n//Immediately reset activation state,while preserving logic that prevents touch follow-on events\n this.resetActivationState_();\n return;\n}\n\n if(e!==undefined){\n activatedTargets.push(/**@type{!EventTarget}*/e.target);\n this.registerDeactivationHandlers_(e);\n}\n\n activationState.wasElementMadeActive=this.checkElementMadeActive_(e);\n if(activationState.wasElementMadeActive){\n this.animateActivation_();\n}\n\n requestAnimationFrame(function(){\n//Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n activatedTargets=[];\n\n if(!activationState.wasElementMadeActive&&e!==undefined&&(e.key===''||e.keyCode===32)){\n//If space was pressed,try again within an rAF call to detect:active,because different UAs report\n//active states inconsistently when they're called within event handling code:\n//-https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n//-https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n//We try first outside rAF to support Edge,which does not exhibit this problem,but will crash if a CSS\n//variable is set within a rAF callback for a submit button interaction(#2241).\n activationState.wasElementMadeActive=_this9.checkElementMadeActive_(e);\n if(activationState.wasElementMadeActive){\n _this9.animateActivation_();\n}\n}\n\n if(!activationState.wasElementMadeActive){\n//Reset activation state immediately if element was not made active.\n _this9.activationState_=_this9.defaultActivationState_();\n}\n});\n}\n\n/**\n*@param{!Event=}e\n*@private\n*/\n\n},{\n key:'checkElementMadeActive_',\n value:function checkElementMadeActive_(e){\n return e!==undefined&&e.type==='keydown'?this.adapter_.isSurfaceActive():true;\n}\n\n/**\n*@param{!Event=}event Optional event containing position information.\n*/\n\n},{\n key:'activate',\n value:function activate(event){\n this.activate_(event);\n}\n\n/**@private*/\n\n},{\n key:'animateActivation_',\n value:function animateActivation_(){\n var _this10=this;\n\n var _MDCRippleFoundation$3=MDCRippleFoundation.strings,\n VAR_FG_TRANSLATE_START=_MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,\n VAR_FG_TRANSLATE_END=_MDCRippleFoundation$3.VAR_FG_TRANSLATE_END;\n var _MDCRippleFoundation$4=MDCRippleFoundation.cssClasses,\n FG_DEACTIVATION=_MDCRippleFoundation$4.FG_DEACTIVATION,\n FG_ACTIVATION=_MDCRippleFoundation$4.FG_ACTIVATION;\n var DEACTIVATION_TIMEOUT_MS=MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;\n\n\n this.layoutInternal_();\n\n var translateStart='';\n var translateEnd='';\n\n if(!this.adapter_.isUnbounded()){\n var _getFgTranslationCoor=this.getFgTranslationCoordinates_(),\n startPoint=_getFgTranslationCoor.startPoint,\n endPoint=_getFgTranslationCoor.endPoint;\n\n translateStart=startPoint.x+'px,'+startPoint.y+'px';\n translateEnd=endPoint.x+'px,'+endPoint.y+'px';\n}\n\n this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START,translateStart);\n this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END,translateEnd);\n//Cancel any ongoing activation/deactivation animations\n clearTimeout(this.activationTimer_);\n clearTimeout(this.fgDeactivationRemovalTimer_);\n this.rmBoundedActivationClasses_();\n this.adapter_.removeClass(FG_DEACTIVATION);\n\n//Force layout in order to re-trigger the animation.\n this.adapter_.computeBoundingRect();\n this.adapter_.addClass(FG_ACTIVATION);\n this.activationTimer_=setTimeout(function(){\n return _this10.activationTimerCallback_();\n},DEACTIVATION_TIMEOUT_MS);\n}\n\n/**\n*@private\n*@return{{startPoint:PointType,endPoint:PointType}}\n*/\n\n},{\n key:'getFgTranslationCoordinates_',\n value:function getFgTranslationCoordinates_(){\n var _activationState_=this.activationState_,\n activationEvent=_activationState_.activationEvent,\n wasActivatedByPointer=_activationState_.wasActivatedByPointer;\n\n\n var startPoint=void 0;\n if(wasActivatedByPointer){\n startPoint=Object(__WEBPACK_IMPORTED_MODULE_3__util__[\"getNormalizedEventCoords\"])(\n/**@type{!Event}*/activationEvent,this.adapter_.getWindowPageOffset(),this.adapter_.computeBoundingRect());\n}else{\n startPoint={\n x:this.frame_.width/2,\n y:this.frame_.height/2\n};\n}\n//Center the element around the start point.\n startPoint={\n x:startPoint.x-this.initialSize_/2,\n y:startPoint.y-this.initialSize_/2\n};\n\n var endPoint={\n x:this.frame_.width/2-this.initialSize_/2,\n y:this.frame_.height/2-this.initialSize_/2\n};\n\n return{startPoint:startPoint,endPoint:endPoint};\n}\n\n/**@private*/\n\n},{\n key:'runDeactivationUXLogicIfReady_',\n value:function runDeactivationUXLogicIfReady_(){\n var _this11=this;\n\n//This method is called both when a pointing device is released,and when the activation animation ends.\n//The deactivation animation should only run after both of those occur.\n var FG_DEACTIVATION=MDCRippleFoundation.cssClasses.FG_DEACTIVATION;\n var _activationState_2=this.activationState_,\n hasDeactivationUXRun=_activationState_2.hasDeactivationUXRun,\n isActivated=_activationState_2.isActivated;\n\n var activationHasEnded=hasDeactivationUXRun||!isActivated;\n\n if(activationHasEnded&&this.activationAnimationHasEnded_){\n this.rmBoundedActivationClasses_();\n this.adapter_.addClass(FG_DEACTIVATION);\n this.fgDeactivationRemovalTimer_=setTimeout(function(){\n _this11.adapter_.removeClass(FG_DEACTIVATION);\n},__WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"/*numbers*/].FG_DEACTIVATION_MS);\n}\n}\n\n/**@private*/\n\n},{\n key:'rmBoundedActivationClasses_',\n value:function rmBoundedActivationClasses_(){\n var FG_ACTIVATION=MDCRippleFoundation.cssClasses.FG_ACTIVATION;\n\n this.adapter_.removeClass(FG_ACTIVATION);\n this.activationAnimationHasEnded_=false;\n this.adapter_.computeBoundingRect();\n}\n},{\n key:'resetActivationState_',\n value:function resetActivationState_(){\n var _this12=this;\n\n this.previousActivationEvent_=this.activationState_.activationEvent;\n this.activationState_=this.defaultActivationState_();\n//Touch devices may fire additional events for the same interaction within a short time.\n//Store the previous event until it's safe to assume that subsequent events are for new interactions.\n setTimeout(function(){\n return _this12.previousActivationEvent_=undefined;\n},MDCRippleFoundation.numbers.TAP_DELAY_MS);\n}\n\n/**\n*@private\n*/\n\n},{\n key:'deactivate_',\n value:function deactivate_(){\n var _this13=this;\n\n var activationState=this.activationState_;\n//This can happen in scenarios such as when you have a keyup event that blurs the element.\n if(!activationState.isActivated){\n return;\n}\n\n var state=/**@type{!ActivationStateType}*/_extends({},activationState);\n\n if(activationState.isProgrammatic){\n requestAnimationFrame(function(){\n return _this13.animateDeactivation_(state);\n});\n this.resetActivationState_();\n}else{\n this.deregisterDeactivationHandlers_();\n requestAnimationFrame(function(){\n _this13.activationState_.hasDeactivationUXRun=true;\n _this13.animateDeactivation_(state);\n _this13.resetActivationState_();\n});\n}\n}\n},{\n key:'deactivate',\n value:function deactivate(){\n this.deactivate_();\n}\n\n/**\n*@param{!ActivationStateType}options\n*@private\n*/\n\n},{\n key:'animateDeactivation_',\n value:function animateDeactivation_(_ref){\n var wasActivatedByPointer=_ref.wasActivatedByPointer,\n wasElementMadeActive=_ref.wasElementMadeActive;\n\n if(wasActivatedByPointer||wasElementMadeActive){\n this.runDeactivationUXLogicIfReady_();\n}\n}\n},{\n key:'layout',\n value:function layout(){\n var _this14=this;\n\n if(this.layoutFrame_){\n cancelAnimationFrame(this.layoutFrame_);\n}\n this.layoutFrame_=requestAnimationFrame(function(){\n _this14.layoutInternal_();\n _this14.layoutFrame_=0;\n});\n}\n\n/**@private*/\n\n},{\n key:'layoutInternal_',\n value:function layoutInternal_(){\n var _this15=this;\n\n this.frame_=this.adapter_.computeBoundingRect();\n var maxDim=Math.max(this.frame_.height,this.frame_.width);\n\n//Surface diameter is treated differently for unbounded vs.bounded ripples.\n//Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n//to extend the hitbox,and the ripple is expected to meet the edges of the padded hitbox(which is typically\n//square).Bounded ripples,on the other hand,are fully expected to expand beyond the surface's longest diameter\n//(calculated based on the diagonal plus a constant padding),and are clipped at the surface's border via\n//`overflow:hidden`.\n var getBoundedRadius=function getBoundedRadius(){\n var hypotenuse=Math.sqrt(Math.pow(_this15.frame_.width,2)+Math.pow(_this15.frame_.height,2));\n return hypotenuse+MDCRippleFoundation.numbers.PADDING;\n};\n\n this.maxRadius_=this.adapter_.isUnbounded()?maxDim:getBoundedRadius();\n\n//Ripple is sized as a fraction of the largest dimension of the surface,then scales up using a CSS scale transform\n this.initialSize_=Math.floor(maxDim*MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n this.fgScale_=this.maxRadius_/this.initialSize_;\n\n this.updateLayoutCssVars_();\n}\n\n/**@private*/\n\n},{\n key:'updateLayoutCssVars_',\n value:function updateLayoutCssVars_(){\n var _MDCRippleFoundation$5=MDCRippleFoundation.strings,\n VAR_FG_SIZE=_MDCRippleFoundation$5.VAR_FG_SIZE,\n VAR_LEFT=_MDCRippleFoundation$5.VAR_LEFT,\n VAR_TOP=_MDCRippleFoundation$5.VAR_TOP,\n VAR_FG_SCALE=_MDCRippleFoundation$5.VAR_FG_SCALE;\n\n\n this.adapter_.updateCssVariable(VAR_FG_SIZE,this.initialSize_+'px');\n this.adapter_.updateCssVariable(VAR_FG_SCALE,this.fgScale_);\n\n if(this.adapter_.isUnbounded()){\n this.unboundedCoords_={\n left:Math.round(this.frame_.width/2-this.initialSize_/2),\n top:Math.round(this.frame_.height/2-this.initialSize_/2)\n};\n\n this.adapter_.updateCssVariable(VAR_LEFT,this.unboundedCoords_.left+'px');\n this.adapter_.updateCssVariable(VAR_TOP,this.unboundedCoords_.top+'px');\n}\n}\n\n/**@param{boolean}unbounded*/\n\n},{\n key:'setUnbounded',\n value:function setUnbounded(unbounded){\n var UNBOUNDED=MDCRippleFoundation.cssClasses.UNBOUNDED;\n\n if(unbounded){\n this.adapter_.addClass(UNBOUNDED);\n}else{\n this.adapter_.removeClass(UNBOUNDED);\n}\n}\n},{\n key:'handleFocus',\n value:function handleFocus(){\n var _this16=this;\n\n requestAnimationFrame(function(){\n return _this16.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);\n});\n}\n},{\n key:'handleBlur',\n value:function handleBlur(){\n var _this17=this;\n\n requestAnimationFrame(function(){\n return _this17.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);\n});\n}\n}]);\n\n return MDCRippleFoundation;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\"/*default*/]);\n\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCRippleFoundation);\n\n/***/}),\n/*6*/\n/***/(function(module,__webpack_exports__,__webpack_require__){\n\n\"use strict\";\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"a\",function(){return cssClasses;});\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"c\",function(){return strings;});\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"b\",function(){return numbers;});\n/**\n*@license\n*Copyright 2016 Google Inc.\n*\n*Permission is hereby granted,free of charge,to any person obtaining a copy\n*of this software and associated documentation files(the\"Software\"),to deal\n*in the Software without restriction,including without limitation the rights\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\n*copies of the Software,and to permit persons to whom the Software is\n*furnished to do so,subject to the following conditions:\n*\n*The above copyright notice and this permission notice shall be included in\n*all copies or substantial portions of the Software.\n*\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*THE SOFTWARE.\n*/\n\nvar cssClasses={\n//Ripple is a special case where the\"root\"component is really a\"mixin\"of sorts,\n//given that it's an'upgrade'to an existing component.That being said it is the root\n//CSS class that all other CSS classes derive from.\n ROOT:'mdc-ripple-upgraded',\n UNBOUNDED:'mdc-ripple-upgraded--unbounded',\n BG_FOCUSED:'mdc-ripple-upgraded--background-focused',\n FG_ACTIVATION:'mdc-ripple-upgraded--foreground-activation',\n FG_DEACTIVATION:'mdc-ripple-upgraded--foreground-deactivation'\n};\n\nvar strings={\n VAR_LEFT:'--mdc-ripple-left',\n VAR_TOP:'--mdc-ripple-top',\n VAR_FG_SIZE:'--mdc-ripple-fg-size',\n VAR_FG_SCALE:'--mdc-ripple-fg-scale',\n VAR_FG_TRANSLATE_START:'--mdc-ripple-fg-translate-start',\n VAR_FG_TRANSLATE_END:'--mdc-ripple-fg-translate-end'\n};\n\nvar numbers={\n PADDING:10,\n INITIAL_ORIGIN_SCALE:0.6,\n DEACTIVATION_TIMEOUT_MS:225,//Corresponds to $mdc-ripple-translate-duration(i.e.activation animation duration)\n FG_DEACTIVATION_MS:150,//Corresponds to $mdc-ripple-fade-out-duration(i.e.deactivation animation duration)\n TAP_DELAY_MS:300};\n\n\n\n/***/})\n/******/]);\n});\n//#sourceMappingURL=mdc.ripple.js.map//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3JpcHBsZS9kaXN0L21kYy5yaXBwbGUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3JpcHBsZS9kaXN0L21kYy5yaXBwbGUuanM/NzM4OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiBNYXRlcmlhbCBDb21wb25lbnRzIGZvciB0aGUgV2ViXG4gQ29weXJpZ2h0IChjKSAyMDE5IEdvb2dsZSBJbmMuXG4gTGljZW5zZTogTUlUXG4qL1xuKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW10sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wicmlwcGxlXCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcIm1kY1wiXSA9IHJvb3RbXCJtZGNcIl0gfHwge30sIHJvb3RbXCJtZGNcIl1bXCJyaXBwbGVcIl0gPSBmYWN0b3J5KCk7XG59KSh0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiAvKioqKioqLyAoZnVuY3Rpb24obW9kdWxlcykgeyAvLyB3ZWJwYWNrQm9vdHN0cmFwXG4vKioqKioqLyBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4vKioqKioqLyBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4vKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbi8qKioqKiovIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuLyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbi8qKioqKiovIFx0XHRcdGk6IG1vZHVsZUlkLFxuLyoqKioqKi8gXHRcdFx0bDogZmFsc2UsXG4vKioqKioqLyBcdFx0XHRleHBvcnRzOiB7fVxuLyoqKioqKi8gXHRcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuLyoqKioqKi8gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4vKioqKioqLyBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuLyoqKioqKi8gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbi8qKioqKiovIFx0fVxuLyoqKioqKi9cbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuLyoqKioqKi8gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbi8qKioqKiovIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4vKioqKioqLyBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4vKioqKioqLyBcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG4vKioqKioqLyBcdFx0XHRcdGdldDogZ2V0dGVyXG4vKioqKioqLyBcdFx0XHR9KTtcbi8qKioqKiovIFx0XHR9XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbi8qKioqKiovIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4vKioqKioqLyBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuLyoqKioqKi8gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbi8qKioqKiovIFx0XHRyZXR1cm4gZ2V0dGVyO1xuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbi8qKioqKiovIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNCk7XG4vKioqKioqLyB9KVxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiovIChbXG4vKiAwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy5cbiAqXG4gKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4gKiBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4gKiBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4gKiB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4gKiBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbiAqIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4gKlxuICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbiAqIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuICpcbiAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcbiAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4gKiBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4gKiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuICogT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuICogVEhFIFNPRlRXQVJFLlxuICovXG5cbi8qKlxuICogQHRlbXBsYXRlIEFcbiAqL1xudmFyIE1EQ0ZvdW5kYXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gIF9jcmVhdGVDbGFzcyhNRENGb3VuZGF0aW9uLCBudWxsLCBbe1xuICAgIGtleTogXCJjc3NDbGFzc2VzXCIsXG5cbiAgICAvKiogQHJldHVybiBlbnVte2Nzc0NsYXNzZXN9ICovXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAvLyBDbGFzc2VzIGV4dGVuZGluZyBNRENGb3VuZGF0aW9uIHNob3VsZCBpbXBsZW1lbnQgdGhpcyBtZXRob2QgdG8gcmV0dXJuIGFuIG9iamVjdCB3aGljaCBleHBvcnRzIGV2ZXJ5XG4gICAgICAvLyBDU1MgY2xhc3MgdGhlIGZvdW5kYXRpb24gY2xhc3MgbmVlZHMgYXMgYSBwcm9wZXJ0eS4gZS5nLiB7QUNUSVZFOiAnbWRjLWNvbXBvbmVudC0tYWN0aXZlJ31cbiAgICAgIHJldHVybiB7fTtcbiAgICB9XG5cbiAgICAvKiogQHJldHVybiBlbnVte3N0cmluZ3N9ICovXG5cbiAgfSwge1xuICAgIGtleTogXCJzdHJpbmdzXCIsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAvLyBDbGFzc2VzIGV4dGVuZGluZyBNRENGb3VuZGF0aW9uIHNob3VsZCBpbXBsZW1lbnQgdGhpcyBtZXRob2QgdG8gcmV0dXJuIGFuIG9iamVjdCB3aGljaCBleHBvcnRzIGFsbFxuICAgICAgLy8gc2VtYW50aWMgc3RyaW5ncyBhcyBjb25zdGFudHMuIGUuZy4ge0FSSUFfUk9MRTogJ3RhYmxpc3QnfVxuICAgICAgcmV0dXJuIHt9O1xuICAgIH1cblxuICAgIC8qKiBAcmV0dXJuIGVudW17bnVtYmVyc30gKi9cblxuICB9LCB7XG4gICAga2V5OiBcIm51bWJlcnNcIixcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIC8vIENsYXNzZXMgZXh0ZW5kaW5nIE1EQ0ZvdW5kYXRpb24gc2hvdWxkIGltcGxlbWVudCB0aGlzIG1ldGhvZCB0byByZXR1cm4gYW4gb2JqZWN0IHdoaWNoIGV4cG9ydHMgYWxsXG4gICAgICAvLyBvZiBpdHMgc2VtYW50aWMgbnVtYmVycyBhcyBjb25zdGFudHMuIGUuZy4ge0FOSU1BVElPTl9ERUxBWV9NUzogMzUwfVxuICAgICAgcmV0dXJuIHt9O1xuICAgIH1cblxuICAgIC8qKiBAcmV0dXJuIHshT2JqZWN0fSAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiZGVmYXVsdEFkYXB0ZXJcIixcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIC8vIENsYXNzZXMgZXh0ZW5kaW5nIE1EQ0ZvdW5kYXRpb24gbWF5IGNob29zZSB0byBpbXBsZW1lbnQgdGhpcyBnZXR0ZXIgaW4gb3JkZXIgdG8gcHJvdmlkZSBhIGNvbnZlbmllbnRcbiAgICAgIC8vIHdheSBvZiB2aWV3aW5nIHRoZSBuZWNlc3NhcnkgbWV0aG9kcyBvZiBhbiBhZGFwdGVyLiBJbiB0aGUgZnV0dXJlLCB0aGlzIGNvdWxkIGFsc28gYmUgdXNlZCBmb3IgYWRhcHRlclxuICAgICAgLy8gdmFsaWRhdGlvbi5cbiAgICAgIHJldHVybiB7fTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge0E9fSBhZGFwdGVyXG4gICAgICovXG5cbiAgfV0pO1xuXG4gIGZ1bmN0aW9uIE1EQ0ZvdW5kYXRpb24oKSB7XG4gICAgdmFyIGFkYXB0ZXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE1EQ0ZvdW5kYXRpb24pO1xuXG4gICAgLyoqIEBwcm90ZWN0ZWQgeyFBfSAqL1xuICAgIHRoaXMuYWRhcHRlcl8gPSBhZGFwdGVyO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKE1EQ0ZvdW5kYXRpb24sIFt7XG4gICAga2V5OiBcImluaXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgIC8vIFN1YmNsYXNzZXMgc2hvdWxkIG92ZXJyaWRlIHRoaXMgbWV0aG9kIHRvIHBlcmZvcm0gaW5pdGlhbGl6YXRpb24gcm91dGluZXMgKHJlZ2lzdGVyaW5nIGV2ZW50cywgZXRjLilcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGVzdHJveVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgICAgLy8gU3ViY2xhc3NlcyBzaG91bGQgb3ZlcnJpZGUgdGhpcyBtZXRob2QgdG8gcGVyZm9ybSBkZS1pbml0aWFsaXphdGlvbiByb3V0aW5lcyAoZGUtcmVnaXN0ZXJpbmcgZXZlbnRzLCBldGMuKVxuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBNRENGb3VuZGF0aW9uO1xufSgpO1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKE1EQ0ZvdW5kYXRpb24pO1xuXG4vKioqLyB9KSxcbi8qIDEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19mb3VuZGF0aW9uX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy5cbiAqXG4gKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4gKiBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4gKiBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4gKiB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4gKiBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbiAqIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4gKlxuICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbiAqIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuICpcbiAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcbiAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4gKiBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4gKiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuICogT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuICogVEhFIFNPRlRXQVJFLlxuICovXG5cblxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBGXG4gKi9cblxudmFyIE1EQ0NvbXBvbmVudCA9IGZ1bmN0aW9uICgpIHtcbiAgX2NyZWF0ZUNsYXNzKE1EQ0NvbXBvbmVudCwgbnVsbCwgW3tcbiAgICBrZXk6ICdhdHRhY2hUbycsXG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0geyFFbGVtZW50fSByb290XG4gICAgICogQHJldHVybiB7IU1EQ0NvbXBvbmVudH1cbiAgICAgKi9cbiAgICB2YWx1ZTogZnVuY3Rpb24gYXR0YWNoVG8ocm9vdCkge1xuICAgICAgLy8gU3ViY2xhc3NlcyB3aGljaCBleHRlbmQgTURDQmFzZSBzaG91bGQgcHJvdmlkZSBhbiBhdHRhY2hUbygpIG1ldGhvZCB0aGF0IHRha2VzIGEgcm9vdCBlbGVtZW50IGFuZFxuICAgICAgLy8gcmV0dXJucyBhbiBpbnN0YW50aWF0ZWQgY29tcG9uZW50IHdpdGggaXRzIHJvb3Qgc2V0IHRvIHRoYXQgZWxlbWVudC4gQWxzbyBub3RlIHRoYXQgaW4gdGhlIGNhc2VzIG9mXG4gICAgICAvLyBzdWJjbGFzc2VzLCBhbiBleHBsaWNpdCBmb3VuZGF0aW9uIGNsYXNzIHdpbGwgbm90IGhhdmUgdG8gYmUgcGFzc2VkIGluOyBpdCB3aWxsIHNpbXBseSBiZSBpbml0aWFsaXplZFxuICAgICAgLy8gZnJvbSBnZXREZWZhdWx0Rm91bmRhdGlvbigpLlxuICAgICAgcmV0dXJuIG5ldyBNRENDb21wb25lbnQocm9vdCwgbmV3IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fZm91bmRhdGlvbl9fW1wiYVwiIC8qIGRlZmF1bHQgKi9dKCkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7IUVsZW1lbnR9IHJvb3RcbiAgICAgKiBAcGFyYW0ge0Y9fSBmb3VuZGF0aW9uXG4gICAgICogQHBhcmFtIHsuLi4/fSBhcmdzXG4gICAgICovXG5cbiAgfV0pO1xuXG4gIGZ1bmN0aW9uIE1EQ0NvbXBvbmVudChyb290KSB7XG4gICAgdmFyIGZvdW5kYXRpb24gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNRENDb21wb25lbnQpO1xuXG4gICAgLyoqIEBwcm90ZWN0ZWQgeyFFbGVtZW50fSAqL1xuICAgIHRoaXMucm9vdF8gPSByb290O1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuID4gMiA/IF9sZW4gLSAyIDogMCksIF9rZXkgPSAyOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXkgLSAyXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICB0aGlzLmluaXRpYWxpemUuYXBwbHkodGhpcywgYXJncyk7XG4gICAgLy8gTm90ZSB0aGF0IHdlIGluaXRpYWxpemUgZm91bmRhdGlvbiBoZXJlIGFuZCBub3Qgd2l0aGluIHRoZSBjb25zdHJ1Y3RvcidzIGRlZmF1bHQgcGFyYW0gc28gdGhhdFxuICAgIC8vIHRoaXMucm9vdF8gaXMgZGVmaW5lZCBhbmQgY2FuIGJlIHVzZWQgd2l0aGluIHRoZSBmb3VuZGF0aW9uIGNsYXNzLlxuICAgIC8qKiBAcHJvdGVjdGVkIHshRn0gKi9cbiAgICB0aGlzLmZvdW5kYXRpb25fID0gZm91bmRhdGlvbiA9PT0gdW5kZWZpbmVkID8gdGhpcy5nZXREZWZhdWx0Rm91bmRhdGlvbigpIDogZm91bmRhdGlvbjtcbiAgICB0aGlzLmZvdW5kYXRpb25fLmluaXQoKTtcbiAgICB0aGlzLmluaXRpYWxTeW5jV2l0aERPTSgpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKE1EQ0NvbXBvbmVudCwgW3tcbiAgICBrZXk6ICdpbml0aWFsaXplJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIC8qIC4uLmFyZ3MgKi97fVxuICAgIC8vIFN1YmNsYXNzZXMgY2FuIG92ZXJyaWRlIHRoaXMgdG8gZG8gYW55IGFkZGl0aW9uYWwgc2V0dXAgd29yayB0aGF0IHdvdWxkIGJlIGNvbnNpZGVyZWQgcGFydCBvZiBhXG4gICAgLy8gXCJjb25zdHJ1Y3RvclwiLiBFc3NlbnRpYWxseSwgaXQgaXMgYSBob29rIGludG8gdGhlIHBhcmVudCBjb25zdHJ1Y3RvciBiZWZvcmUgdGhlIGZvdW5kYXRpb24gaXNcbiAgICAvLyBpbml0aWFsaXplZC4gQW55IGFkZGl0aW9uYWwgYXJndW1lbnRzIGJlc2lkZXMgcm9vdCBhbmQgZm91bmRhdGlvbiB3aWxsIGJlIHBhc3NlZCBpbiBoZXJlLlxuXG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJuIHshRn0gZm91bmRhdGlvblxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdnZXREZWZhdWx0Rm91bmRhdGlvbicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldERlZmF1bHRGb3VuZGF0aW9uKCkge1xuICAgICAgLy8gU3ViY2xhc3NlcyBtdXN0IG92ZXJyaWRlIHRoaXMgbWV0aG9kIHRvIHJldHVybiBhIHByb3Blcmx5IGNvbmZpZ3VyZWQgZm91bmRhdGlvbiBjbGFzcyBmb3IgdGhlXG4gICAgICAvLyBjb21wb25lbnQuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1N1YmNsYXNzZXMgbXVzdCBvdmVycmlkZSBnZXREZWZhdWx0Rm91bmRhdGlvbiB0byByZXR1cm4gYSBwcm9wZXJseSBjb25maWd1cmVkICcgKyAnZm91bmRhdGlvbiBjbGFzcycpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2luaXRpYWxTeW5jV2l0aERPTScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluaXRpYWxTeW5jV2l0aERPTSgpIHtcbiAgICAgIC8vIFN1YmNsYXNzZXMgc2hvdWxkIG92ZXJyaWRlIHRoaXMgbWV0aG9kIGlmIHRoZXkgbmVlZCB0byBwZXJmb3JtIHdvcmsgdG8gc3luY2hyb25pemUgd2l0aCBhIGhvc3QgRE9NXG4gICAgICAvLyBvYmplY3QuIEFuIGV4YW1wbGUgb2YgdGhpcyB3b3VsZCBiZSBhIGZvcm0gY29udHJvbCB3cmFwcGVyIHRoYXQgbmVlZHMgdG8gc3luY2hyb25pemUgaXRzIGludGVybmFsIHN0YXRlXG4gICAgICAvLyB0byBzb21lIHByb3BlcnR5IG9yIGF0dHJpYnV0ZSBvZiB0aGUgaG9zdCBET00uIFBsZWFzZSBub3RlOiB0aGlzIGlzICpub3QqIHRoZSBwbGFjZSB0byBwZXJmb3JtIERPTVxuICAgICAgLy8gcmVhZHMvd3JpdGVzIHRoYXQgd291bGQgY2F1c2UgbGF5b3V0IC8gcGFpbnQsIGFzIHRoaXMgaXMgY2FsbGVkIHN5bmNocm9ub3VzbHkgZnJvbSB3aXRoaW4gdGhlIGNvbnN0cnVjdG9yLlxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2Rlc3Ryb3knLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgICAgLy8gU3ViY2xhc3NlcyBtYXkgaW1wbGVtZW50IHRoaXMgbWV0aG9kIHRvIHJlbGVhc2UgYW55IHJlc291cmNlcyAvIGRlcmVnaXN0ZXIgYW55IGxpc3RlbmVycyB0aGV5IGhhdmVcbiAgICAgIC8vIGF0dGFjaGVkLiBBbiBleGFtcGxlIG9mIHRoaXMgbWlnaHQgYmUgZGVyZWdpc3RlcmluZyBhIHJlc2l6ZSBldmVudCBmcm9tIHRoZSB3aW5kb3cgb2JqZWN0LlxuICAgICAgdGhpcy5mb3VuZGF0aW9uXy5kZXN0cm95KCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogV3JhcHBlciBtZXRob2QgdG8gYWRkIGFuIGV2ZW50IGxpc3RlbmVyIHRvIHRoZSBjb21wb25lbnQncyByb290IGVsZW1lbnQuIFRoaXMgaXMgbW9zdCB1c2VmdWwgd2hlblxuICAgICAqIGxpc3RlbmluZyBmb3IgY3VzdG9tIGV2ZW50cy5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZXZ0VHlwZVxuICAgICAqIEBwYXJhbSB7IUZ1bmN0aW9ufSBoYW5kbGVyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2xpc3RlbicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxpc3RlbihldnRUeXBlLCBoYW5kbGVyKSB7XG4gICAgICB0aGlzLnJvb3RfLmFkZEV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlcik7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogV3JhcHBlciBtZXRob2QgdG8gcmVtb3ZlIGFuIGV2ZW50IGxpc3RlbmVyIHRvIHRoZSBjb21wb25lbnQncyByb290IGVsZW1lbnQuIFRoaXMgaXMgbW9zdCB1c2VmdWwgd2hlblxuICAgICAqIHVubGlzdGVuaW5nIGZvciBjdXN0b20gZXZlbnRzLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBldnRUeXBlXG4gICAgICogQHBhcmFtIHshRnVuY3Rpb259IGhhbmRsZXJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAndW5saXN0ZW4nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1bmxpc3RlbihldnRUeXBlLCBoYW5kbGVyKSB7XG4gICAgICB0aGlzLnJvb3RfLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlcik7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRmlyZXMgYSBjcm9zcy1icm93c2VyLWNvbXBhdGlibGUgY3VzdG9tIGV2ZW50IGZyb20gdGhlIGNvbXBvbmVudCByb290IG9mIHRoZSBnaXZlbiB0eXBlLFxuICAgICAqIHdpdGggdGhlIGdpdmVuIGRhdGEuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV2dFR5cGVcbiAgICAgKiBAcGFyYW0geyFPYmplY3R9IGV2dERhdGFcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW49fSBzaG91bGRCdWJibGVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnZW1pdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGVtaXQoZXZ0VHlwZSwgZXZ0RGF0YSkge1xuICAgICAgdmFyIHNob3VsZEJ1YmJsZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogZmFsc2U7XG5cbiAgICAgIHZhciBldnQgPSB2b2lkIDA7XG4gICAgICBpZiAodHlwZW9mIEN1c3RvbUV2ZW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGV2dCA9IG5ldyBDdXN0b21FdmVudChldnRUeXBlLCB7XG4gICAgICAgICAgZGV0YWlsOiBldnREYXRhLFxuICAgICAgICAgIGJ1YmJsZXM6IHNob3VsZEJ1YmJsZVxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGV2dCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdDdXN0b21FdmVudCcpO1xuICAgICAgICBldnQuaW5pdEN1c3RvbUV2ZW50KGV2dFR5cGUsIHNob3VsZEJ1YmJsZSwgZmFsc2UsIGV2dERhdGEpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnJvb3RfLmRpc3BhdGNoRXZlbnQoZXZ0KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gTURDQ29tcG9uZW50O1xufSgpO1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKE1EQ0NvbXBvbmVudCk7XG5cbi8qKiovIH0pLFxuLyogMiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShfX3dlYnBhY2tfZXhwb3J0c19fLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJzdXBwb3J0c0Nzc1ZhcmlhYmxlc1wiLCBmdW5jdGlvbigpIHsgcmV0dXJuIHN1cHBvcnRzQ3NzVmFyaWFibGVzOyB9KTtcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJhcHBseVBhc3NpdmVcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBhcHBseVBhc3NpdmU7IH0pO1xuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcImdldE1hdGNoZXNQcm9wZXJ0eVwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIGdldE1hdGNoZXNQcm9wZXJ0eTsgfSk7XG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiZ2V0Tm9ybWFsaXplZEV2ZW50Q29vcmRzXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gZ2V0Tm9ybWFsaXplZEV2ZW50Q29vcmRzOyB9KTtcbi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuXG4gKlxuICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuICogb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuICogaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuICogdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuICogY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4gKiBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuICpcbiAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4gKiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbiAqXG4gKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4gKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbiAqIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuICogQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbiAqIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbiAqIFRIRSBTT0ZUV0FSRS5cbiAqL1xuXG4vKipcbiAqIFN0b3JlcyByZXN1bHQgZnJvbSBzdXBwb3J0c0Nzc1ZhcmlhYmxlcyB0byBhdm9pZCByZWR1bmRhbnQgcHJvY2Vzc2luZyB0byBkZXRlY3QgQ1NTIGN1c3RvbSB2YXJpYWJsZSBzdXBwb3J0LlxuICogQHByaXZhdGUge2Jvb2xlYW58dW5kZWZpbmVkfVxuICovXG52YXIgc3VwcG9ydHNDc3NWYXJpYWJsZXNfID0gdm9pZCAwO1xuXG4vKipcbiAqIFN0b3JlcyByZXN1bHQgZnJvbSBhcHBseVBhc3NpdmUgdG8gYXZvaWQgcmVkdW5kYW50IHByb2Nlc3NpbmcgdG8gZGV0ZWN0IHBhc3NpdmUgZXZlbnQgbGlzdGVuZXIgc3VwcG9ydC5cbiAqIEBwcml2YXRlIHtib29sZWFufHVuZGVmaW5lZH1cbiAqL1xudmFyIHN1cHBvcnRzUGFzc2l2ZV8gPSB2b2lkIDA7XG5cbi8qKlxuICogQHBhcmFtIHshV2luZG93fSB3aW5kb3dPYmpcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cbmZ1bmN0aW9uIGRldGVjdEVkZ2VQc2V1ZG9WYXJCdWcod2luZG93T2JqKSB7XG4gIC8vIERldGVjdCB2ZXJzaW9ucyBvZiBFZGdlIHdpdGggYnVnZ3kgdmFyKCkgc3VwcG9ydFxuICAvLyBTZWU6IGh0dHBzOi8vZGV2ZWxvcGVyLm1pY3Jvc29mdC5jb20vZW4tdXMvbWljcm9zb2Z0LWVkZ2UvcGxhdGZvcm0vaXNzdWVzLzExNDk1NDQ4L1xuICB2YXIgZG9jdW1lbnQgPSB3aW5kb3dPYmouZG9jdW1lbnQ7XG4gIHZhciBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIG5vZGUuY2xhc3NOYW1lID0gJ21kYy1yaXBwbGUtc3VyZmFjZS0tdGVzdC1lZGdlLXZhci1idWcnO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG5vZGUpO1xuXG4gIC8vIFRoZSBidWcgZXhpc3RzIGlmIDo6YmVmb3JlIHN0eWxlIGVuZHMgdXAgcHJvcGFnYXRpbmcgdG8gdGhlIHBhcmVudCBlbGVtZW50LlxuICAvLyBBZGRpdGlvbmFsbHksIGdldENvbXB1dGVkU3R5bGUgcmV0dXJucyBudWxsIGluIGlmcmFtZXMgd2l0aCBkaXNwbGF5OiBcIm5vbmVcIiBpbiBGaXJlZm94LFxuICAvLyBidXQgRmlyZWZveCBpcyBrbm93biB0byBzdXBwb3J0IENTUyBjdXN0b20gcHJvcGVydGllcyBjb3JyZWN0bHkuXG4gIC8vIFNlZTogaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NTQ4Mzk3XG4gIHZhciBjb21wdXRlZFN0eWxlID0gd2luZG93T2JqLmdldENvbXB1dGVkU3R5bGUobm9kZSk7XG4gIHZhciBoYXNQc2V1ZG9WYXJCdWcgPSBjb21wdXRlZFN0eWxlICE9PSBudWxsICYmIGNvbXB1dGVkU3R5bGUuYm9yZGVyVG9wU3R5bGUgPT09ICdzb2xpZCc7XG4gIG5vZGUucmVtb3ZlKCk7XG4gIHJldHVybiBoYXNQc2V1ZG9WYXJCdWc7XG59XG5cbi8qKlxuICogQHBhcmFtIHshV2luZG93fSB3aW5kb3dPYmpcbiAqIEBwYXJhbSB7Ym9vbGVhbj19IGZvcmNlUmVmcmVzaFxuICogQHJldHVybiB7Ym9vbGVhbnx1bmRlZmluZWR9XG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNDc3NWYXJpYWJsZXMod2luZG93T2JqKSB7XG4gIHZhciBmb3JjZVJlZnJlc2ggPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlO1xuXG4gIHZhciBzdXBwb3J0c0Nzc1ZhcmlhYmxlcyA9IHN1cHBvcnRzQ3NzVmFyaWFibGVzXztcbiAgaWYgKHR5cGVvZiBzdXBwb3J0c0Nzc1ZhcmlhYmxlc18gPT09ICdib29sZWFuJyAmJiAhZm9yY2VSZWZyZXNoKSB7XG4gICAgcmV0dXJuIHN1cHBvcnRzQ3NzVmFyaWFibGVzO1xuICB9XG5cbiAgdmFyIHN1cHBvcnRzRnVuY3Rpb25QcmVzZW50ID0gd2luZG93T2JqLkNTUyAmJiB0eXBlb2Ygd2luZG93T2JqLkNTUy5zdXBwb3J0cyA9PT0gJ2Z1bmN0aW9uJztcbiAgaWYgKCFzdXBwb3J0c0Z1bmN0aW9uUHJlc2VudCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBleHBsaWNpdGx5U3VwcG9ydHNDc3NWYXJzID0gd2luZG93T2JqLkNTUy5zdXBwb3J0cygnLS1jc3MtdmFycycsICd5ZXMnKTtcbiAgLy8gU2VlOiBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTU0NjY5XG4gIC8vIFNlZTogUkVBRE1FIHNlY3Rpb24gb24gU2FmYXJpXG4gIHZhciB3ZUFyZUZlYXR1cmVEZXRlY3RpbmdTYWZhcmkxMHBsdXMgPSB3aW5kb3dPYmouQ1NTLnN1cHBvcnRzKCcoLS1jc3MtdmFyczogeWVzKScpICYmIHdpbmRvd09iai5DU1Muc3VwcG9ydHMoJ2NvbG9yJywgJyMwMDAwMDAwMCcpO1xuXG4gIGlmIChleHBsaWNpdGx5U3VwcG9ydHNDc3NWYXJzIHx8IHdlQXJlRmVhdHVyZURldGVjdGluZ1NhZmFyaTEwcGx1cykge1xuICAgIHN1cHBvcnRzQ3NzVmFyaWFibGVzID0gIWRldGVjdEVkZ2VQc2V1ZG9WYXJCdWcod2luZG93T2JqKTtcbiAgfSBlbHNlIHtcbiAgICBzdXBwb3J0c0Nzc1ZhcmlhYmxlcyA9IGZhbHNlO1xuICB9XG5cbiAgaWYgKCFmb3JjZVJlZnJlc2gpIHtcbiAgICBzdXBwb3J0c0Nzc1ZhcmlhYmxlc18gPSBzdXBwb3J0c0Nzc1ZhcmlhYmxlcztcbiAgfVxuICByZXR1cm4gc3VwcG9ydHNDc3NWYXJpYWJsZXM7XG59XG5cbi8vXG4vKipcbiAqIERldGVybWluZSB3aGV0aGVyIHRoZSBjdXJyZW50IGJyb3dzZXIgc3VwcG9ydHMgcGFzc2l2ZSBldmVudCBsaXN0ZW5lcnMsIGFuZCBpZiBzbywgdXNlIHRoZW0uXG4gKiBAcGFyYW0geyFXaW5kb3c9fSBnbG9iYWxPYmpcbiAqIEBwYXJhbSB7Ym9vbGVhbj19IGZvcmNlUmVmcmVzaFxuICogQHJldHVybiB7Ym9vbGVhbnwhRXZlbnRMaXN0ZW5lck9wdGlvbnN9XG4gKi9cbmZ1bmN0aW9uIGFwcGx5UGFzc2l2ZSgpIHtcbiAgdmFyIGdsb2JhbE9iaiA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogd2luZG93O1xuICB2YXIgZm9yY2VSZWZyZXNoID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBmYWxzZTtcblxuICBpZiAoc3VwcG9ydHNQYXNzaXZlXyA9PT0gdW5kZWZpbmVkIHx8IGZvcmNlUmVmcmVzaCkge1xuICAgIHZhciBpc1N1cHBvcnRlZCA9IGZhbHNlO1xuICAgIHRyeSB7XG4gICAgICBnbG9iYWxPYmouZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndGVzdCcsIG51bGwsIHsgZ2V0IHBhc3NpdmUoKSB7XG4gICAgICAgICAgaXNTdXBwb3J0ZWQgPSB0cnVlO1xuICAgICAgICAgIHJldHVybiBpc1N1cHBvcnRlZDtcbiAgICAgICAgfSB9KTtcbiAgICB9IGNhdGNoIChlKSB7fVxuXG4gICAgc3VwcG9ydHNQYXNzaXZlXyA9IGlzU3VwcG9ydGVkO1xuICB9XG5cbiAgcmV0dXJuIHN1cHBvcnRzUGFzc2l2ZV8gPyAvKiogQHR5cGUgeyFFdmVudExpc3RlbmVyT3B0aW9uc30gKi97IHBhc3NpdmU6IHRydWUgfSA6IGZhbHNlO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7IU9iamVjdH0gSFRNTEVsZW1lbnRQcm90b3R5cGVcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZ2V0TWF0Y2hlc1Byb3BlcnR5KEhUTUxFbGVtZW50UHJvdG90eXBlKSB7XG4gIC8qKlxuICAgKiBPcmRlciBpcyBpbXBvcnRhbnQgYmVjYXVzZSB3ZSByZXR1cm4gdGhlIGZpcnN0IGV4aXN0aW5nIG1ldGhvZCB3ZSBmaW5kLlxuICAgKiBEbyBub3QgY2hhbmdlIHRoZSBvcmRlciBvZiB0aGUgaXRlbXMgaW4gdGhlIGJlbG93IGFycmF5LlxuICAgKi9cbiAgdmFyIG1hdGNoZXNNZXRob2RzID0gWydtYXRjaGVzJywgJ3dlYmtpdE1hdGNoZXNTZWxlY3RvcicsICdtc01hdGNoZXNTZWxlY3RvciddO1xuICB2YXIgbWV0aG9kID0gJ21hdGNoZXMnO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IG1hdGNoZXNNZXRob2RzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIG1hdGNoZXNNZXRob2QgPSBtYXRjaGVzTWV0aG9kc1tpXTtcbiAgICBpZiAobWF0Y2hlc01ldGhvZCBpbiBIVE1MRWxlbWVudFByb3RvdHlwZSkge1xuICAgICAgbWV0aG9kID0gbWF0Y2hlc01ldGhvZDtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtZXRob2Q7XG59XG5cbi8qKlxuICogQHBhcmFtIHshRXZlbnR9IGV2XG4gKiBAcGFyYW0ge3t4OiBudW1iZXIsIHk6IG51bWJlcn19IHBhZ2VPZmZzZXRcbiAqIEBwYXJhbSB7IUNsaWVudFJlY3R9IGNsaWVudFJlY3RcbiAqIEByZXR1cm4ge3t4OiBudW1iZXIsIHk6IG51bWJlcn19XG4gKi9cbmZ1bmN0aW9uIGdldE5vcm1hbGl6ZWRFdmVudENvb3JkcyhldiwgcGFnZU9mZnNldCwgY2xpZW50UmVjdCkge1xuICB2YXIgeCA9IHBhZ2VPZmZzZXQueCxcbiAgICAgIHkgPSBwYWdlT2Zmc2V0Lnk7XG5cbiAgdmFyIGRvY3VtZW50WCA9IHggKyBjbGllbnRSZWN0LmxlZnQ7XG4gIHZhciBkb2N1bWVudFkgPSB5ICsgY2xpZW50UmVjdC50b3A7XG5cbiAgdmFyIG5vcm1hbGl6ZWRYID0gdm9pZCAwO1xuICB2YXIgbm9ybWFsaXplZFkgPSB2b2lkIDA7XG4gIC8vIERldGVybWluZSB0b3VjaCBwb2ludCByZWxhdGl2ZSB0byB0aGUgcmlwcGxlIGNvbnRhaW5lci5cbiAgaWYgKGV2LnR5cGUgPT09ICd0b3VjaHN0YXJ0Jykge1xuICAgIGV2ID0gLyoqIEB0eXBlIHshVG91Y2hFdmVudH0gKi9ldjtcbiAgICBub3JtYWxpemVkWCA9IGV2LmNoYW5nZWRUb3VjaGVzWzBdLnBhZ2VYIC0gZG9jdW1lbnRYO1xuICAgIG5vcm1hbGl6ZWRZID0gZXYuY2hhbmdlZFRvdWNoZXNbMF0ucGFnZVkgLSBkb2N1bWVudFk7XG4gIH0gZWxzZSB7XG4gICAgZXYgPSAvKiogQHR5cGUgeyFNb3VzZUV2ZW50fSAqL2V2O1xuICAgIG5vcm1hbGl6ZWRYID0gZXYucGFnZVggLSBkb2N1bWVudFg7XG4gICAgbm9ybWFsaXplZFkgPSBldi5wYWdlWSAtIGRvY3VtZW50WTtcbiAgfVxuXG4gIHJldHVybiB7IHg6IG5vcm1hbGl6ZWRYLCB5OiBub3JtYWxpemVkWSB9O1xufVxuXG5cblxuLyoqKi8gfSksXG4vKiAzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy5cbiAqXG4gKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4gKiBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4gKiBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4gKiB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4gKiBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbiAqIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4gKlxuICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbiAqIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuICpcbiAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcbiAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4gKiBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4gKiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuICogT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuICogVEhFIFNPRlRXQVJFLlxuICovXG5cbi8qIGVzbGludCBuby11bnVzZWQtdmFyczogWzIsIHtcImFyZ3NcIjogXCJub25lXCJ9XSAqL1xuXG4vKipcbiAqIEFkYXB0ZXIgZm9yIE1EQyBSaXBwbGUuIFByb3ZpZGVzIGFuIGludGVyZmFjZSBmb3IgbWFuYWdpbmdcbiAqIC0gY2xhc3Nlc1xuICogLSBkb21cbiAqIC0gQ1NTIHZhcmlhYmxlc1xuICogLSBwb3NpdGlvblxuICogLSBkaW1lbnNpb25zXG4gKiAtIHNjcm9sbCBwb3NpdGlvblxuICogLSBldmVudCBoYW5kbGVyc1xuICogLSB1bmJvdW5kZWQsIGFjdGl2ZSBhbmQgZGlzYWJsZWQgc3RhdGVzXG4gKlxuICogQWRkaXRpb25hbGx5LCBwcm92aWRlcyB0eXBlIGluZm9ybWF0aW9uIGZvciB0aGUgYWRhcHRlciB0byB0aGUgQ2xvc3VyZVxuICogY29tcGlsZXIuXG4gKlxuICogSW1wbGVtZW50IHRoaXMgYWRhcHRlciBmb3IgeW91ciBmcmFtZXdvcmsgb2YgY2hvaWNlIHRvIGRlbGVnYXRlIHVwZGF0ZXMgdG9cbiAqIHRoZSBjb21wb25lbnQgaW4geW91ciBmcmFtZXdvcmsgb2YgY2hvaWNlLiBTZWUgYXJjaGl0ZWN0dXJlIGRvY3VtZW50YXRpb25cbiAqIGZvciBtb3JlIGRldGFpbHMuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbWF0ZXJpYWwtY29tcG9uZW50cy9tYXRlcmlhbC1jb21wb25lbnRzLXdlYi9ibG9iL21hc3Rlci9kb2NzL2NvZGUvYXJjaGl0ZWN0dXJlLm1kXG4gKlxuICogQHJlY29yZFxuICovXG52YXIgTURDUmlwcGxlQWRhcHRlciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gTURDUmlwcGxlQWRhcHRlcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTURDUmlwcGxlQWRhcHRlcik7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTURDUmlwcGxlQWRhcHRlciwgW3tcbiAgICBrZXk6IFwiYnJvd3NlclN1cHBvcnRzQ3NzVmFyc1wiLFxuXG4gICAgLyoqIEByZXR1cm4ge2Jvb2xlYW59ICovXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGJyb3dzZXJTdXBwb3J0c0Nzc1ZhcnMoKSB7fVxuXG4gICAgLyoqIEByZXR1cm4ge2Jvb2xlYW59ICovXG5cbiAgfSwge1xuICAgIGtleTogXCJpc1VuYm91bmRlZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpc1VuYm91bmRlZCgpIHt9XG5cbiAgICAvKiogQHJldHVybiB7Ym9vbGVhbn0gKi9cblxuICB9LCB7XG4gICAga2V5OiBcImlzU3VyZmFjZUFjdGl2ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpc1N1cmZhY2VBY3RpdmUoKSB7fVxuXG4gICAgLyoqIEByZXR1cm4ge2Jvb2xlYW59ICovXG5cbiAgfSwge1xuICAgIGtleTogXCJpc1N1cmZhY2VEaXNhYmxlZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpc1N1cmZhY2VEaXNhYmxlZCgpIHt9XG5cbiAgICAvKiogQHBhcmFtIHtzdHJpbmd9IGNsYXNzTmFtZSAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiYWRkQ2xhc3NcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkQ2xhc3MoY2xhc3NOYW1lKSB7fVxuXG4gICAgLyoqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWUgKi9cblxuICB9LCB7XG4gICAga2V5OiBcInJlbW92ZUNsYXNzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZUNsYXNzKGNsYXNzTmFtZSkge31cblxuICAgIC8qKiBAcGFyYW0geyFFdmVudFRhcmdldH0gdGFyZ2V0ICovXG5cbiAgfSwge1xuICAgIGtleTogXCJjb250YWluc0V2ZW50VGFyZ2V0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbnRhaW5zRXZlbnRUYXJnZXQodGFyZ2V0KSB7fVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV2dFR5cGVcbiAgICAgKiBAcGFyYW0geyFGdW5jdGlvbn0gaGFuZGxlclxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwicmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoZXZ0VHlwZSwgaGFuZGxlcikge31cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBldnRUeXBlXG4gICAgICogQHBhcmFtIHshRnVuY3Rpb259IGhhbmRsZXJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcihldnRUeXBlLCBoYW5kbGVyKSB7fVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV2dFR5cGVcbiAgICAgKiBAcGFyYW0geyFGdW5jdGlvbn0gaGFuZGxlclxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwicmVnaXN0ZXJEb2N1bWVudEludGVyYWN0aW9uSGFuZGxlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZWdpc3RlckRvY3VtZW50SW50ZXJhY3Rpb25IYW5kbGVyKGV2dFR5cGUsIGhhbmRsZXIpIHt9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZXZ0VHlwZVxuICAgICAqIEBwYXJhbSB7IUZ1bmN0aW9ufSBoYW5kbGVyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJkZXJlZ2lzdGVyRG9jdW1lbnRJbnRlcmFjdGlvbkhhbmRsZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGVyZWdpc3RlckRvY3VtZW50SW50ZXJhY3Rpb25IYW5kbGVyKGV2dFR5cGUsIGhhbmRsZXIpIHt9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0geyFGdW5jdGlvbn0gaGFuZGxlclxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwicmVnaXN0ZXJSZXNpemVIYW5kbGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlZ2lzdGVyUmVzaXplSGFuZGxlcihoYW5kbGVyKSB7fVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHshRnVuY3Rpb259IGhhbmRsZXJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImRlcmVnaXN0ZXJSZXNpemVIYW5kbGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRlcmVnaXN0ZXJSZXNpemVIYW5kbGVyKGhhbmRsZXIpIHt9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdmFyTmFtZVxuICAgICAqIEBwYXJhbSB7P251bWJlcnxzdHJpbmd9IHZhbHVlXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJ1cGRhdGVDc3NWYXJpYWJsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVDc3NWYXJpYWJsZSh2YXJOYW1lLCB2YWx1ZSkge31cblxuICAgIC8qKiBAcmV0dXJuIHshQ2xpZW50UmVjdH0gKi9cblxuICB9LCB7XG4gICAga2V5OiBcImNvbXB1dGVCb3VuZGluZ1JlY3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcHV0ZUJvdW5kaW5nUmVjdCgpIHt9XG5cbiAgICAvKiogQHJldHVybiB7e3g6IG51bWJlciwgeTogbnVtYmVyfX0gKi9cblxuICB9LCB7XG4gICAga2V5OiBcImdldFdpbmRvd1BhZ2VPZmZzZXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0V2luZG93UGFnZU9mZnNldCgpIHt9XG4gIH1dKTtcblxuICByZXR1cm4gTURDUmlwcGxlQWRhcHRlcjtcbn0oKTtcblxuLyogdW51c2VkIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIF91bnVzZWRfd2VicGFja19kZWZhdWx0X2V4cG9ydCA9IChNRENSaXBwbGVBZGFwdGVyKTtcblxuLyoqKi8gfSksXG4vKiA0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KF9fd2VicGFja19leHBvcnRzX18sIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIk1EQ1JpcHBsZVwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIE1EQ1JpcHBsZTsgfSk7XG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiUmlwcGxlQ2FwYWJsZVN1cmZhY2VcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBSaXBwbGVDYXBhYmxlU3VyZmFjZTsgfSk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19tYXRlcmlhbF9iYXNlX2NvbXBvbmVudF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX2FkYXB0ZXJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMyk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19mb3VuZGF0aW9uX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fdXRpbF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIk1EQ1JpcHBsZUZvdW5kYXRpb25cIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX2ZvdW5kYXRpb25fX1tcImFcIl07IH0pO1xuLyogaGFybW9ueSByZWV4cG9ydCAobW9kdWxlIG9iamVjdCkgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwidXRpbFwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fdXRpbF9fOyB9KTtcbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy5cbiAqXG4gKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4gKiBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4gKiBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4gKiB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4gKiBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbiAqIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4gKlxuICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbiAqIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuICpcbiAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcbiAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4gKiBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4gKiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuICogT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuICogVEhFIFNPRlRXQVJFLlxuICovXG5cblxuXG5cblxuXG4vKipcbiAqIEBleHRlbmRzIE1EQ0NvbXBvbmVudDwhTURDUmlwcGxlRm91bmRhdGlvbj5cbiAqL1xuXG52YXIgTURDUmlwcGxlID0gZnVuY3Rpb24gKF9NRENDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKE1EQ1JpcHBsZSwgX01EQ0NvbXBvbmVudCk7XG5cbiAgLyoqIEBwYXJhbSB7Li4uP30gYXJncyAqL1xuICBmdW5jdGlvbiBNRENSaXBwbGUoKSB7XG4gICAgdmFyIF9yZWY7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTURDUmlwcGxlKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIC8qKiBAdHlwZSB7Ym9vbGVhbn0gKi9cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoX3JlZiA9IE1EQ1JpcHBsZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKE1EQ1JpcHBsZSkpLmNhbGwuYXBwbHkoX3JlZiwgW3RoaXNdLmNvbmNhdChhcmdzKSkpO1xuXG4gICAgX3RoaXMuZGlzYWJsZWQgPSBmYWxzZTtcblxuICAgIC8qKiBAcHJpdmF0ZSB7Ym9vbGVhbn0gKi9cbiAgICBfdGhpcy51bmJvdW5kZWRfO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0geyFFbGVtZW50fSByb290XG4gICAqIEBwYXJhbSB7e2lzVW5ib3VuZGVkOiAoYm9vbGVhbnx1bmRlZmluZWQpfT19IG9wdGlvbnNcbiAgICogQHJldHVybiB7IU1EQ1JpcHBsZX1cbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoTURDUmlwcGxlLCBbe1xuICAgIGtleTogJ3NldFVuYm91bmRlZF8nLFxuXG5cbiAgICAvKipcbiAgICAgKiBDbG9zdXJlIENvbXBpbGVyIHRocm93cyBhbiBhY2Nlc3MgY29udHJvbCBlcnJvciB3aGVuIGRpcmVjdGx5IGFjY2Vzc2luZyBhXG4gICAgICogcHJvdGVjdGVkIG9yIHByaXZhdGUgcHJvcGVydHkgaW5zaWRlIGEgZ2V0dGVyL3NldHRlciwgbGlrZSB1bmJvdW5kZWQgYWJvdmUuXG4gICAgICogQnkgYWNjZXNzaW5nIHRoZSBwcm90ZWN0ZWQgcHJvcGVydHkgaW5zaWRlIGEgbWV0aG9kLCB3ZSBzb2x2ZSB0aGF0IHByb2JsZW0uXG4gICAgICogVGhhdCdzIHdoeSB0aGlzIGZ1bmN0aW9uIGV4aXN0cy5cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRVbmJvdW5kZWRfKCkge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uXy5zZXRVbmJvdW5kZWQodGhpcy51bmJvdW5kZWRfKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdhY3RpdmF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uXy5hY3RpdmF0ZSgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2RlYWN0aXZhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZWFjdGl2YXRlKCkge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uXy5kZWFjdGl2YXRlKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnbGF5b3V0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gbGF5b3V0KCkge1xuICAgICAgdGhpcy5mb3VuZGF0aW9uXy5sYXlvdXQoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJuIHshTURDUmlwcGxlRm91bmRhdGlvbn1cbiAgICAgKiBAb3ZlcnJpZGVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnZ2V0RGVmYXVsdEZvdW5kYXRpb24nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXREZWZhdWx0Rm91bmRhdGlvbigpIHtcbiAgICAgIHJldHVybiBuZXcgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19mb3VuZGF0aW9uX19bXCJhXCIgLyogZGVmYXVsdCAqL10oTURDUmlwcGxlLmNyZWF0ZUFkYXB0ZXIodGhpcykpO1xuICAgIH1cblxuICAgIC8qKiBAb3ZlcnJpZGUgKi9cblxuICB9LCB7XG4gICAga2V5OiAnaW5pdGlhbFN5bmNXaXRoRE9NJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdGlhbFN5bmNXaXRoRE9NKCkge1xuICAgICAgdGhpcy51bmJvdW5kZWQgPSAnbWRjUmlwcGxlSXNVbmJvdW5kZWQnIGluIHRoaXMucm9vdF8uZGF0YXNldDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICd1bmJvdW5kZWQnLFxuXG5cbiAgICAvKiogQHJldHVybiB7Ym9vbGVhbn0gKi9cbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB0aGlzLnVuYm91bmRlZF87XG4gICAgfVxuXG4gICAgLyoqIEBwYXJhbSB7Ym9vbGVhbn0gdW5ib3VuZGVkICovXG4gICAgLFxuICAgIHNldDogZnVuY3Rpb24gc2V0KHVuYm91bmRlZCkge1xuICAgICAgdGhpcy51bmJvdW5kZWRfID0gQm9vbGVhbih1bmJvdW5kZWQpO1xuICAgICAgdGhpcy5zZXRVbmJvdW5kZWRfKCk7XG4gICAgfVxuICB9XSwgW3tcbiAgICBrZXk6ICdhdHRhY2hUbycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGF0dGFjaFRvKHJvb3QpIHtcbiAgICAgIHZhciBfcmVmMiA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge30sXG4gICAgICAgICAgX3JlZjIkaXNVbmJvdW5kZWQgPSBfcmVmMi5pc1VuYm91bmRlZCxcbiAgICAgICAgICBpc1VuYm91bmRlZCA9IF9yZWYyJGlzVW5ib3VuZGVkID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiBfcmVmMiRpc1VuYm91bmRlZDtcblxuICAgICAgdmFyIHJpcHBsZSA9IG5ldyBNRENSaXBwbGUocm9vdCk7XG4gICAgICAvLyBPbmx5IG92ZXJyaWRlIHVuYm91bmRlZCBiZWhhdmlvciBpZiBvcHRpb24gaXMgZXhwbGljaXRseSBzcGVjaWZpZWRcbiAgICAgIGlmIChpc1VuYm91bmRlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJpcHBsZS51bmJvdW5kZWQgPSAvKiogQHR5cGUge2Jvb2xlYW59ICovaXNVbmJvdW5kZWQ7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmlwcGxlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7IVJpcHBsZUNhcGFibGVTdXJmYWNlfSBpbnN0YW5jZVxuICAgICAqIEByZXR1cm4geyFNRENSaXBwbGVBZGFwdGVyfVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdjcmVhdGVBZGFwdGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlQWRhcHRlcihpbnN0YW5jZSkge1xuICAgICAgdmFyIE1BVENIRVMgPSBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX3V0aWxfX1tcImdldE1hdGNoZXNQcm9wZXJ0eVwiXShIVE1MRWxlbWVudC5wcm90b3R5cGUpO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBicm93c2VyU3VwcG9ydHNDc3NWYXJzOiBmdW5jdGlvbiBicm93c2VyU3VwcG9ydHNDc3NWYXJzKCkge1xuICAgICAgICAgIHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX3V0aWxfX1tcInN1cHBvcnRzQ3NzVmFyaWFibGVzXCJdKHdpbmRvdyk7XG4gICAgICAgIH0sXG4gICAgICAgIGlzVW5ib3VuZGVkOiBmdW5jdGlvbiBpc1VuYm91bmRlZCgpIHtcbiAgICAgICAgICByZXR1cm4gaW5zdGFuY2UudW5ib3VuZGVkO1xuICAgICAgICB9LFxuICAgICAgICBpc1N1cmZhY2VBY3RpdmU6IGZ1bmN0aW9uIGlzU3VyZmFjZUFjdGl2ZSgpIHtcbiAgICAgICAgICByZXR1cm4gaW5zdGFuY2Uucm9vdF9bTUFUQ0hFU10oJzphY3RpdmUnKTtcbiAgICAgICAgfSxcbiAgICAgICAgaXNTdXJmYWNlRGlzYWJsZWQ6IGZ1bmN0aW9uIGlzU3VyZmFjZURpc2FibGVkKCkge1xuICAgICAgICAgIHJldHVybiBpbnN0YW5jZS5kaXNhYmxlZDtcbiAgICAgICAgfSxcbiAgICAgICAgYWRkQ2xhc3M6IGZ1bmN0aW9uIGFkZENsYXNzKGNsYXNzTmFtZSkge1xuICAgICAgICAgIHJldHVybiBpbnN0YW5jZS5yb290Xy5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XG4gICAgICAgIH0sXG4gICAgICAgIHJlbW92ZUNsYXNzOiBmdW5jdGlvbiByZW1vdmVDbGFzcyhjbGFzc05hbWUpIHtcbiAgICAgICAgICByZXR1cm4gaW5zdGFuY2Uucm9vdF8uY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpO1xuICAgICAgICB9LFxuICAgICAgICBjb250YWluc0V2ZW50VGFyZ2V0OiBmdW5jdGlvbiBjb250YWluc0V2ZW50VGFyZ2V0KHRhcmdldCkge1xuICAgICAgICAgIHJldHVybiBpbnN0YW5jZS5yb290Xy5jb250YWlucyh0YXJnZXQpO1xuICAgICAgICB9LFxuICAgICAgICByZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogZnVuY3Rpb24gcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoZXZ0VHlwZSwgaGFuZGxlcikge1xuICAgICAgICAgIHJldHVybiBpbnN0YW5jZS5yb290Xy5hZGRFdmVudExpc3RlbmVyKGV2dFR5cGUsIGhhbmRsZXIsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fdXRpbF9fW1wiYXBwbHlQYXNzaXZlXCJdKCkpO1xuICAgICAgICB9LFxuICAgICAgICBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiBmdW5jdGlvbiBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKGV2dFR5cGUsIGhhbmRsZXIpIHtcbiAgICAgICAgICByZXR1cm4gaW5zdGFuY2Uucm9vdF8ucmVtb3ZlRXZlbnRMaXN0ZW5lcihldnRUeXBlLCBoYW5kbGVyLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX3V0aWxfX1tcImFwcGx5UGFzc2l2ZVwiXSgpKTtcbiAgICAgICAgfSxcbiAgICAgICAgcmVnaXN0ZXJEb2N1bWVudEludGVyYWN0aW9uSGFuZGxlcjogZnVuY3Rpb24gcmVnaXN0ZXJEb2N1bWVudEludGVyYWN0aW9uSGFuZGxlcihldnRUeXBlLCBoYW5kbGVyKSB7XG4gICAgICAgICAgcmV0dXJuIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGV2dFR5cGUsIGhhbmRsZXIsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fdXRpbF9fW1wiYXBwbHlQYXNzaXZlXCJdKCkpO1xuICAgICAgICB9LFxuICAgICAgICBkZXJlZ2lzdGVyRG9jdW1lbnRJbnRlcmFjdGlvbkhhbmRsZXI6IGZ1bmN0aW9uIGRlcmVnaXN0ZXJEb2N1bWVudEludGVyYWN0aW9uSGFuZGxlcihldnRUeXBlLCBoYW5kbGVyKSB7XG4gICAgICAgICAgcmV0dXJuIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2dFR5cGUsIGhhbmRsZXIsIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fdXRpbF9fW1wiYXBwbHlQYXNzaXZlXCJdKCkpO1xuICAgICAgICB9LFxuICAgICAgICByZWdpc3RlclJlc2l6ZUhhbmRsZXI6IGZ1bmN0aW9uIHJlZ2lzdGVyUmVzaXplSGFuZGxlcihoYW5kbGVyKSB7XG4gICAgICAgICAgcmV0dXJuIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVyKTtcbiAgICAgICAgfSxcbiAgICAgICAgZGVyZWdpc3RlclJlc2l6ZUhhbmRsZXI6IGZ1bmN0aW9uIGRlcmVnaXN0ZXJSZXNpemVIYW5kbGVyKGhhbmRsZXIpIHtcbiAgICAgICAgICByZXR1cm4gd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZXIpO1xuICAgICAgICB9LFxuICAgICAgICB1cGRhdGVDc3NWYXJpYWJsZTogZnVuY3Rpb24gdXBkYXRlQ3NzVmFyaWFibGUodmFyTmFtZSwgdmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gaW5zdGFuY2Uucm9vdF8uc3R5bGUuc2V0UHJvcGVydHkodmFyTmFtZSwgdmFsdWUpO1xuICAgICAgICB9LFxuICAgICAgICBjb21wdXRlQm91bmRpbmdSZWN0OiBmdW5jdGlvbiBjb21wdXRlQm91bmRpbmdSZWN0KCkge1xuICAgICAgICAgIHJldHVybiBpbnN0YW5jZS5yb290Xy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0V2luZG93UGFnZU9mZnNldDogZnVuY3Rpb24gZ2V0V2luZG93UGFnZU9mZnNldCgpIHtcbiAgICAgICAgICByZXR1cm4geyB4OiB3aW5kb3cucGFnZVhPZmZzZXQsIHk6IHdpbmRvdy5wYWdlWU9mZnNldCB9O1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBNRENSaXBwbGU7XG59KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWF0ZXJpYWxfYmFzZV9jb21wb25lbnRfX1tcImFcIiAvKiBkZWZhdWx0ICovXSk7XG5cbi8qKlxuICogU2VlIE1hdGVyaWFsIERlc2lnbiBzcGVjIGZvciBtb3JlIGRldGFpbHMgb24gd2hlbiB0byB1c2UgcmlwcGxlcy5cbiAqIGh0dHBzOi8vbWF0ZXJpYWwuaW8vZ3VpZGVsaW5lcy9tb3Rpb24vY2hvcmVvZ3JhcGh5Lmh0bWwjY2hvcmVvZ3JhcGh5LWNyZWF0aW9uXG4gKiBAcmVjb3JkXG4gKi9cblxuXG52YXIgUmlwcGxlQ2FwYWJsZVN1cmZhY2UgPSBmdW5jdGlvbiBSaXBwbGVDYXBhYmxlU3VyZmFjZSgpIHtcbiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJpcHBsZUNhcGFibGVTdXJmYWNlKTtcbn07XG5cbi8qKiBAcHJvdGVjdGVkIHshRWxlbWVudH0gKi9cblxuXG5SaXBwbGVDYXBhYmxlU3VyZmFjZS5wcm90b3R5cGUucm9vdF87XG5cbi8qKlxuICogV2hldGhlciBvciBub3QgdGhlIHJpcHBsZSBibGVlZHMgb3V0IG9mIHRoZSBib3VuZHMgb2YgdGhlIGVsZW1lbnQuXG4gKiBAdHlwZSB7Ym9vbGVhbnx1bmRlZmluZWR9XG4gKi9cblJpcHBsZUNhcGFibGVTdXJmYWNlLnByb3RvdHlwZS51bmJvdW5kZWQ7XG5cbi8qKlxuICogV2hldGhlciBvciBub3QgdGhlIHJpcHBsZSBpcyBhdHRhY2hlZCB0byBhIGRpc2FibGVkIGNvbXBvbmVudC5cbiAqIEB0eXBlIHtib29sZWFufHVuZGVmaW5lZH1cbiAqL1xuUmlwcGxlQ2FwYWJsZVN1cmZhY2UucHJvdG90eXBlLmRpc2FibGVkO1xuXG5cblxuLyoqKi8gfSksXG4vKiA1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWF0ZXJpYWxfYmFzZV9mb3VuZGF0aW9uX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fYWRhcHRlcl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX2NvbnN0YW50c19fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX3V0aWxfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuXG4gKlxuICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuICogb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuICogaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuICogdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuICogY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4gKiBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuICpcbiAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4gKiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbiAqXG4gKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4gKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbiAqIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuICogQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbiAqIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbiAqIFRIRSBTT0ZUV0FSRS5cbiAqL1xuXG5cblxuXG5cblxuLyoqXG4gKiBAdHlwZWRlZiB7e1xuICogICBpc0FjdGl2YXRlZDogKGJvb2xlYW58dW5kZWZpbmVkKSxcbiAqICAgaGFzRGVhY3RpdmF0aW9uVVhSdW46IChib29sZWFufHVuZGVmaW5lZCksXG4gKiAgIHdhc0FjdGl2YXRlZEJ5UG9pbnRlcjogKGJvb2xlYW58dW5kZWZpbmVkKSxcbiAqICAgd2FzRWxlbWVudE1hZGVBY3RpdmU6IChib29sZWFufHVuZGVmaW5lZCksXG4gKiAgIGFjdGl2YXRpb25FdmVudDogKCFFdmVudHx1bmRlZmluZWQpLFxuICogICBpc1Byb2dyYW1tYXRpYzogKGJvb2xlYW58dW5kZWZpbmVkKVxuICogfX1cbiAqL1xudmFyIEFjdGl2YXRpb25TdGF0ZVR5cGUgPSB2b2lkIDA7XG5cbi8qKlxuICogQHR5cGVkZWYge3tcbiAqICAgYWN0aXZhdGU6IChzdHJpbmd8dW5kZWZpbmVkKSxcbiAqICAgZGVhY3RpdmF0ZTogKHN0cmluZ3x1bmRlZmluZWQpLFxuICogICBmb2N1czogKHN0cmluZ3x1bmRlZmluZWQpLFxuICogICBibHVyOiAoc3RyaW5nfHVuZGVmaW5lZClcbiAqIH19XG4gKi9cbnZhciBMaXN0ZW5lckluZm9UeXBlID0gdm9pZCAwO1xuXG4vKipcbiAqIEB0eXBlZGVmIHt7XG4gKiAgIGFjdGl2YXRlOiBmdW5jdGlvbighRXZlbnQpLFxuICogICBkZWFjdGl2YXRlOiBmdW5jdGlvbighRXZlbnQ9KSxcbiAqICAgZm9jdXM6IGZ1bmN0aW9uKCksXG4gKiAgIGJsdXI6IGZ1bmN0aW9uKClcbiAqIH19XG4gKi9cbnZhciBMaXN0ZW5lcnNUeXBlID0gdm9pZCAwO1xuXG4vKipcbiAqIEB0eXBlZGVmIHt7XG4gKiAgIHg6IG51bWJlcixcbiAqICAgeTogbnVtYmVyXG4gKiB9fVxuICovXG52YXIgUG9pbnRUeXBlID0gdm9pZCAwO1xuXG4vLyBBY3RpdmF0aW9uIGV2ZW50cyByZWdpc3RlcmVkIG9uIHRoZSByb290IGVsZW1lbnQgb2YgZWFjaCBpbnN0YW5jZSBmb3IgYWN0aXZhdGlvblxudmFyIEFDVElWQVRJT05fRVZFTlRfVFlQRVMgPSBbJ3RvdWNoc3RhcnQnLCAncG9pbnRlcmRvd24nLCAnbW91c2Vkb3duJywgJ2tleWRvd24nXTtcblxuLy8gRGVhY3RpdmF0aW9uIGV2ZW50cyByZWdpc3RlcmVkIG9uIGRvY3VtZW50RWxlbWVudCB3aGVuIGEgcG9pbnRlci1yZWxhdGVkIGRvd24gZXZlbnQgb2NjdXJzXG52YXIgUE9JTlRFUl9ERUFDVElWQVRJT05fRVZFTlRfVFlQRVMgPSBbJ3RvdWNoZW5kJywgJ3BvaW50ZXJ1cCcsICdtb3VzZXVwJywgJ2NvbnRleHRtZW51J107XG5cbi8vIFRyYWNrcyBhY3RpdmF0aW9ucyB0aGF0IGhhdmUgb2NjdXJyZWQgb24gdGhlIGN1cnJlbnQgZnJhbWUsIHRvIGF2b2lkIHNpbXVsdGFuZW91cyBuZXN0ZWQgYWN0aXZhdGlvbnNcbi8qKiBAdHlwZSB7IUFycmF5PCFFdmVudFRhcmdldD59ICovXG52YXIgYWN0aXZhdGVkVGFyZ2V0cyA9IFtdO1xuXG4vKipcbiAqIEBleHRlbmRzIHtNRENGb3VuZGF0aW9uPCFNRENSaXBwbGVBZGFwdGVyPn1cbiAqL1xuXG52YXIgTURDUmlwcGxlRm91bmRhdGlvbiA9IGZ1bmN0aW9uIChfTURDRm91bmRhdGlvbikge1xuICBfaW5oZXJpdHMoTURDUmlwcGxlRm91bmRhdGlvbiwgX01EQ0ZvdW5kYXRpb24pO1xuXG4gIF9jcmVhdGVDbGFzcyhNRENSaXBwbGVGb3VuZGF0aW9uLCBudWxsLCBbe1xuICAgIGtleTogJ2Nzc0NsYXNzZXMnLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fY29uc3RhbnRzX19bXCJhXCIgLyogY3NzQ2xhc3NlcyAqL107XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnc3RyaW5ncycsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19jb25zdGFudHNfX1tcImNcIiAvKiBzdHJpbmdzICovXTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdudW1iZXJzJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX2NvbnN0YW50c19fW1wiYlwiIC8qIG51bWJlcnMgKi9dO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2RlZmF1bHRBZGFwdGVyJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGJyb3dzZXJTdXBwb3J0c0Nzc1ZhcnM6IGZ1bmN0aW9uIGJyb3dzZXJTdXBwb3J0c0Nzc1ZhcnMoKSAvKiBib29sZWFuIC0gY2FjaGVkICove30sXG4gICAgICAgIGlzVW5ib3VuZGVkOiBmdW5jdGlvbiBpc1VuYm91bmRlZCgpIC8qIGJvb2xlYW4gKi97fSxcbiAgICAgICAgaXNTdXJmYWNlQWN0aXZlOiBmdW5jdGlvbiBpc1N1cmZhY2VBY3RpdmUoKSAvKiBib29sZWFuICove30sXG4gICAgICAgIGlzU3VyZmFjZURpc2FibGVkOiBmdW5jdGlvbiBpc1N1cmZhY2VEaXNhYmxlZCgpIC8qIGJvb2xlYW4gKi97fSxcbiAgICAgICAgYWRkQ2xhc3M6IGZ1bmN0aW9uIGFkZENsYXNzKCkgLyogY2xhc3NOYW1lOiBzdHJpbmcgKi97fSxcbiAgICAgICAgcmVtb3ZlQ2xhc3M6IGZ1bmN0aW9uIHJlbW92ZUNsYXNzKCkgLyogY2xhc3NOYW1lOiBzdHJpbmcgKi97fSxcbiAgICAgICAgY29udGFpbnNFdmVudFRhcmdldDogZnVuY3Rpb24gY29udGFpbnNFdmVudFRhcmdldCgpIC8qIHRhcmdldDogIUV2ZW50VGFyZ2V0ICove30sXG4gICAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiBmdW5jdGlvbiByZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcigpIC8qIGV2dFR5cGU6IHN0cmluZywgaGFuZGxlcjogRXZlbnRMaXN0ZW5lciAqL3t9LFxuICAgICAgICBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiBmdW5jdGlvbiBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCkgLyogZXZ0VHlwZTogc3RyaW5nLCBoYW5kbGVyOiBFdmVudExpc3RlbmVyICove30sXG4gICAgICAgIHJlZ2lzdGVyRG9jdW1lbnRJbnRlcmFjdGlvbkhhbmRsZXI6IGZ1bmN0aW9uIHJlZ2lzdGVyRG9jdW1lbnRJbnRlcmFjdGlvbkhhbmRsZXIoKSAvKiBldnRUeXBlOiBzdHJpbmcsIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi97fSxcbiAgICAgICAgZGVyZWdpc3RlckRvY3VtZW50SW50ZXJhY3Rpb25IYW5kbGVyOiBmdW5jdGlvbiBkZXJlZ2lzdGVyRG9jdW1lbnRJbnRlcmFjdGlvbkhhbmRsZXIoKSAvKiBldnRUeXBlOiBzdHJpbmcsIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi97fSxcbiAgICAgICAgcmVnaXN0ZXJSZXNpemVIYW5kbGVyOiBmdW5jdGlvbiByZWdpc3RlclJlc2l6ZUhhbmRsZXIoKSAvKiBoYW5kbGVyOiBFdmVudExpc3RlbmVyICove30sXG4gICAgICAgIGRlcmVnaXN0ZXJSZXNpemVIYW5kbGVyOiBmdW5jdGlvbiBkZXJlZ2lzdGVyUmVzaXplSGFuZGxlcigpIC8qIGhhbmRsZXI6IEV2ZW50TGlzdGVuZXIgKi97fSxcbiAgICAgICAgdXBkYXRlQ3NzVmFyaWFibGU6IGZ1bmN0aW9uIHVwZGF0ZUNzc1ZhcmlhYmxlKCkgLyogdmFyTmFtZTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nICove30sXG4gICAgICAgIGNvbXB1dGVCb3VuZGluZ1JlY3Q6IGZ1bmN0aW9uIGNvbXB1dGVCb3VuZGluZ1JlY3QoKSAvKiBDbGllbnRSZWN0ICove30sXG4gICAgICAgIGdldFdpbmRvd1BhZ2VPZmZzZXQ6IGZ1bmN0aW9uIGdldFdpbmRvd1BhZ2VPZmZzZXQoKSAvKiB7eDogbnVtYmVyLCB5OiBudW1iZXJ9ICove31cbiAgICAgIH07XG4gICAgfVxuICB9XSk7XG5cbiAgZnVuY3Rpb24gTURDUmlwcGxlRm91bmRhdGlvbihhZGFwdGVyKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE1EQ1JpcHBsZUZvdW5kYXRpb24pO1xuXG4gICAgLyoqIEBwcml2YXRlIHtudW1iZXJ9ICovXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKE1EQ1JpcHBsZUZvdW5kYXRpb24uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihNRENSaXBwbGVGb3VuZGF0aW9uKSkuY2FsbCh0aGlzLCBfZXh0ZW5kcyhNRENSaXBwbGVGb3VuZGF0aW9uLmRlZmF1bHRBZGFwdGVyLCBhZGFwdGVyKSkpO1xuXG4gICAgX3RoaXMubGF5b3V0RnJhbWVfID0gMDtcblxuICAgIC8qKiBAcHJpdmF0ZSB7IUNsaWVudFJlY3R9ICovXG4gICAgX3RoaXMuZnJhbWVfID0gLyoqIEB0eXBlIHshQ2xpZW50UmVjdH0gKi97IHdpZHRoOiAwLCBoZWlnaHQ6IDAgfTtcblxuICAgIC8qKiBAcHJpdmF0ZSB7IUFjdGl2YXRpb25TdGF0ZVR5cGV9ICovXG4gICAgX3RoaXMuYWN0aXZhdGlvblN0YXRlXyA9IF90aGlzLmRlZmF1bHRBY3RpdmF0aW9uU3RhdGVfKCk7XG5cbiAgICAvKiogQHByaXZhdGUge251bWJlcn0gKi9cbiAgICBfdGhpcy5pbml0aWFsU2l6ZV8gPSAwO1xuXG4gICAgLyoqIEBwcml2YXRlIHtudW1iZXJ9ICovXG4gICAgX3RoaXMubWF4UmFkaXVzXyA9IDA7XG5cbiAgICAvKiogQHByaXZhdGUge2Z1bmN0aW9uKCFFdmVudCl9ICovXG4gICAgX3RoaXMuYWN0aXZhdGVIYW5kbGVyXyA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICByZXR1cm4gX3RoaXMuYWN0aXZhdGVfKGUpO1xuICAgIH07XG5cbiAgICAvKiogQHByaXZhdGUge2Z1bmN0aW9uKCFFdmVudD0pfSAqL1xuICAgIF90aGlzLmRlYWN0aXZhdGVIYW5kbGVyXyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBfdGhpcy5kZWFjdGl2YXRlXygpO1xuICAgIH07XG5cbiAgICAvKiogQHByaXZhdGUge2Z1bmN0aW9uKCFFdmVudD0pfSAqL1xuICAgIF90aGlzLmZvY3VzSGFuZGxlcl8gPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX3RoaXMuaGFuZGxlRm9jdXMoKTtcbiAgICB9O1xuXG4gICAgLyoqIEBwcml2YXRlIHtmdW5jdGlvbighRXZlbnQ9KX0gKi9cbiAgICBfdGhpcy5ibHVySGFuZGxlcl8gPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX3RoaXMuaGFuZGxlQmx1cigpO1xuICAgIH07XG5cbiAgICAvKiogQHByaXZhdGUgeyFGdW5jdGlvbn0gKi9cbiAgICBfdGhpcy5yZXNpemVIYW5kbGVyXyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBfdGhpcy5sYXlvdXQoKTtcbiAgICB9O1xuXG4gICAgLyoqIEBwcml2YXRlIHt7bGVmdDogbnVtYmVyLCB0b3A6bnVtYmVyfX0gKi9cbiAgICBfdGhpcy51bmJvdW5kZWRDb29yZHNfID0ge1xuICAgICAgbGVmdDogMCxcbiAgICAgIHRvcDogMFxuICAgIH07XG5cbiAgICAvKiogQHByaXZhdGUge251bWJlcn0gKi9cbiAgICBfdGhpcy5mZ1NjYWxlXyA9IDA7XG5cbiAgICAvKiogQHByaXZhdGUge251bWJlcn0gKi9cbiAgICBfdGhpcy5hY3RpdmF0aW9uVGltZXJfID0gMDtcblxuICAgIC8qKiBAcHJpdmF0ZSB7bnVtYmVyfSAqL1xuICAgIF90aGlzLmZnRGVhY3RpdmF0aW9uUmVtb3ZhbFRpbWVyXyA9IDA7XG5cbiAgICAvKiogQHByaXZhdGUge2Jvb2xlYW59ICovXG4gICAgX3RoaXMuYWN0aXZhdGlvbkFuaW1hdGlvbkhhc0VuZGVkXyA9IGZhbHNlO1xuXG4gICAgLyoqIEBwcml2YXRlIHshRnVuY3Rpb259ICovXG4gICAgX3RoaXMuYWN0aXZhdGlvblRpbWVyQ2FsbGJhY2tfID0gZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMuYWN0aXZhdGlvbkFuaW1hdGlvbkhhc0VuZGVkXyA9IHRydWU7XG4gICAgICBfdGhpcy5ydW5EZWFjdGl2YXRpb25VWExvZ2ljSWZSZWFkeV8oKTtcbiAgICB9O1xuXG4gICAgLyoqIEBwcml2YXRlIHshRXZlbnR8dW5kZWZpbmVkfSAqL1xuICAgIF90aGlzLnByZXZpb3VzQWN0aXZhdGlvbkV2ZW50XztcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICAvKipcbiAgICogV2UgY29tcHV0ZSB0aGlzIHByb3BlcnR5IHNvIHRoYXQgd2UgYXJlIG5vdCBxdWVyeWluZyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY2xpZW50XG4gICAqIHVudGlsIHRoZSBwb2ludCBpbiB0aW1lIHdoZXJlIHRoZSBmb3VuZGF0aW9uIHJlcXVlc3RzIGl0LiBUaGlzIHByZXZlbnRzIHNjZW5hcmlvcyB3aGVyZVxuICAgKiBjbGllbnQtc2lkZSBmZWF0dXJlLWRldGVjdGlvbiBtYXkgaGFwcGVuIHRvbyBlYXJseSwgc3VjaCBhcyB3aGVuIGNvbXBvbmVudHMgYXJlIHJlbmRlcmVkIG9uIHRoZSBzZXJ2ZXJcbiAgICogYW5kIHRoZW4gaW5pdGlhbGl6ZWQgYXQgbW91bnQgdGltZSBvbiB0aGUgY2xpZW50LlxuICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhNRENSaXBwbGVGb3VuZGF0aW9uLCBbe1xuICAgIGtleTogJ3N1cHBvcnRzUHJlc3NSaXBwbGVfJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3VwcG9ydHNQcmVzc1JpcHBsZV8oKSB7XG4gICAgICByZXR1cm4gdGhpcy5hZGFwdGVyXy5icm93c2VyU3VwcG9ydHNDc3NWYXJzKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHJldHVybiB7IUFjdGl2YXRpb25TdGF0ZVR5cGV9XG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2RlZmF1bHRBY3RpdmF0aW9uU3RhdGVfJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGVmYXVsdEFjdGl2YXRpb25TdGF0ZV8oKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBpc0FjdGl2YXRlZDogZmFsc2UsXG4gICAgICAgIGhhc0RlYWN0aXZhdGlvblVYUnVuOiBmYWxzZSxcbiAgICAgICAgd2FzQWN0aXZhdGVkQnlQb2ludGVyOiBmYWxzZSxcbiAgICAgICAgd2FzRWxlbWVudE1hZGVBY3RpdmU6IGZhbHNlLFxuICAgICAgICBhY3RpdmF0aW9uRXZlbnQ6IHVuZGVmaW5lZCxcbiAgICAgICAgaXNQcm9ncmFtbWF0aWM6IGZhbHNlXG4gICAgICB9O1xuICAgIH1cblxuICAgIC8qKiBAb3ZlcnJpZGUgKi9cblxuICB9LCB7XG4gICAga2V5OiAnaW5pdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIHN1cHBvcnRzUHJlc3NSaXBwbGUgPSB0aGlzLnN1cHBvcnRzUHJlc3NSaXBwbGVfKCk7XG5cbiAgICAgIHRoaXMucmVnaXN0ZXJSb290SGFuZGxlcnNfKHN1cHBvcnRzUHJlc3NSaXBwbGUpO1xuXG4gICAgICBpZiAoc3VwcG9ydHNQcmVzc1JpcHBsZSkge1xuICAgICAgICB2YXIgX01EQ1JpcHBsZUZvdW5kYXRpb24kID0gTURDUmlwcGxlRm91bmRhdGlvbi5jc3NDbGFzc2VzLFxuICAgICAgICAgICAgUk9PVCA9IF9NRENSaXBwbGVGb3VuZGF0aW9uJC5ST09ULFxuICAgICAgICAgICAgVU5CT1VOREVEID0gX01EQ1JpcHBsZUZvdW5kYXRpb24kLlVOQk9VTkRFRDtcblxuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIF90aGlzMi5hZGFwdGVyXy5hZGRDbGFzcyhST09UKTtcbiAgICAgICAgICBpZiAoX3RoaXMyLmFkYXB0ZXJfLmlzVW5ib3VuZGVkKCkpIHtcbiAgICAgICAgICAgIF90aGlzMi5hZGFwdGVyXy5hZGRDbGFzcyhVTkJPVU5ERUQpO1xuICAgICAgICAgICAgLy8gVW5ib3VuZGVkIHJpcHBsZXMgbmVlZCBsYXlvdXQgbG9naWMgYXBwbGllZCBpbW1lZGlhdGVseSB0byBzZXQgY29vcmRpbmF0ZXMgZm9yIGJvdGggc2hhZGUgYW5kIHJpcHBsZVxuICAgICAgICAgICAgX3RoaXMyLmxheW91dEludGVybmFsXygpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEBvdmVycmlkZSAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdkZXN0cm95JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICBpZiAodGhpcy5zdXBwb3J0c1ByZXNzUmlwcGxlXygpKSB7XG4gICAgICAgIGlmICh0aGlzLmFjdGl2YXRpb25UaW1lcl8pIHtcbiAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5hY3RpdmF0aW9uVGltZXJfKTtcbiAgICAgICAgICB0aGlzLmFjdGl2YXRpb25UaW1lcl8gPSAwO1xuICAgICAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoTURDUmlwcGxlRm91bmRhdGlvbi5jc3NDbGFzc2VzLkZHX0FDVElWQVRJT04pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuZmdEZWFjdGl2YXRpb25SZW1vdmFsVGltZXJfKSB7XG4gICAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuZmdEZWFjdGl2YXRpb25SZW1vdmFsVGltZXJfKTtcbiAgICAgICAgICB0aGlzLmZnRGVhY3RpdmF0aW9uUmVtb3ZhbFRpbWVyXyA9IDA7XG4gICAgICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhNRENSaXBwbGVGb3VuZGF0aW9uLmNzc0NsYXNzZXMuRkdfREVBQ1RJVkFUSU9OKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBfTURDUmlwcGxlRm91bmRhdGlvbiQyID0gTURDUmlwcGxlRm91bmRhdGlvbi5jc3NDbGFzc2VzLFxuICAgICAgICAgICAgUk9PVCA9IF9NRENSaXBwbGVGb3VuZGF0aW9uJDIuUk9PVCxcbiAgICAgICAgICAgIFVOQk9VTkRFRCA9IF9NRENSaXBwbGVGb3VuZGF0aW9uJDIuVU5CT1VOREVEO1xuXG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgX3RoaXMzLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKFJPT1QpO1xuICAgICAgICAgIF90aGlzMy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhVTkJPVU5ERUQpO1xuICAgICAgICAgIF90aGlzMy5yZW1vdmVDc3NWYXJzXygpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5kZXJlZ2lzdGVyUm9vdEhhbmRsZXJzXygpO1xuICAgICAgdGhpcy5kZXJlZ2lzdGVyRGVhY3RpdmF0aW9uSGFuZGxlcnNfKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtib29sZWFufSBzdXBwb3J0c1ByZXNzUmlwcGxlIFBhc3NlZCBmcm9tIGluaXQgdG8gc2F2ZSBhIHJlZHVuZGFudCBmdW5jdGlvbiBjYWxsXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAncmVnaXN0ZXJSb290SGFuZGxlcnNfJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVnaXN0ZXJSb290SGFuZGxlcnNfKHN1cHBvcnRzUHJlc3NSaXBwbGUpIHtcbiAgICAgIHZhciBfdGhpczQgPSB0aGlzO1xuXG4gICAgICBpZiAoc3VwcG9ydHNQcmVzc1JpcHBsZSkge1xuICAgICAgICBBQ1RJVkFUSU9OX0VWRU5UX1RZUEVTLmZvckVhY2goZnVuY3Rpb24gKHR5cGUpIHtcbiAgICAgICAgICBfdGhpczQuYWRhcHRlcl8ucmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIodHlwZSwgX3RoaXM0LmFjdGl2YXRlSGFuZGxlcl8pO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHRoaXMuYWRhcHRlcl8uaXNVbmJvdW5kZWQoKSkge1xuICAgICAgICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJSZXNpemVIYW5kbGVyKHRoaXMucmVzaXplSGFuZGxlcl8pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2ZvY3VzJywgdGhpcy5mb2N1c0hhbmRsZXJfKTtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoJ2JsdXInLCB0aGlzLmJsdXJIYW5kbGVyXyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHshRXZlbnR9IGVcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdyZWdpc3RlckRlYWN0aXZhdGlvbkhhbmRsZXJzXycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlZ2lzdGVyRGVhY3RpdmF0aW9uSGFuZGxlcnNfKGUpIHtcbiAgICAgIHZhciBfdGhpczUgPSB0aGlzO1xuXG4gICAgICBpZiAoZS50eXBlID09PSAna2V5ZG93bicpIHtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcigna2V5dXAnLCB0aGlzLmRlYWN0aXZhdGVIYW5kbGVyXyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBQT0lOVEVSX0RFQUNUSVZBVElPTl9FVkVOVF9UWVBFUy5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAgICAgX3RoaXM1LmFkYXB0ZXJfLnJlZ2lzdGVyRG9jdW1lbnRJbnRlcmFjdGlvbkhhbmRsZXIodHlwZSwgX3RoaXM1LmRlYWN0aXZhdGVIYW5kbGVyXyk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdkZXJlZ2lzdGVyUm9vdEhhbmRsZXJzXycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRlcmVnaXN0ZXJSb290SGFuZGxlcnNfKCkge1xuICAgICAgdmFyIF90aGlzNiA9IHRoaXM7XG5cbiAgICAgIEFDVElWQVRJT05fRVZFTlRfVFlQRVMuZm9yRWFjaChmdW5jdGlvbiAodHlwZSkge1xuICAgICAgICBfdGhpczYuYWRhcHRlcl8uZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcih0eXBlLCBfdGhpczYuYWN0aXZhdGVIYW5kbGVyXyk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcignZm9jdXMnLCB0aGlzLmZvY3VzSGFuZGxlcl8pO1xuICAgICAgdGhpcy5hZGFwdGVyXy5kZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKCdibHVyJywgdGhpcy5ibHVySGFuZGxlcl8pO1xuXG4gICAgICBpZiAodGhpcy5hZGFwdGVyXy5pc1VuYm91bmRlZCgpKSB7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlclJlc2l6ZUhhbmRsZXIodGhpcy5yZXNpemVIYW5kbGVyXyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEBwcml2YXRlICovXG5cbiAgfSwge1xuICAgIGtleTogJ2RlcmVnaXN0ZXJEZWFjdGl2YXRpb25IYW5kbGVyc18nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZXJlZ2lzdGVyRGVhY3RpdmF0aW9uSGFuZGxlcnNfKCkge1xuICAgICAgdmFyIF90aGlzNyA9IHRoaXM7XG5cbiAgICAgIHRoaXMuYWRhcHRlcl8uZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcigna2V5dXAnLCB0aGlzLmRlYWN0aXZhdGVIYW5kbGVyXyk7XG4gICAgICBQT0lOVEVSX0RFQUNUSVZBVElPTl9FVkVOVF9UWVBFUy5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAgIF90aGlzNy5hZGFwdGVyXy5kZXJlZ2lzdGVyRG9jdW1lbnRJbnRlcmFjdGlvbkhhbmRsZXIodHlwZSwgX3RoaXM3LmRlYWN0aXZhdGVIYW5kbGVyXyk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cblxuICB9LCB7XG4gICAga2V5OiAncmVtb3ZlQ3NzVmFyc18nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmVDc3NWYXJzXygpIHtcbiAgICAgIHZhciBfdGhpczggPSB0aGlzO1xuXG4gICAgICB2YXIgc3RyaW5ncyA9IE1EQ1JpcHBsZUZvdW5kYXRpb24uc3RyaW5ncztcblxuICAgICAgT2JqZWN0LmtleXMoc3RyaW5ncykuZm9yRWFjaChmdW5jdGlvbiAoaykge1xuICAgICAgICBpZiAoay5pbmRleE9mKCdWQVJfJykgPT09IDApIHtcbiAgICAgICAgICBfdGhpczguYWRhcHRlcl8udXBkYXRlQ3NzVmFyaWFibGUoc3RyaW5nc1trXSwgbnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7IUV2ZW50PX0gZVxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2FjdGl2YXRlXycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFjdGl2YXRlXyhlKSB7XG4gICAgICB2YXIgX3RoaXM5ID0gdGhpcztcblxuICAgICAgaWYgKHRoaXMuYWRhcHRlcl8uaXNTdXJmYWNlRGlzYWJsZWQoKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBhY3RpdmF0aW9uU3RhdGUgPSB0aGlzLmFjdGl2YXRpb25TdGF0ZV87XG4gICAgICBpZiAoYWN0aXZhdGlvblN0YXRlLmlzQWN0aXZhdGVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gQXZvaWQgcmVhY3RpbmcgdG8gZm9sbG93LW9uIGV2ZW50cyBmaXJlZCBieSB0b3VjaCBkZXZpY2UgYWZ0ZXIgYW4gYWxyZWFkeS1wcm9jZXNzZWQgdXNlciBpbnRlcmFjdGlvblxuICAgICAgdmFyIHByZXZpb3VzQWN0aXZhdGlvbkV2ZW50ID0gdGhpcy5wcmV2aW91c0FjdGl2YXRpb25FdmVudF87XG4gICAgICB2YXIgaXNTYW1lSW50ZXJhY3Rpb24gPSBwcmV2aW91c0FjdGl2YXRpb25FdmVudCAmJiBlICE9PSB1bmRlZmluZWQgJiYgcHJldmlvdXNBY3RpdmF0aW9uRXZlbnQudHlwZSAhPT0gZS50eXBlO1xuICAgICAgaWYgKGlzU2FtZUludGVyYWN0aW9uKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYWN0aXZhdGlvblN0YXRlLmlzQWN0aXZhdGVkID0gdHJ1ZTtcbiAgICAgIGFjdGl2YXRpb25TdGF0ZS5pc1Byb2dyYW1tYXRpYyA9IGUgPT09IHVuZGVmaW5lZDtcbiAgICAgIGFjdGl2YXRpb25TdGF0ZS5hY3RpdmF0aW9uRXZlbnQgPSBlO1xuICAgICAgYWN0aXZhdGlvblN0YXRlLndhc0FjdGl2YXRlZEJ5UG9pbnRlciA9IGFjdGl2YXRpb25TdGF0ZS5pc1Byb2dyYW1tYXRpYyA/IGZhbHNlIDogZSAhPT0gdW5kZWZpbmVkICYmIChlLnR5cGUgPT09ICdtb3VzZWRvd24nIHx8IGUudHlwZSA9PT0gJ3RvdWNoc3RhcnQnIHx8IGUudHlwZSA9PT0gJ3BvaW50ZXJkb3duJyk7XG5cbiAgICAgIHZhciBoYXNBY3RpdmF0ZWRDaGlsZCA9IGUgIT09IHVuZGVmaW5lZCAmJiBhY3RpdmF0ZWRUYXJnZXRzLmxlbmd0aCA+IDAgJiYgYWN0aXZhdGVkVGFyZ2V0cy5zb21lKGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzOS5hZGFwdGVyXy5jb250YWluc0V2ZW50VGFyZ2V0KHRhcmdldCk7XG4gICAgICB9KTtcbiAgICAgIGlmIChoYXNBY3RpdmF0ZWRDaGlsZCkge1xuICAgICAgICAvLyBJbW1lZGlhdGVseSByZXNldCBhY3RpdmF0aW9uIHN0YXRlLCB3aGlsZSBwcmVzZXJ2aW5nIGxvZ2ljIHRoYXQgcHJldmVudHMgdG91Y2ggZm9sbG93LW9uIGV2ZW50c1xuICAgICAgICB0aGlzLnJlc2V0QWN0aXZhdGlvblN0YXRlXygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgYWN0aXZhdGVkVGFyZ2V0cy5wdXNoKCAvKiogQHR5cGUgeyFFdmVudFRhcmdldH0gKi9lLnRhcmdldCk7XG4gICAgICAgIHRoaXMucmVnaXN0ZXJEZWFjdGl2YXRpb25IYW5kbGVyc18oZSk7XG4gICAgICB9XG5cbiAgICAgIGFjdGl2YXRpb25TdGF0ZS53YXNFbGVtZW50TWFkZUFjdGl2ZSA9IHRoaXMuY2hlY2tFbGVtZW50TWFkZUFjdGl2ZV8oZSk7XG4gICAgICBpZiAoYWN0aXZhdGlvblN0YXRlLndhc0VsZW1lbnRNYWRlQWN0aXZlKSB7XG4gICAgICAgIHRoaXMuYW5pbWF0ZUFjdGl2YXRpb25fKCk7XG4gICAgICB9XG5cbiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIFJlc2V0IGFycmF5IG9uIG5leHQgZnJhbWUgYWZ0ZXIgdGhlIGN1cnJlbnQgZXZlbnQgaGFzIGhhZCBhIGNoYW5jZSB0byBidWJibGUgdG8gcHJldmVudCBhbmNlc3RvciByaXBwbGVzXG4gICAgICAgIGFjdGl2YXRlZFRhcmdldHMgPSBbXTtcblxuICAgICAgICBpZiAoIWFjdGl2YXRpb25TdGF0ZS53YXNFbGVtZW50TWFkZUFjdGl2ZSAmJiBlICE9PSB1bmRlZmluZWQgJiYgKGUua2V5ID09PSAnICcgfHwgZS5rZXlDb2RlID09PSAzMikpIHtcbiAgICAgICAgICAvLyBJZiBzcGFjZSB3YXMgcHJlc3NlZCwgdHJ5IGFnYWluIHdpdGhpbiBhbiByQUYgY2FsbCB0byBkZXRlY3QgOmFjdGl2ZSwgYmVjYXVzZSBkaWZmZXJlbnQgVUFzIHJlcG9ydFxuICAgICAgICAgIC8vIGFjdGl2ZSBzdGF0ZXMgaW5jb25zaXN0ZW50bHkgd2hlbiB0aGV5J3JlIGNhbGxlZCB3aXRoaW4gZXZlbnQgaGFuZGxpbmcgY29kZTpcbiAgICAgICAgICAvLyAtIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTYzNTk3MVxuICAgICAgICAgIC8vIC0gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTI5Mzc0MVxuICAgICAgICAgIC8vIFdlIHRyeSBmaXJzdCBvdXRzaWRlIHJBRiB0byBzdXBwb3J0IEVkZ2UsIHdoaWNoIGRvZXMgbm90IGV4aGliaXQgdGhpcyBwcm9ibGVtLCBidXQgd2lsbCBjcmFzaCBpZiBhIENTU1xuICAgICAgICAgIC8vIHZhcmlhYmxlIGlzIHNldCB3aXRoaW4gYSByQUYgY2FsbGJhY2sgZm9yIGEgc3VibWl0IGJ1dHRvbiBpbnRlcmFjdGlvbiAoIzIyNDEpLlxuICAgICAgICAgIGFjdGl2YXRpb25TdGF0ZS53YXNFbGVtZW50TWFkZUFjdGl2ZSA9IF90aGlzOS5jaGVja0VsZW1lbnRNYWRlQWN0aXZlXyhlKTtcbiAgICAgICAgICBpZiAoYWN0aXZhdGlvblN0YXRlLndhc0VsZW1lbnRNYWRlQWN0aXZlKSB7XG4gICAgICAgICAgICBfdGhpczkuYW5pbWF0ZUFjdGl2YXRpb25fKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFhY3RpdmF0aW9uU3RhdGUud2FzRWxlbWVudE1hZGVBY3RpdmUpIHtcbiAgICAgICAgICAvLyBSZXNldCBhY3RpdmF0aW9uIHN0YXRlIGltbWVkaWF0ZWx5IGlmIGVsZW1lbnQgd2FzIG5vdCBtYWRlIGFjdGl2ZS5cbiAgICAgICAgICBfdGhpczkuYWN0aXZhdGlvblN0YXRlXyA9IF90aGlzOS5kZWZhdWx0QWN0aXZhdGlvblN0YXRlXygpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0geyFFdmVudD19IGVcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdjaGVja0VsZW1lbnRNYWRlQWN0aXZlXycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNoZWNrRWxlbWVudE1hZGVBY3RpdmVfKGUpIHtcbiAgICAgIHJldHVybiBlICE9PSB1bmRlZmluZWQgJiYgZS50eXBlID09PSAna2V5ZG93bicgPyB0aGlzLmFkYXB0ZXJfLmlzU3VyZmFjZUFjdGl2ZSgpIDogdHJ1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0geyFFdmVudD19IGV2ZW50IE9wdGlvbmFsIGV2ZW50IGNvbnRhaW5pbmcgcG9zaXRpb24gaW5mb3JtYXRpb24uXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2FjdGl2YXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWN0aXZhdGUoZXZlbnQpIHtcbiAgICAgIHRoaXMuYWN0aXZhdGVfKGV2ZW50KTtcbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cblxuICB9LCB7XG4gICAga2V5OiAnYW5pbWF0ZUFjdGl2YXRpb25fJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gYW5pbWF0ZUFjdGl2YXRpb25fKCkge1xuICAgICAgdmFyIF90aGlzMTAgPSB0aGlzO1xuXG4gICAgICB2YXIgX01EQ1JpcHBsZUZvdW5kYXRpb24kMyA9IE1EQ1JpcHBsZUZvdW5kYXRpb24uc3RyaW5ncyxcbiAgICAgICAgICBWQVJfRkdfVFJBTlNMQVRFX1NUQVJUID0gX01EQ1JpcHBsZUZvdW5kYXRpb24kMy5WQVJfRkdfVFJBTlNMQVRFX1NUQVJULFxuICAgICAgICAgIFZBUl9GR19UUkFOU0xBVEVfRU5EID0gX01EQ1JpcHBsZUZvdW5kYXRpb24kMy5WQVJfRkdfVFJBTlNMQVRFX0VORDtcbiAgICAgIHZhciBfTURDUmlwcGxlRm91bmRhdGlvbiQ0ID0gTURDUmlwcGxlRm91bmRhdGlvbi5jc3NDbGFzc2VzLFxuICAgICAgICAgIEZHX0RFQUNUSVZBVElPTiA9IF9NRENSaXBwbGVGb3VuZGF0aW9uJDQuRkdfREVBQ1RJVkFUSU9OLFxuICAgICAgICAgIEZHX0FDVElWQVRJT04gPSBfTURDUmlwcGxlRm91bmRhdGlvbiQ0LkZHX0FDVElWQVRJT047XG4gICAgICB2YXIgREVBQ1RJVkFUSU9OX1RJTUVPVVRfTVMgPSBNRENSaXBwbGVGb3VuZGF0aW9uLm51bWJlcnMuREVBQ1RJVkFUSU9OX1RJTUVPVVRfTVM7XG5cblxuICAgICAgdGhpcy5sYXlvdXRJbnRlcm5hbF8oKTtcblxuICAgICAgdmFyIHRyYW5zbGF0ZVN0YXJ0ID0gJyc7XG4gICAgICB2YXIgdHJhbnNsYXRlRW5kID0gJyc7XG5cbiAgICAgIGlmICghdGhpcy5hZGFwdGVyXy5pc1VuYm91bmRlZCgpKSB7XG4gICAgICAgIHZhciBfZ2V0RmdUcmFuc2xhdGlvbkNvb3IgPSB0aGlzLmdldEZnVHJhbnNsYXRpb25Db29yZGluYXRlc18oKSxcbiAgICAgICAgICAgIHN0YXJ0UG9pbnQgPSBfZ2V0RmdUcmFuc2xhdGlvbkNvb3Iuc3RhcnRQb2ludCxcbiAgICAgICAgICAgIGVuZFBvaW50ID0gX2dldEZnVHJhbnNsYXRpb25Db29yLmVuZFBvaW50O1xuXG4gICAgICAgIHRyYW5zbGF0ZVN0YXJ0ID0gc3RhcnRQb2ludC54ICsgJ3B4LCAnICsgc3RhcnRQb2ludC55ICsgJ3B4JztcbiAgICAgICAgdHJhbnNsYXRlRW5kID0gZW5kUG9pbnQueCArICdweCwgJyArIGVuZFBvaW50LnkgKyAncHgnO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmFkYXB0ZXJfLnVwZGF0ZUNzc1ZhcmlhYmxlKFZBUl9GR19UUkFOU0xBVEVfU1RBUlQsIHRyYW5zbGF0ZVN0YXJ0KTtcbiAgICAgIHRoaXMuYWRhcHRlcl8udXBkYXRlQ3NzVmFyaWFibGUoVkFSX0ZHX1RSQU5TTEFURV9FTkQsIHRyYW5zbGF0ZUVuZCk7XG4gICAgICAvLyBDYW5jZWwgYW55IG9uZ29pbmcgYWN0aXZhdGlvbi9kZWFjdGl2YXRpb24gYW5pbWF0aW9uc1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuYWN0aXZhdGlvblRpbWVyXyk7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5mZ0RlYWN0aXZhdGlvblJlbW92YWxUaW1lcl8pO1xuICAgICAgdGhpcy5ybUJvdW5kZWRBY3RpdmF0aW9uQ2xhc3Nlc18oKTtcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoRkdfREVBQ1RJVkFUSU9OKTtcblxuICAgICAgLy8gRm9yY2UgbGF5b3V0IGluIG9yZGVyIHRvIHJlLXRyaWdnZXIgdGhlIGFuaW1hdGlvbi5cbiAgICAgIHRoaXMuYWRhcHRlcl8uY29tcHV0ZUJvdW5kaW5nUmVjdCgpO1xuICAgICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhGR19BQ1RJVkFUSU9OKTtcbiAgICAgIHRoaXMuYWN0aXZhdGlvblRpbWVyXyA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX3RoaXMxMC5hY3RpdmF0aW9uVGltZXJDYWxsYmFja18oKTtcbiAgICAgIH0sIERFQUNUSVZBVElPTl9USU1FT1VUX01TKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEByZXR1cm4ge3tzdGFydFBvaW50OiBQb2ludFR5cGUsIGVuZFBvaW50OiBQb2ludFR5cGV9fVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdnZXRGZ1RyYW5zbGF0aW9uQ29vcmRpbmF0ZXNfJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RmdUcmFuc2xhdGlvbkNvb3JkaW5hdGVzXygpIHtcbiAgICAgIHZhciBfYWN0aXZhdGlvblN0YXRlXyA9IHRoaXMuYWN0aXZhdGlvblN0YXRlXyxcbiAgICAgICAgICBhY3RpdmF0aW9uRXZlbnQgPSBfYWN0aXZhdGlvblN0YXRlXy5hY3RpdmF0aW9uRXZlbnQsXG4gICAgICAgICAgd2FzQWN0aXZhdGVkQnlQb2ludGVyID0gX2FjdGl2YXRpb25TdGF0ZV8ud2FzQWN0aXZhdGVkQnlQb2ludGVyO1xuXG5cbiAgICAgIHZhciBzdGFydFBvaW50ID0gdm9pZCAwO1xuICAgICAgaWYgKHdhc0FjdGl2YXRlZEJ5UG9pbnRlcikge1xuICAgICAgICBzdGFydFBvaW50ID0gT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fdXRpbF9fW1wiZ2V0Tm9ybWFsaXplZEV2ZW50Q29vcmRzXCJdKShcbiAgICAgICAgLyoqIEB0eXBlIHshRXZlbnR9ICovYWN0aXZhdGlvbkV2ZW50LCB0aGlzLmFkYXB0ZXJfLmdldFdpbmRvd1BhZ2VPZmZzZXQoKSwgdGhpcy5hZGFwdGVyXy5jb21wdXRlQm91bmRpbmdSZWN0KCkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3RhcnRQb2ludCA9IHtcbiAgICAgICAgICB4OiB0aGlzLmZyYW1lXy53aWR0aCAvIDIsXG4gICAgICAgICAgeTogdGhpcy5mcmFtZV8uaGVpZ2h0IC8gMlxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgLy8gQ2VudGVyIHRoZSBlbGVtZW50IGFyb3VuZCB0aGUgc3RhcnQgcG9pbnQuXG4gICAgICBzdGFydFBvaW50ID0ge1xuICAgICAgICB4OiBzdGFydFBvaW50LnggLSB0aGlzLmluaXRpYWxTaXplXyAvIDIsXG4gICAgICAgIHk6IHN0YXJ0UG9pbnQueSAtIHRoaXMuaW5pdGlhbFNpemVfIC8gMlxuICAgICAgfTtcblxuICAgICAgdmFyIGVuZFBvaW50ID0ge1xuICAgICAgICB4OiB0aGlzLmZyYW1lXy53aWR0aCAvIDIgLSB0aGlzLmluaXRpYWxTaXplXyAvIDIsXG4gICAgICAgIHk6IHRoaXMuZnJhbWVfLmhlaWdodCAvIDIgLSB0aGlzLmluaXRpYWxTaXplXyAvIDJcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiB7IHN0YXJ0UG9pbnQ6IHN0YXJ0UG9pbnQsIGVuZFBvaW50OiBlbmRQb2ludCB9O1xuICAgIH1cblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdydW5EZWFjdGl2YXRpb25VWExvZ2ljSWZSZWFkeV8nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBydW5EZWFjdGl2YXRpb25VWExvZ2ljSWZSZWFkeV8oKSB7XG4gICAgICB2YXIgX3RoaXMxMSA9IHRoaXM7XG5cbiAgICAgIC8vIFRoaXMgbWV0aG9kIGlzIGNhbGxlZCBib3RoIHdoZW4gYSBwb2ludGluZyBkZXZpY2UgaXMgcmVsZWFzZWQsIGFuZCB3aGVuIHRoZSBhY3RpdmF0aW9uIGFuaW1hdGlvbiBlbmRzLlxuICAgICAgLy8gVGhlIGRlYWN0aXZhdGlvbiBhbmltYXRpb24gc2hvdWxkIG9ubHkgcnVuIGFmdGVyIGJvdGggb2YgdGhvc2Ugb2NjdXIuXG4gICAgICB2YXIgRkdfREVBQ1RJVkFUSU9OID0gTURDUmlwcGxlRm91bmRhdGlvbi5jc3NDbGFzc2VzLkZHX0RFQUNUSVZBVElPTjtcbiAgICAgIHZhciBfYWN0aXZhdGlvblN0YXRlXzIgPSB0aGlzLmFjdGl2YXRpb25TdGF0ZV8sXG4gICAgICAgICAgaGFzRGVhY3RpdmF0aW9uVVhSdW4gPSBfYWN0aXZhdGlvblN0YXRlXzIuaGFzRGVhY3RpdmF0aW9uVVhSdW4sXG4gICAgICAgICAgaXNBY3RpdmF0ZWQgPSBfYWN0aXZhdGlvblN0YXRlXzIuaXNBY3RpdmF0ZWQ7XG5cbiAgICAgIHZhciBhY3RpdmF0aW9uSGFzRW5kZWQgPSBoYXNEZWFjdGl2YXRpb25VWFJ1biB8fCAhaXNBY3RpdmF0ZWQ7XG5cbiAgICAgIGlmIChhY3RpdmF0aW9uSGFzRW5kZWQgJiYgdGhpcy5hY3RpdmF0aW9uQW5pbWF0aW9uSGFzRW5kZWRfKSB7XG4gICAgICAgIHRoaXMucm1Cb3VuZGVkQWN0aXZhdGlvbkNsYXNzZXNfKCk7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoRkdfREVBQ1RJVkFUSU9OKTtcbiAgICAgICAgdGhpcy5mZ0RlYWN0aXZhdGlvblJlbW92YWxUaW1lcl8gPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfdGhpczExLmFkYXB0ZXJfLnJlbW92ZUNsYXNzKEZHX0RFQUNUSVZBVElPTik7XG4gICAgICAgIH0sIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fY29uc3RhbnRzX19bXCJiXCIgLyogbnVtYmVycyAqL10uRkdfREVBQ1RJVkFUSU9OX01TKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cblxuICB9LCB7XG4gICAga2V5OiAncm1Cb3VuZGVkQWN0aXZhdGlvbkNsYXNzZXNfJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcm1Cb3VuZGVkQWN0aXZhdGlvbkNsYXNzZXNfKCkge1xuICAgICAgdmFyIEZHX0FDVElWQVRJT04gPSBNRENSaXBwbGVGb3VuZGF0aW9uLmNzc0NsYXNzZXMuRkdfQUNUSVZBVElPTjtcblxuICAgICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVDbGFzcyhGR19BQ1RJVkFUSU9OKTtcbiAgICAgIHRoaXMuYWN0aXZhdGlvbkFuaW1hdGlvbkhhc0VuZGVkXyA9IGZhbHNlO1xuICAgICAgdGhpcy5hZGFwdGVyXy5jb21wdXRlQm91bmRpbmdSZWN0KCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVzZXRBY3RpdmF0aW9uU3RhdGVfJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVzZXRBY3RpdmF0aW9uU3RhdGVfKCkge1xuICAgICAgdmFyIF90aGlzMTIgPSB0aGlzO1xuXG4gICAgICB0aGlzLnByZXZpb3VzQWN0aXZhdGlvbkV2ZW50XyA9IHRoaXMuYWN0aXZhdGlvblN0YXRlXy5hY3RpdmF0aW9uRXZlbnQ7XG4gICAgICB0aGlzLmFjdGl2YXRpb25TdGF0ZV8gPSB0aGlzLmRlZmF1bHRBY3RpdmF0aW9uU3RhdGVfKCk7XG4gICAgICAvLyBUb3VjaCBkZXZpY2VzIG1heSBmaXJlIGFkZGl0aW9uYWwgZXZlbnRzIGZvciB0aGUgc2FtZSBpbnRlcmFjdGlvbiB3aXRoaW4gYSBzaG9ydCB0aW1lLlxuICAgICAgLy8gU3RvcmUgdGhlIHByZXZpb3VzIGV2ZW50IHVudGlsIGl0J3Mgc2FmZSB0byBhc3N1bWUgdGhhdCBzdWJzZXF1ZW50IGV2ZW50cyBhcmUgZm9yIG5ldyBpbnRlcmFjdGlvbnMuXG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMTIucHJldmlvdXNBY3RpdmF0aW9uRXZlbnRfID0gdW5kZWZpbmVkO1xuICAgICAgfSwgTURDUmlwcGxlRm91bmRhdGlvbi5udW1iZXJzLlRBUF9ERUxBWV9NUyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnZGVhY3RpdmF0ZV8nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZWFjdGl2YXRlXygpIHtcbiAgICAgIHZhciBfdGhpczEzID0gdGhpcztcblxuICAgICAgdmFyIGFjdGl2YXRpb25TdGF0ZSA9IHRoaXMuYWN0aXZhdGlvblN0YXRlXztcbiAgICAgIC8vIFRoaXMgY2FuIGhhcHBlbiBpbiBzY2VuYXJpb3Mgc3VjaCBhcyB3aGVuIHlvdSBoYXZlIGEga2V5dXAgZXZlbnQgdGhhdCBibHVycyB0aGUgZWxlbWVudC5cbiAgICAgIGlmICghYWN0aXZhdGlvblN0YXRlLmlzQWN0aXZhdGVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIHN0YXRlID0gLyoqIEB0eXBlIHshQWN0aXZhdGlvblN0YXRlVHlwZX0gKi9fZXh0ZW5kcyh7fSwgYWN0aXZhdGlvblN0YXRlKTtcblxuICAgICAgaWYgKGFjdGl2YXRpb25TdGF0ZS5pc1Byb2dyYW1tYXRpYykge1xuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczEzLmFuaW1hdGVEZWFjdGl2YXRpb25fKHN0YXRlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucmVzZXRBY3RpdmF0aW9uU3RhdGVfKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmRlcmVnaXN0ZXJEZWFjdGl2YXRpb25IYW5kbGVyc18oKTtcbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfdGhpczEzLmFjdGl2YXRpb25TdGF0ZV8uaGFzRGVhY3RpdmF0aW9uVVhSdW4gPSB0cnVlO1xuICAgICAgICAgIF90aGlzMTMuYW5pbWF0ZURlYWN0aXZhdGlvbl8oc3RhdGUpO1xuICAgICAgICAgIF90aGlzMTMucmVzZXRBY3RpdmF0aW9uU3RhdGVfKCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2RlYWN0aXZhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZWFjdGl2YXRlKCkge1xuICAgICAgdGhpcy5kZWFjdGl2YXRlXygpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7IUFjdGl2YXRpb25TdGF0ZVR5cGV9IG9wdGlvbnNcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdhbmltYXRlRGVhY3RpdmF0aW9uXycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFuaW1hdGVEZWFjdGl2YXRpb25fKF9yZWYpIHtcbiAgICAgIHZhciB3YXNBY3RpdmF0ZWRCeVBvaW50ZXIgPSBfcmVmLndhc0FjdGl2YXRlZEJ5UG9pbnRlcixcbiAgICAgICAgICB3YXNFbGVtZW50TWFkZUFjdGl2ZSA9IF9yZWYud2FzRWxlbWVudE1hZGVBY3RpdmU7XG5cbiAgICAgIGlmICh3YXNBY3RpdmF0ZWRCeVBvaW50ZXIgfHwgd2FzRWxlbWVudE1hZGVBY3RpdmUpIHtcbiAgICAgICAgdGhpcy5ydW5EZWFjdGl2YXRpb25VWExvZ2ljSWZSZWFkeV8oKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdsYXlvdXQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsYXlvdXQoKSB7XG4gICAgICB2YXIgX3RoaXMxNCA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLmxheW91dEZyYW1lXykge1xuICAgICAgICBjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLmxheW91dEZyYW1lXyk7XG4gICAgICB9XG4gICAgICB0aGlzLmxheW91dEZyYW1lXyA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzMTQubGF5b3V0SW50ZXJuYWxfKCk7XG4gICAgICAgIF90aGlzMTQubGF5b3V0RnJhbWVfID0gMDtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdsYXlvdXRJbnRlcm5hbF8nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsYXlvdXRJbnRlcm5hbF8oKSB7XG4gICAgICB2YXIgX3RoaXMxNSA9IHRoaXM7XG5cbiAgICAgIHRoaXMuZnJhbWVfID0gdGhpcy5hZGFwdGVyXy5jb21wdXRlQm91bmRpbmdSZWN0KCk7XG4gICAgICB2YXIgbWF4RGltID0gTWF0aC5tYXgodGhpcy5mcmFtZV8uaGVpZ2h0LCB0aGlzLmZyYW1lXy53aWR0aCk7XG5cbiAgICAgIC8vIFN1cmZhY2UgZGlhbWV0ZXIgaXMgdHJlYXRlZCBkaWZmZXJlbnRseSBmb3IgdW5ib3VuZGVkIHZzLiBib3VuZGVkIHJpcHBsZXMuXG4gICAgICAvLyBVbmJvdW5kZWQgcmlwcGxlIGRpYW1ldGVyIGlzIGNhbGN1bGF0ZWQgc21hbGxlciBzaW5jZSB0aGUgc3VyZmFjZSBpcyBleHBlY3RlZCB0byBhbHJlYWR5IGJlIHBhZGRlZCBhcHByb3ByaWF0ZWx5XG4gICAgICAvLyB0byBleHRlbmQgdGhlIGhpdGJveCwgYW5kIHRoZSByaXBwbGUgaXMgZXhwZWN0ZWQgdG8gbWVldCB0aGUgZWRnZXMgb2YgdGhlIHBhZGRlZCBoaXRib3ggKHdoaWNoIGlzIHR5cGljYWxseVxuICAgICAgLy8gc3F1YXJlKS4gQm91bmRlZCByaXBwbGVzLCBvbiB0aGUgb3RoZXIgaGFuZCwgYXJlIGZ1bGx5IGV4cGVjdGVkIHRvIGV4cGFuZCBiZXlvbmQgdGhlIHN1cmZhY2UncyBsb25nZXN0IGRpYW1ldGVyXG4gICAgICAvLyAoY2FsY3VsYXRlZCBiYXNlZCBvbiB0aGUgZGlhZ29uYWwgcGx1cyBhIGNvbnN0YW50IHBhZGRpbmcpLCBhbmQgYXJlIGNsaXBwZWQgYXQgdGhlIHN1cmZhY2UncyBib3JkZXIgdmlhXG4gICAgICAvLyBgb3ZlcmZsb3c6IGhpZGRlbmAuXG4gICAgICB2YXIgZ2V0Qm91bmRlZFJhZGl1cyA9IGZ1bmN0aW9uIGdldEJvdW5kZWRSYWRpdXMoKSB7XG4gICAgICAgIHZhciBoeXBvdGVudXNlID0gTWF0aC5zcXJ0KE1hdGgucG93KF90aGlzMTUuZnJhbWVfLndpZHRoLCAyKSArIE1hdGgucG93KF90aGlzMTUuZnJhbWVfLmhlaWdodCwgMikpO1xuICAgICAgICByZXR1cm4gaHlwb3RlbnVzZSArIE1EQ1JpcHBsZUZvdW5kYXRpb24ubnVtYmVycy5QQURESU5HO1xuICAgICAgfTtcblxuICAgICAgdGhpcy5tYXhSYWRpdXNfID0gdGhpcy5hZGFwdGVyXy5pc1VuYm91bmRlZCgpID8gbWF4RGltIDogZ2V0Qm91bmRlZFJhZGl1cygpO1xuXG4gICAgICAvLyBSaXBwbGUgaXMgc2l6ZWQgYXMgYSBmcmFjdGlvbiBvZiB0aGUgbGFyZ2VzdCBkaW1lbnNpb24gb2YgdGhlIHN1cmZhY2UsIHRoZW4gc2NhbGVzIHVwIHVzaW5nIGEgQ1NTIHNjYWxlIHRyYW5zZm9ybVxuICAgICAgdGhpcy5pbml0aWFsU2l6ZV8gPSBNYXRoLmZsb29yKG1heERpbSAqIE1EQ1JpcHBsZUZvdW5kYXRpb24ubnVtYmVycy5JTklUSUFMX09SSUdJTl9TQ0FMRSk7XG4gICAgICB0aGlzLmZnU2NhbGVfID0gdGhpcy5tYXhSYWRpdXNfIC8gdGhpcy5pbml0aWFsU2l6ZV87XG5cbiAgICAgIHRoaXMudXBkYXRlTGF5b3V0Q3NzVmFyc18oKTtcbiAgICB9XG5cbiAgICAvKiogQHByaXZhdGUgKi9cblxuICB9LCB7XG4gICAga2V5OiAndXBkYXRlTGF5b3V0Q3NzVmFyc18nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVMYXlvdXRDc3NWYXJzXygpIHtcbiAgICAgIHZhciBfTURDUmlwcGxlRm91bmRhdGlvbiQ1ID0gTURDUmlwcGxlRm91bmRhdGlvbi5zdHJpbmdzLFxuICAgICAgICAgIFZBUl9GR19TSVpFID0gX01EQ1JpcHBsZUZvdW5kYXRpb24kNS5WQVJfRkdfU0laRSxcbiAgICAgICAgICBWQVJfTEVGVCA9IF9NRENSaXBwbGVGb3VuZGF0aW9uJDUuVkFSX0xFRlQsXG4gICAgICAgICAgVkFSX1RPUCA9IF9NRENSaXBwbGVGb3VuZGF0aW9uJDUuVkFSX1RPUCxcbiAgICAgICAgICBWQVJfRkdfU0NBTEUgPSBfTURDUmlwcGxlRm91bmRhdGlvbiQ1LlZBUl9GR19TQ0FMRTtcblxuXG4gICAgICB0aGlzLmFkYXB0ZXJfLnVwZGF0ZUNzc1ZhcmlhYmxlKFZBUl9GR19TSVpFLCB0aGlzLmluaXRpYWxTaXplXyArICdweCcpO1xuICAgICAgdGhpcy5hZGFwdGVyXy51cGRhdGVDc3NWYXJpYWJsZShWQVJfRkdfU0NBTEUsIHRoaXMuZmdTY2FsZV8pO1xuXG4gICAgICBpZiAodGhpcy5hZGFwdGVyXy5pc1VuYm91bmRlZCgpKSB7XG4gICAgICAgIHRoaXMudW5ib3VuZGVkQ29vcmRzXyA9IHtcbiAgICAgICAgICBsZWZ0OiBNYXRoLnJvdW5kKHRoaXMuZnJhbWVfLndpZHRoIC8gMiAtIHRoaXMuaW5pdGlhbFNpemVfIC8gMiksXG4gICAgICAgICAgdG9wOiBNYXRoLnJvdW5kKHRoaXMuZnJhbWVfLmhlaWdodCAvIDIgLSB0aGlzLmluaXRpYWxTaXplXyAvIDIpXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5hZGFwdGVyXy51cGRhdGVDc3NWYXJpYWJsZShWQVJfTEVGVCwgdGhpcy51bmJvdW5kZWRDb29yZHNfLmxlZnQgKyAncHgnKTtcbiAgICAgICAgdGhpcy5hZGFwdGVyXy51cGRhdGVDc3NWYXJpYWJsZShWQVJfVE9QLCB0aGlzLnVuYm91bmRlZENvb3Jkc18udG9wICsgJ3B4Jyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqIEBwYXJhbSB7Ym9vbGVhbn0gdW5ib3VuZGVkICovXG5cbiAgfSwge1xuICAgIGtleTogJ3NldFVuYm91bmRlZCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldFVuYm91bmRlZCh1bmJvdW5kZWQpIHtcbiAgICAgIHZhciBVTkJPVU5ERUQgPSBNRENSaXBwbGVGb3VuZGF0aW9uLmNzc0NsYXNzZXMuVU5CT1VOREVEO1xuXG4gICAgICBpZiAodW5ib3VuZGVkKSB7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoVU5CT1VOREVEKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoVU5CT1VOREVEKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdoYW5kbGVGb2N1cycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZUZvY3VzKCkge1xuICAgICAgdmFyIF90aGlzMTYgPSB0aGlzO1xuXG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX3RoaXMxNi5hZGFwdGVyXy5hZGRDbGFzcyhNRENSaXBwbGVGb3VuZGF0aW9uLmNzc0NsYXNzZXMuQkdfRk9DVVNFRCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdoYW5kbGVCbHVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFuZGxlQmx1cigpIHtcbiAgICAgIHZhciBfdGhpczE3ID0gdGhpcztcblxuICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMTcuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoTURDUmlwcGxlRm91bmRhdGlvbi5jc3NDbGFzc2VzLkJHX0ZPQ1VTRUQpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIE1EQ1JpcHBsZUZvdW5kYXRpb247XG59KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fbWF0ZXJpYWxfYmFzZV9mb3VuZGF0aW9uX19bXCJhXCIgLyogZGVmYXVsdCAqL10pO1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXCJhXCJdID0gKE1EQ1JpcHBsZUZvdW5kYXRpb24pO1xuXG4vKioqLyB9KSxcbi8qIDYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiYVwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIGNzc0NsYXNzZXM7IH0pO1xuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcImNcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBzdHJpbmdzOyB9KTtcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJiXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gbnVtYmVyczsgfSk7XG4vKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBHb29nbGUgSW5jLlxuICpcbiAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbiAqIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbiAqIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbiAqIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbiAqIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuICogZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbiAqXG4gKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuICogYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4gKlxuICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuICogSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4gKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbiAqIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbiAqIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4gKiBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4gKiBUSEUgU09GVFdBUkUuXG4gKi9cblxudmFyIGNzc0NsYXNzZXMgPSB7XG4gIC8vIFJpcHBsZSBpcyBhIHNwZWNpYWwgY2FzZSB3aGVyZSB0aGUgXCJyb290XCIgY29tcG9uZW50IGlzIHJlYWxseSBhIFwibWl4aW5cIiBvZiBzb3J0cyxcbiAgLy8gZ2l2ZW4gdGhhdCBpdCdzIGFuICd1cGdyYWRlJyB0byBhbiBleGlzdGluZyBjb21wb25lbnQuIFRoYXQgYmVpbmcgc2FpZCBpdCBpcyB0aGUgcm9vdFxuICAvLyBDU1MgY2xhc3MgdGhhdCBhbGwgb3RoZXIgQ1NTIGNsYXNzZXMgZGVyaXZlIGZyb20uXG4gIFJPT1Q6ICdtZGMtcmlwcGxlLXVwZ3JhZGVkJyxcbiAgVU5CT1VOREVEOiAnbWRjLXJpcHBsZS11cGdyYWRlZC0tdW5ib3VuZGVkJyxcbiAgQkdfRk9DVVNFRDogJ21kYy1yaXBwbGUtdXBncmFkZWQtLWJhY2tncm91bmQtZm9jdXNlZCcsXG4gIEZHX0FDVElWQVRJT046ICdtZGMtcmlwcGxlLXVwZ3JhZGVkLS1mb3JlZ3JvdW5kLWFjdGl2YXRpb24nLFxuICBGR19ERUFDVElWQVRJT046ICdtZGMtcmlwcGxlLXVwZ3JhZGVkLS1mb3JlZ3JvdW5kLWRlYWN0aXZhdGlvbidcbn07XG5cbnZhciBzdHJpbmdzID0ge1xuICBWQVJfTEVGVDogJy0tbWRjLXJpcHBsZS1sZWZ0JyxcbiAgVkFSX1RPUDogJy0tbWRjLXJpcHBsZS10b3AnLFxuICBWQVJfRkdfU0laRTogJy0tbWRjLXJpcHBsZS1mZy1zaXplJyxcbiAgVkFSX0ZHX1NDQUxFOiAnLS1tZGMtcmlwcGxlLWZnLXNjYWxlJyxcbiAgVkFSX0ZHX1RSQU5TTEFURV9TVEFSVDogJy0tbWRjLXJpcHBsZS1mZy10cmFuc2xhdGUtc3RhcnQnLFxuICBWQVJfRkdfVFJBTlNMQVRFX0VORDogJy0tbWRjLXJpcHBsZS1mZy10cmFuc2xhdGUtZW5kJ1xufTtcblxudmFyIG51bWJlcnMgPSB7XG4gIFBBRERJTkc6IDEwLFxuICBJTklUSUFMX09SSUdJTl9TQ0FMRTogMC42LFxuICBERUFDVElWQVRJT05fVElNRU9VVF9NUzogMjI1LCAvLyBDb3JyZXNwb25kcyB0byAkbWRjLXJpcHBsZS10cmFuc2xhdGUtZHVyYXRpb24gKGkuZS4gYWN0aXZhdGlvbiBhbmltYXRpb24gZHVyYXRpb24pXG4gIEZHX0RFQUNUSVZBVElPTl9NUzogMTUwLCAvLyBDb3JyZXNwb25kcyB0byAkbWRjLXJpcHBsZS1mYWRlLW91dC1kdXJhdGlvbiAoaS5lLiBkZWFjdGl2YXRpb24gYW5pbWF0aW9uIGR1cmF0aW9uKVxuICBUQVBfREVMQVlfTVM6IDMwMCB9O1xuXG5cblxuLyoqKi8gfSlcbi8qKioqKiovIF0pO1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZGMucmlwcGxlLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//#sourceURL=webpack-internal:///./node_modules/@material/ripple/dist/mdc.ripple.js\n");/***/}),/***/"./node_modules/@material/slider/dist/mdc.slider.js":/*!**********************************************************!*\;!***./node_modules/@material/slider/dist/mdc.slider.js***!;\**********************************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){eval("/*!\r\n Material Components for the Web\r\n Copyright(c)2019 Google Inc.\r\n License:MIT\r\n*/\r\n(function webpackUniversalModuleDefinition(root,factory){\r\n\tif(true)\r\n\t\tmodule.exports=factory();\r\n\telse{}\r\n})(this,function(){\r\nreturn/******/(function(modules){//webpackBootstrap\r\n/******/\t//The module cache\r\n/******/\tvar installedModules={};\r\n/******/\r\n/******/\t//The require function\r\n/******/\tfunction __webpack_require__(moduleId){\r\n/******/\r\n/******/\t\t//Check if module is in cache\r\n/******/\t\tif(installedModules[moduleId]){\r\n/******/\t\t\treturn installedModules[moduleId].exports;\r\n/******/\t\t}\r\n/******/\t\t//Create a new module(and put it into the cache)\r\n/******/\t\tvar module=installedModules[moduleId]={\r\n/******/\t\t\ti:moduleId,\r\n/******/\t\t\tl:false,\r\n/******/\t\t\texports:{}\r\n/******/\t\t};\r\n/******/\r\n/******/\t\t//Execute the module function\r\n/******/\t\tmodules[moduleId].call(module.exports,module,module.exports,__webpack_require__);\r\n/******/\r\n/******/\t\t//Flag the module as loaded\r\n/******/\t\tmodule.l=true;\r\n/******/\r\n/******/\t\t//Return the exports of the module\r\n/******/\t\treturn module.exports;\r\n/******/\t}\r\n/******/\r\n/******/\r\n/******/\t//expose the modules object(__webpack_modules__)\r\n/******/\t__webpack_require__.m=modules;\r\n/******/\r\n/******/\t//expose the module cache\r\n/******/\t__webpack_require__.c=installedModules;\r\n/******/\r\n/******/\t//define getter function for harmony exports\r\n/******/\t__webpack_require__.d=function(exports,name,getter){\r\n/******/\t\tif(!__webpack_require__.o(exports,name)){\r\n/******/\t\t\tObject.defineProperty(exports,name,{\r\n/******/\t\t\t\tconfigurable:false,\r\n/******/\t\t\t\tenumerable:true,\r\n/******/\t\t\t\tget:getter\r\n/******/\t\t\t});\r\n/******/\t\t}\r\n/******/\t};\r\n/******/\r\n/******/\t//getDefaultExport function for compatibility with non-harmony modules\r\n/******/\t__webpack_require__.n=function(module){\r\n/******/\t\tvar getter=module&&module.__esModule?\r\n/******/\t\t\tfunction getDefault(){return module['default'];}:\r\n/******/\t\t\tfunction getModuleExports(){return module;};\r\n/******/\t\t__webpack_require__.d(getter,'a',getter);\r\n/******/\t\treturn getter;\r\n/******/\t};\r\n/******/\r\n/******/\t//Object.prototype.hasOwnProperty.call\r\n/******/\t__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};\r\n/******/\r\n/******/\t//__webpack_public_path__\r\n/******/\t__webpack_require__.p=\"\";\r\n/******/\r\n/******/\t//Load entry module and return exports\r\n/******/\treturn __webpack_require__(__webpack_require__.s=137);\r\n/******/})\r\n/************************************************************************/\r\n/******/({\r\n\r\n/***/0:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n*@template A\r\n*/\r\nvar MDCFoundation=function(){\r\n _createClass(MDCFoundation,null,[{\r\n key:\"cssClasses\",\r\n\r\n/**@return enum{cssClasses}*/\r\n get:function get(){\r\n//Classes extending MDCFoundation should implement this method to return an object which exports every\r\n//CSS class the foundation class needs as a property.e.g.{ACTIVE:'mdc-component--active'}\r\n return{};\r\n}\r\n\r\n/**@return enum{strings}*/\r\n\r\n},{\r\n key:\"strings\",\r\n get:function get(){\r\n//Classes extending MDCFoundation should implement this method to return an object which exports all\r\n//semantic strings as constants.e.g.{ARIA_ROLE:'tablist'}\r\n return{};\r\n}\r\n\r\n/**@return enum{numbers}*/\r\n\r\n},{\r\n key:\"numbers\",\r\n get:function get(){\r\n//Classes extending MDCFoundation should implement this method to return an object which exports all\r\n//of its semantic numbers as constants.e.g.{ANIMATION_DELAY_MS:350}\r\n return{};\r\n}\r\n\r\n/**@return{!Object}*/\r\n\r\n},{\r\n key:\"defaultAdapter\",\r\n get:function get(){\r\n//Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\r\n//way of viewing the necessary methods of an adapter.In the future,this could also be used for adapter\r\n//validation.\r\n return{};\r\n}\r\n\r\n/**\r\n*@param{A=}adapter\r\n*/\r\n\r\n}]);\r\n\r\n function MDCFoundation(){\r\n var adapter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};\r\n\r\n _classCallCheck(this,MDCFoundation);\r\n\r\n/**@protected{!A}*/\r\n this.adapter_=adapter;\r\n}\r\n\r\n _createClass(MDCFoundation,[{\r\n key:\"init\",\r\n value:function init(){\r\n//Subclasses should override this method to perform initialization routines(registering events,etc.)\r\n}\r\n},{\r\n key:\"destroy\",\r\n value:function destroy(){\r\n//Subclasses should override this method to perform de-initialization routines(de-registering events,etc.)\r\n}\r\n}]);\r\n\r\n return MDCFoundation;\r\n}();\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCFoundation);\r\n\r\n/***/}),\r\n\r\n/***/1:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__foundation__=__webpack_require__(0);\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n/**\r\n*@template F\r\n*/\r\n\r\nvar MDCComponent=function(){\r\n _createClass(MDCComponent,null,[{\r\n key:'attachTo',\r\n\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCComponent}\r\n*/\r\n value:function attachTo(root){\r\n//Subclasses which extend MDCBase should provide an attachTo()method that takes a root element and\r\n//returns an instantiated component with its root set to that element.Also note that in the cases of\r\n//subclasses,an explicit foundation class will not have to be passed in;it will simply be initialized\r\n//from getDefaultFoundation().\r\n return new MDCComponent(root,new __WEBPACK_IMPORTED_MODULE_0__foundation__[\"a\"/*default*/]());\r\n}\r\n\r\n/**\r\n*@param{!Element}root\r\n*@param{F=}foundation\r\n*@param{...?}args\r\n*/\r\n\r\n}]);\r\n\r\n function MDCComponent(root){\r\n var foundation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;\r\n\r\n _classCallCheck(this,MDCComponent);\r\n\r\n/**@protected{!Element}*/\r\n this.root_=root;\r\n\r\n for(var _len=arguments.length,args=Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){\r\n args[_key-2]=arguments[_key];\r\n}\r\n\r\n this.initialize.apply(this,args);\r\n//Note that we initialize foundation here and not within the constructor's default param so that\r\n//this.root_ is defined and can be used within the foundation class.\r\n/**@protected{!F}*/\r\n this.foundation_=foundation===undefined?this.getDefaultFoundation():foundation;\r\n this.foundation_.init();\r\n this.initialSyncWithDOM();\r\n}\r\n\r\n _createClass(MDCComponent,[{\r\n key:'initialize',\r\n value:function initialize()/*...args*/{}\r\n//Subclasses can override this to do any additional setup work that would be considered part of a\r\n//\"constructor\".Essentially,it is a hook into the parent constructor before the foundation is\r\n//initialized.Any additional arguments besides root and foundation will be passed in here.\r\n\r\n\r\n/**\r\n*@return{!F}foundation\r\n*/\r\n\r\n},{\r\n key:'getDefaultFoundation',\r\n value:function getDefaultFoundation(){\r\n//Subclasses must override this method to return a properly configured foundation class for the\r\n//component.\r\n throw new Error('Subclasses must override getDefaultFoundation to return a properly configured'+'foundation class');\r\n}\r\n},{\r\n key:'initialSyncWithDOM',\r\n value:function initialSyncWithDOM(){\r\n//Subclasses should override this method if they need to perform work to synchronize with a host DOM\r\n//object.An example of this would be a form control wrapper that needs to synchronize its internal state\r\n//to some property or attribute of the host DOM.Please note:this is*not*the place to perform DOM\r\n//reads/writes that would cause layout/paint,as this is called synchronously from within the constructor.\r\n}\r\n},{\r\n key:'destroy',\r\n value:function destroy(){\r\n//Subclasses may implement this method to release any resources/deregister any listeners they have\r\n//attached.An example of this might be deregistering a resize event from the window object.\r\n this.foundation_.destroy();\r\n}\r\n\r\n/**\r\n*Wrapper method to add an event listener to the component's root element.This is most useful when\r\n*listening for custom events.\r\n*@param{string}evtType\r\n*@param{!Function}handler\r\n*/\r\n\r\n},{\r\n key:'listen',\r\n value:function listen(evtType,handler){\r\n this.root_.addEventListener(evtType,handler);\r\n}\r\n\r\n/**\r\n*Wrapper method to remove an event listener to the component's root element.This is most useful when\r\n*unlistening for custom events.\r\n*@param{string}evtType\r\n*@param{!Function}handler\r\n*/\r\n\r\n},{\r\n key:'unlisten',\r\n value:function unlisten(evtType,handler){\r\n this.root_.removeEventListener(evtType,handler);\r\n}\r\n\r\n/**\r\n*Fires a cross-browser-compatible custom event from the component root of the given type,\r\n*with the given data.\r\n*@param{string}evtType\r\n*@param{!Object}evtData\r\n*@param{boolean=}shouldBubble\r\n*/\r\n\r\n},{\r\n key:'emit',\r\n value:function emit(evtType,evtData){\r\n var shouldBubble=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;\r\n\r\n var evt=void 0;\r\n if(typeof CustomEvent==='function'){\r\n evt=new CustomEvent(evtType,{\r\n detail:evtData,\r\n bubbles:shouldBubble\r\n});\r\n}else{\r\n evt=document.createEvent('CustomEvent');\r\n evt.initCustomEvent(evtType,shouldBubble,false,evtData);\r\n}\r\n\r\n this.root_.dispatchEvent(evt);\r\n}\r\n}]);\r\n\r\n return MDCComponent;\r\n}();\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCComponent);\r\n\r\n/***/}),\r\n\r\n/***/137:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nObject.defineProperty(__webpack_exports__,\"__esModule\",{value:true});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCSlider\",function(){return MDCSlider;});\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_component__=__webpack_require__(1);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__constants__=__webpack_require__(76);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__adapter__=__webpack_require__(77);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_3__foundation__=__webpack_require__(138);\r\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCSliderFoundation\",function(){return __WEBPACK_IMPORTED_MODULE_3__foundation__[\"a\"];});\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends MDCComponent<!MDCSliderFoundation>\r\n*/\r\n\r\nvar MDCSlider=function(_MDCComponent){\r\n _inherits(MDCSlider,_MDCComponent);\r\n\r\n _createClass(MDCSlider,null,[{\r\n key:'attachTo',\r\n value:function attachTo(root){\r\n return new MDCSlider(root);\r\n}\r\n}]);\r\n\r\n function MDCSlider(){\r\n var _ref;\r\n\r\n _classCallCheck(this,MDCSlider);\r\n\r\n for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){\r\n args[_key]=arguments[_key];\r\n}\r\n\r\n/**@type{?Element}*/\r\n var _this=_possibleConstructorReturn(this,(_ref=MDCSlider.__proto__||Object.getPrototypeOf(MDCSlider)).call.apply(_ref,[this].concat(args)));\r\n\r\n _this.thumbContainer_;\r\n/**@type{?Element}*/\r\n _this.track_;\r\n/**@type{?Element}*/\r\n _this.pinValueMarker_;\r\n/**@type{?Element}*/\r\n _this.trackMarkerContainer_;\r\n return _this;\r\n}\r\n\r\n/**@return{number}*/\r\n\r\n\r\n _createClass(MDCSlider,[{\r\n key:'initialize',\r\n value:function initialize(){\r\n this.thumbContainer_=this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_1__constants__[\"c\"/*strings*/].THUMB_CONTAINER_SELECTOR);\r\n this.track_=this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_1__constants__[\"c\"/*strings*/].TRACK_SELECTOR);\r\n this.pinValueMarker_=this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_1__constants__[\"c\"/*strings*/].PIN_VALUE_MARKER_SELECTOR);\r\n this.trackMarkerContainer_=this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_1__constants__[\"c\"/*strings*/].TRACK_MARKER_CONTAINER_SELECTOR);\r\n}\r\n\r\n/**\r\n*@return{!MDCSliderFoundation}\r\n*/\r\n\r\n},{\r\n key:'getDefaultFoundation',\r\n value:function getDefaultFoundation(){\r\n var _this2=this;\r\n\r\n return new __WEBPACK_IMPORTED_MODULE_3__foundation__[\"a\"/*default*/](\r\n/**@type{!MDCSliderAdapter}*/{\r\n hasClass:function hasClass(className){\r\n return _this2.root_.classList.contains(className);\r\n},\r\n addClass:function addClass(className){\r\n return _this2.root_.classList.add(className);\r\n},\r\n removeClass:function removeClass(className){\r\n return _this2.root_.classList.remove(className);\r\n},\r\n getAttribute:function getAttribute(name){\r\n return _this2.root_.getAttribute(name);\r\n},\r\n setAttribute:function setAttribute(name,value){\r\n return _this2.root_.setAttribute(name,value);\r\n},\r\n removeAttribute:function removeAttribute(name){\r\n return _this2.root_.removeAttribute(name);\r\n},\r\n computeBoundingRect:function computeBoundingRect(){\r\n return _this2.root_.getBoundingClientRect();\r\n},\r\n getTabIndex:function getTabIndex(){\r\n return _this2.root_.tabIndex;\r\n},\r\n registerInteractionHandler:function registerInteractionHandler(type,handler){\r\n _this2.root_.addEventListener(type,handler);\r\n},\r\n deregisterInteractionHandler:function deregisterInteractionHandler(type,handler){\r\n _this2.root_.removeEventListener(type,handler);\r\n},\r\n registerThumbContainerInteractionHandler:function registerThumbContainerInteractionHandler(type,handler){\r\n _this2.thumbContainer_.addEventListener(type,handler);\r\n},\r\n deregisterThumbContainerInteractionHandler:function deregisterThumbContainerInteractionHandler(type,handler){\r\n _this2.thumbContainer_.removeEventListener(type,handler);\r\n},\r\n registerBodyInteractionHandler:function registerBodyInteractionHandler(type,handler){\r\n document.body.addEventListener(type,handler);\r\n},\r\n deregisterBodyInteractionHandler:function deregisterBodyInteractionHandler(type,handler){\r\n document.body.removeEventListener(type,handler);\r\n},\r\n registerResizeHandler:function registerResizeHandler(handler){\r\n window.addEventListener('resize',handler);\r\n},\r\n deregisterResizeHandler:function deregisterResizeHandler(handler){\r\n window.removeEventListener('resize',handler);\r\n},\r\n notifyInput:function notifyInput(){\r\n _this2.emit(__WEBPACK_IMPORTED_MODULE_1__constants__[\"c\"/*strings*/].INPUT_EVENT,_this2);\r\n},\r\n notifyChange:function notifyChange(){\r\n _this2.emit(__WEBPACK_IMPORTED_MODULE_1__constants__[\"c\"/*strings*/].CHANGE_EVENT,_this2);\r\n},\r\n setThumbContainerStyleProperty:function setThumbContainerStyleProperty(propertyName,value){\r\n _this2.thumbContainer_.style.setProperty(propertyName,value);\r\n},\r\n setTrackStyleProperty:function setTrackStyleProperty(propertyName,value){\r\n _this2.track_.style.setProperty(propertyName,value);\r\n},\r\n setMarkerValue:function setMarkerValue(value){\r\n _this2.pinValueMarker_.innerText=value;\r\n},\r\n appendTrackMarkers:function appendTrackMarkers(numMarkers){\r\n var frag=document.createDocumentFragment();\r\n for(var i=0;i<numMarkers;i++){\r\n var marker=document.createElement('div');\r\n marker.classList.add('mdc-slider__track-marker');\r\n frag.appendChild(marker);\r\n}\r\n _this2.trackMarkerContainer_.appendChild(frag);\r\n},\r\n removeTrackMarkers:function removeTrackMarkers(){\r\n while(_this2.trackMarkerContainer_.firstChild){\r\n _this2.trackMarkerContainer_.removeChild(_this2.trackMarkerContainer_.firstChild);\r\n}\r\n},\r\n setLastTrackMarkersStyleProperty:function setLastTrackMarkersStyleProperty(propertyName,value){\r\n//We remove and append new nodes,thus,the last track marker must be dynamically found.\r\n var lastTrackMarker=_this2.root_.querySelector(__WEBPACK_IMPORTED_MODULE_1__constants__[\"c\"/*strings*/].LAST_TRACK_MARKER_SELECTOR);\r\n lastTrackMarker.style.setProperty(propertyName,value);\r\n},\r\n isRTL:function isRTL(){\r\n return getComputedStyle(_this2.root_).direction==='rtl';\r\n}\r\n});\r\n}\r\n},{\r\n key:'initialSyncWithDOM',\r\n value:function initialSyncWithDOM(){\r\n var origValueNow=parseFloat(this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_1__constants__[\"c\"/*strings*/].ARIA_VALUENOW));\r\n var min=parseFloat(this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_1__constants__[\"c\"/*strings*/].ARIA_VALUEMIN))||this.min;\r\n var max=parseFloat(this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_1__constants__[\"c\"/*strings*/].ARIA_VALUEMAX))||this.max;\r\n\r\n//min and max need to be set in the right order to avoid throwing an error\r\n//when the new min is greater than the default max.\r\n if(min>=this.max){\r\n this.max=max;\r\n this.min=min;\r\n}else{\r\n this.min=min;\r\n this.max=max;\r\n}\r\n\r\n this.step=parseFloat(this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_1__constants__[\"c\"/*strings*/].STEP_DATA_ATTR))||this.step;\r\n this.value=origValueNow||this.value;\r\n this.disabled=this.root_.hasAttribute(__WEBPACK_IMPORTED_MODULE_1__constants__[\"c\"/*strings*/].ARIA_DISABLED)&&this.root_.getAttribute(__WEBPACK_IMPORTED_MODULE_1__constants__[\"c\"/*strings*/].ARIA_DISABLED)!=='false';\r\n this.foundation_.setupTrackMarker();\r\n}\r\n},{\r\n key:'layout',\r\n value:function layout(){\r\n this.foundation_.layout();\r\n}\r\n\r\n/**@param{number=}amount*/\r\n\r\n},{\r\n key:'stepUp',\r\n value:function stepUp(){\r\n var amount=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.step||1;\r\n\r\n this.value+=amount;\r\n}\r\n\r\n/**@param{number=}amount*/\r\n\r\n},{\r\n key:'stepDown',\r\n value:function stepDown(){\r\n var amount=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.step||1;\r\n\r\n this.value-=amount;\r\n}\r\n},{\r\n key:'value',\r\n get:function get(){\r\n return this.foundation_.getValue();\r\n}\r\n\r\n/**@param{number}value*/\r\n,\r\n set:function set(value){\r\n this.foundation_.setValue(value);\r\n}\r\n\r\n/**@return{number}*/\r\n\r\n},{\r\n key:'min',\r\n get:function get(){\r\n return this.foundation_.getMin();\r\n}\r\n\r\n/**@param{number}min*/\r\n,\r\n set:function set(min){\r\n this.foundation_.setMin(min);\r\n}\r\n\r\n/**@return{number}*/\r\n\r\n},{\r\n key:'max',\r\n get:function get(){\r\n return this.foundation_.getMax();\r\n}\r\n\r\n/**@param{number}max*/\r\n,\r\n set:function set(max){\r\n this.foundation_.setMax(max);\r\n}\r\n\r\n/**@return{number}*/\r\n\r\n},{\r\n key:'step',\r\n get:function get(){\r\n return this.foundation_.getStep();\r\n}\r\n\r\n/**@param{number}step*/\r\n,\r\n set:function set(step){\r\n this.foundation_.setStep(step);\r\n}\r\n\r\n/**@return{boolean}*/\r\n\r\n},{\r\n key:'disabled',\r\n get:function get(){\r\n return this.foundation_.isDisabled();\r\n}\r\n\r\n/**@param{boolean}disabled*/\r\n,\r\n set:function set(disabled){\r\n this.foundation_.setDisabled(disabled);\r\n}\r\n}]);\r\n\r\n return MDCSlider;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\"/*default*/]);\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/138:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__constants__=__webpack_require__(76);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(77);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__material_animation_index__=__webpack_require__(14);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_3__material_base_foundation__=__webpack_require__(0);\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**@enum{string}*/\r\nvar KEY_IDS={\r\n ARROW_LEFT:'ArrowLeft',\r\n ARROW_RIGHT:'ArrowRight',\r\n ARROW_UP:'ArrowUp',\r\n ARROW_DOWN:'ArrowDown',\r\n HOME:'Home',\r\n END:'End',\r\n PAGE_UP:'PageUp',\r\n PAGE_DOWN:'PageDown'\r\n};\r\n\r\n/**@enum{string}*/\r\nvar MOVE_EVENT_MAP={\r\n'mousedown':'mousemove',\r\n'touchstart':'touchmove',\r\n'pointerdown':'pointermove'\r\n};\r\n\r\nvar DOWN_EVENTS=['mousedown','pointerdown','touchstart'];\r\nvar UP_EVENTS=['mouseup','pointerup','touchend'];\r\n\r\n/**\r\n*@extends{MDCFoundation<!MDCSliderAdapter>}\r\n*/\r\n\r\nvar MDCSliderFoundation=function(_MDCFoundation){\r\n _inherits(MDCSliderFoundation,_MDCFoundation);\r\n\r\n _createClass(MDCSliderFoundation,null,[{\r\n key:'cssClasses',\r\n\r\n/**@return enum{cssClasses}*/\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_0__constants__[\"a\"/*cssClasses*/];\r\n}\r\n\r\n/**@return enum{strings}*/\r\n\r\n},{\r\n key:'strings',\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_0__constants__[\"c\"/*strings*/];\r\n}\r\n\r\n/**@return enum{numbers}*/\r\n\r\n},{\r\n key:'numbers',\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_0__constants__[\"b\"/*numbers*/];\r\n}\r\n\r\n/**@return{!MDCSliderAdapter}*/\r\n\r\n},{\r\n key:'defaultAdapter',\r\n get:function get(){\r\n return(/**@type{!MDCSliderAdapter}*/{\r\n hasClass:function hasClass(){\r\n return(/*className:string*//*boolean*/false\r\n);\r\n},\r\n addClass:function addClass()/*className:string*/{},\r\n removeClass:function removeClass()/*className:string*/{},\r\n getAttribute:function getAttribute(){\r\n return(/*name:string*//*string|null*/null\r\n);\r\n},\r\n setAttribute:function setAttribute()/*name:string,value:string*/{},\r\n removeAttribute:function removeAttribute()/*name:string*/{},\r\n computeBoundingRect:function computeBoundingRect(){\r\n return(/*ClientRect*/{\r\n top:0,right:0,bottom:0,left:0,width:0,height:0\r\n}\r\n);\r\n},\r\n getTabIndex:function getTabIndex(){\r\n return(/*number*/0\r\n);\r\n},\r\n registerInteractionHandler:function registerInteractionHandler()/*type:string,handler:EventListener*/{},\r\n deregisterInteractionHandler:function deregisterInteractionHandler()/*type:string,handler:EventListener*/{},\r\n registerThumbContainerInteractionHandler:function registerThumbContainerInteractionHandler()/*type:string,handler:EventListener*/{},\r\n deregisterThumbContainerInteractionHandler:function deregisterThumbContainerInteractionHandler()/*type:string,handler:EventListener*/{},\r\n registerBodyInteractionHandler:function registerBodyInteractionHandler()/*type:string,handler:EventListener*/{},\r\n deregisterBodyInteractionHandler:function deregisterBodyInteractionHandler()/*type:string,handler:EventListener*/{},\r\n registerResizeHandler:function registerResizeHandler()/*handler:EventListener*/{},\r\n deregisterResizeHandler:function deregisterResizeHandler()/*handler:EventListener*/{},\r\n notifyInput:function notifyInput(){},\r\n notifyChange:function notifyChange(){},\r\n setThumbContainerStyleProperty:function setThumbContainerStyleProperty()/*propertyName:string,value:string*/{},\r\n setTrackStyleProperty:function setTrackStyleProperty()/*propertyName:string,value:string*/{},\r\n setMarkerValue:function setMarkerValue()/*value:number*/{},\r\n appendTrackMarkers:function appendTrackMarkers()/*numMarkers:number*/{},\r\n removeTrackMarkers:function removeTrackMarkers(){},\r\n setLastTrackMarkersStyleProperty:function setLastTrackMarkersStyleProperty()/*propertyName:string,value:string*/{},\r\n isRTL:function isRTL(){\r\n return(/*boolean*/false\r\n);\r\n}\r\n}\r\n);\r\n}\r\n\r\n/**\r\n*Creates a new instance of MDCSliderFoundation\r\n*@param{?MDCSliderAdapter}adapter\r\n*/\r\n\r\n}]);\r\n\r\n function MDCSliderFoundation(adapter){\r\n _classCallCheck(this,MDCSliderFoundation);\r\n\r\n/**@private{?ClientRect}*/\r\n var _this=_possibleConstructorReturn(this,(MDCSliderFoundation.__proto__||Object.getPrototypeOf(MDCSliderFoundation)).call(this,_extends(MDCSliderFoundation.defaultAdapter,adapter)));\r\n\r\n _this.rect_=null;\r\n//We set this to NaN since we want it to be a number,but we can't use'0'or'-1'\r\n//because those could be valid tabindices set by the client code.\r\n _this.savedTabIndex_=NaN;\r\n _this.active_=false;\r\n _this.inTransit_=false;\r\n _this.isDiscrete_=false;\r\n _this.hasTrackMarker_=false;\r\n _this.handlingThumbTargetEvt_=false;\r\n _this.min_=0;\r\n _this.max_=100;\r\n _this.step_=0;\r\n _this.value_=0;\r\n _this.disabled_=false;\r\n _this.preventFocusState_=false;\r\n _this.updateUIFrame_=0;\r\n _this.thumbContainerPointerHandler_=function(){\r\n _this.handlingThumbTargetEvt_=true;\r\n};\r\n _this.interactionStartHandler_=function(evt){\r\n return _this.handleDown_(evt);\r\n};\r\n _this.keydownHandler_=function(evt){\r\n return _this.handleKeydown_(evt);\r\n};\r\n _this.focusHandler_=function(){\r\n return _this.handleFocus_();\r\n};\r\n _this.blurHandler_=function(){\r\n return _this.handleBlur_();\r\n};\r\n _this.resizeHandler_=function(){\r\n return _this.layout();\r\n};\r\n return _this;\r\n}\r\n\r\n _createClass(MDCSliderFoundation,[{\r\n key:'init',\r\n value:function init(){\r\n var _this2=this;\r\n\r\n this.isDiscrete_=this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\"/*cssClasses*/].IS_DISCRETE);\r\n this.hasTrackMarker_=this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\"/*cssClasses*/].HAS_TRACK_MARKER);\r\n DOWN_EVENTS.forEach(function(evtName){\r\n return _this2.adapter_.registerInteractionHandler(evtName,_this2.interactionStartHandler_);\r\n});\r\n this.adapter_.registerInteractionHandler('keydown',this.keydownHandler_);\r\n this.adapter_.registerInteractionHandler('focus',this.focusHandler_);\r\n this.adapter_.registerInteractionHandler('blur',this.blurHandler_);\r\n DOWN_EVENTS.forEach(function(evtName){\r\n _this2.adapter_.registerThumbContainerInteractionHandler(evtName,_this2.thumbContainerPointerHandler_);\r\n});\r\n this.adapter_.registerResizeHandler(this.resizeHandler_);\r\n this.layout();\r\n//At last step,provide a reasonable default value to discrete slider\r\n if(this.isDiscrete_&&this.getStep()==0){\r\n this.step_=1;\r\n}\r\n}\r\n},{\r\n key:'destroy',\r\n value:function destroy(){\r\n var _this3=this;\r\n\r\n DOWN_EVENTS.forEach(function(evtName){\r\n _this3.adapter_.deregisterInteractionHandler(evtName,_this3.interactionStartHandler_);\r\n});\r\n this.adapter_.deregisterInteractionHandler('keydown',this.keydownHandler_);\r\n this.adapter_.deregisterInteractionHandler('focus',this.focusHandler_);\r\n this.adapter_.deregisterInteractionHandler('blur',this.blurHandler_);\r\n DOWN_EVENTS.forEach(function(evtName){\r\n _this3.adapter_.deregisterThumbContainerInteractionHandler(evtName,_this3.thumbContainerPointerHandler_);\r\n});\r\n this.adapter_.deregisterResizeHandler(this.resizeHandler_);\r\n}\r\n},{\r\n key:'setupTrackMarker',\r\n value:function setupTrackMarker(){\r\n if(this.isDiscrete_&&this.hasTrackMarker_&&this.getStep()!=0){\r\n var min=this.getMin();\r\n var max=this.getMax();\r\n var step=this.getStep();\r\n var numMarkers=(max-min)/step;\r\n\r\n//In case distance between max&min is indivisible to step,\r\n//we place the secondary to last marker proportionally at where thumb\r\n//could reach and place the last marker at max value\r\n var indivisible=Math.ceil(numMarkers)!==numMarkers;\r\n if(indivisible){\r\n numMarkers=Math.ceil(numMarkers);\r\n}\r\n\r\n this.adapter_.removeTrackMarkers();\r\n this.adapter_.appendTrackMarkers(numMarkers);\r\n\r\n if(indivisible){\r\n var lastStepRatio=(max-numMarkers*step)/step+1;\r\n var flex=Object(__WEBPACK_IMPORTED_MODULE_2__material_animation_index__[\"getCorrectPropertyName\"])(window,'flex');\r\n this.adapter_.setLastTrackMarkersStyleProperty(flex,String(lastStepRatio));\r\n}\r\n}\r\n}\r\n},{\r\n key:'layout',\r\n value:function layout(){\r\n this.rect_=this.adapter_.computeBoundingRect();\r\n this.updateUIForCurrentValue_();\r\n}\r\n\r\n/**@return{number}*/\r\n\r\n},{\r\n key:'getValue',\r\n value:function getValue(){\r\n return this.value_;\r\n}\r\n\r\n/**@param{number}value*/\r\n\r\n},{\r\n key:'setValue',\r\n value:function setValue(value){\r\n this.setValue_(value,false);\r\n}\r\n\r\n/**@return{number}*/\r\n\r\n},{\r\n key:'getMax',\r\n value:function getMax(){\r\n return this.max_;\r\n}\r\n\r\n/**@param{number}max*/\r\n\r\n},{\r\n key:'setMax',\r\n value:function setMax(max){\r\n if(max<this.min_){\r\n throw new Error('Cannot set max to be less than the slider\\'s minimum value');\r\n}\r\n this.max_=max;\r\n this.setValue_(this.value_,false,true);\r\n this.adapter_.setAttribute(__WEBPACK_IMPORTED_MODULE_0__constants__[\"c\"/*strings*/].ARIA_VALUEMAX,String(this.max_));\r\n this.setupTrackMarker();\r\n}\r\n\r\n/**@return{number}*/\r\n\r\n},{\r\n key:'getMin',\r\n value:function getMin(){\r\n return this.min_;\r\n}\r\n\r\n/**@param{number}min*/\r\n\r\n},{\r\n key:'setMin',\r\n value:function setMin(min){\r\n if(min>this.max_){\r\n throw new Error('Cannot set min to be greater than the slider\\'s maximum value');\r\n}\r\n this.min_=min;\r\n this.setValue_(this.value_,false,true);\r\n this.adapter_.setAttribute(__WEBPACK_IMPORTED_MODULE_0__constants__[\"c\"/*strings*/].ARIA_VALUEMIN,String(this.min_));\r\n this.setupTrackMarker();\r\n}\r\n\r\n/**@return{number}*/\r\n\r\n},{\r\n key:'getStep',\r\n value:function getStep(){\r\n return this.step_;\r\n}\r\n\r\n/**@param{number}step*/\r\n\r\n},{\r\n key:'setStep',\r\n value:function setStep(step){\r\n if(step<0){\r\n throw new Error('Step cannot be set to a negative number');\r\n}\r\n if(this.isDiscrete_&&(typeof step!=='number'||step<1)){\r\n step=1;\r\n}\r\n this.step_=step;\r\n this.setValue_(this.value_,false,true);\r\n this.setupTrackMarker();\r\n}\r\n\r\n/**@return{boolean}*/\r\n\r\n},{\r\n key:'isDisabled',\r\n value:function isDisabled(){\r\n return this.disabled_;\r\n}\r\n\r\n/**@param{boolean}disabled*/\r\n\r\n},{\r\n key:'setDisabled',\r\n value:function setDisabled(disabled){\r\n this.disabled_=disabled;\r\n this.toggleClass_(__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\"/*cssClasses*/].DISABLED,this.disabled_);\r\n if(this.disabled_){\r\n this.savedTabIndex_=this.adapter_.getTabIndex();\r\n this.adapter_.setAttribute(__WEBPACK_IMPORTED_MODULE_0__constants__[\"c\"/*strings*/].ARIA_DISABLED,'true');\r\n this.adapter_.removeAttribute('tabindex');\r\n}else{\r\n this.adapter_.removeAttribute(__WEBPACK_IMPORTED_MODULE_0__constants__[\"c\"/*strings*/].ARIA_DISABLED);\r\n if(!isNaN(this.savedTabIndex_)){\r\n this.adapter_.setAttribute('tabindex',String(this.savedTabIndex_));\r\n}\r\n}\r\n}\r\n\r\n/**\r\n*Called when the user starts interacting with the slider\r\n*@param{!Event}evt\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'handleDown_',\r\n value:function handleDown_(evt){\r\n var _this4=this;\r\n\r\n if(this.disabled_){\r\n return;\r\n}\r\n\r\n this.preventFocusState_=true;\r\n this.setInTransit_(!this.handlingThumbTargetEvt_);\r\n this.handlingThumbTargetEvt_=false;\r\n this.setActive_(true);\r\n\r\n var moveHandler=function moveHandler(evt){\r\n _this4.handleMove_(evt);\r\n};\r\n\r\n//Note:upHandler is[de]registered on ALL potential pointer-related release event types,since some browsers\r\n//do not always fire these consistently in pairs.\r\n//(See https://github.com/material-components/material-components-web/issues/1192)\r\n var upHandler=function upHandler(){\r\n _this4.handleUp_();\r\n _this4.adapter_.deregisterBodyInteractionHandler(MOVE_EVENT_MAP[evt.type],moveHandler);\r\n UP_EVENTS.forEach(function(evtName){\r\n return _this4.adapter_.deregisterBodyInteractionHandler(evtName,upHandler);\r\n});\r\n};\r\n\r\n this.adapter_.registerBodyInteractionHandler(MOVE_EVENT_MAP[evt.type],moveHandler);\r\n UP_EVENTS.forEach(function(evtName){\r\n return _this4.adapter_.registerBodyInteractionHandler(evtName,upHandler);\r\n});\r\n this.setValueFromEvt_(evt);\r\n}\r\n\r\n/**\r\n*Called when the user moves the slider\r\n*@param{!Event}evt\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'handleMove_',\r\n value:function handleMove_(evt){\r\n evt.preventDefault();\r\n this.setValueFromEvt_(evt);\r\n}\r\n\r\n/**\r\n*Called when the user's interaction with the slider ends\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'handleUp_',\r\n value:function handleUp_(){\r\n this.setActive_(false);\r\n this.adapter_.notifyChange();\r\n}\r\n\r\n/**\r\n*Returns the pageX of the event\r\n*@param{!Event}evt\r\n*@return{number}\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'getPageX_',\r\n value:function getPageX_(evt){\r\n if(evt.targetTouches&&evt.targetTouches.length>0){\r\n return evt.targetTouches[0].pageX;\r\n}\r\n return evt.pageX;\r\n}\r\n\r\n/**\r\n*Sets the slider value from an event\r\n*@param{!Event}evt\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'setValueFromEvt_',\r\n value:function setValueFromEvt_(evt){\r\n var pageX=this.getPageX_(evt);\r\n var value=this.computeValueFromPageX_(pageX);\r\n this.setValue_(value,true);\r\n}\r\n\r\n/**\r\n*Computes the new value from the pageX position\r\n*@param{number}pageX\r\n*@return{number}\r\n*/\r\n\r\n},{\r\n key:'computeValueFromPageX_',\r\n value:function computeValueFromPageX_(pageX){\r\n var max=this.max_,\r\n min=this.min_;\r\n\r\n var xPos=pageX-this.rect_.left;\r\n var pctComplete=xPos/this.rect_.width;\r\n if(this.adapter_.isRTL()){\r\n pctComplete=1-pctComplete;\r\n}\r\n//Fit the percentage complete between the range[min,max]\r\n//by remapping from[0,1]to[min,min+(max-min)].\r\n return min+pctComplete*(max-min);\r\n}\r\n\r\n/**\r\n*Handles keydown events\r\n*@param{!Event}evt\r\n*/\r\n\r\n},{\r\n key:'handleKeydown_',\r\n value:function handleKeydown_(evt){\r\n var keyId=this.getKeyId_(evt);\r\n var value=this.getValueForKeyId_(keyId);\r\n if(isNaN(value)){\r\n return;\r\n}\r\n\r\n//Prevent page from scrolling due to key presses that would normally scroll the page\r\n evt.preventDefault();\r\n this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\"/*cssClasses*/].FOCUS);\r\n this.setValue_(value,true);\r\n this.adapter_.notifyChange();\r\n}\r\n\r\n/**\r\n*Returns the computed name of the event\r\n*@param{!Event}kbdEvt\r\n*@return{string}\r\n*/\r\n\r\n},{\r\n key:'getKeyId_',\r\n value:function getKeyId_(kbdEvt){\r\n if(kbdEvt.key===KEY_IDS.ARROW_LEFT||kbdEvt.keyCode===37){\r\n return KEY_IDS.ARROW_LEFT;\r\n}\r\n if(kbdEvt.key===KEY_IDS.ARROW_RIGHT||kbdEvt.keyCode===39){\r\n return KEY_IDS.ARROW_RIGHT;\r\n}\r\n if(kbdEvt.key===KEY_IDS.ARROW_UP||kbdEvt.keyCode===38){\r\n return KEY_IDS.ARROW_UP;\r\n}\r\n if(kbdEvt.key===KEY_IDS.ARROW_DOWN||kbdEvt.keyCode===40){\r\n return KEY_IDS.ARROW_DOWN;\r\n}\r\n if(kbdEvt.key===KEY_IDS.HOME||kbdEvt.keyCode===36){\r\n return KEY_IDS.HOME;\r\n}\r\n if(kbdEvt.key===KEY_IDS.END||kbdEvt.keyCode===35){\r\n return KEY_IDS.END;\r\n}\r\n if(kbdEvt.key===KEY_IDS.PAGE_UP||kbdEvt.keyCode===33){\r\n return KEY_IDS.PAGE_UP;\r\n}\r\n if(kbdEvt.key===KEY_IDS.PAGE_DOWN||kbdEvt.keyCode===34){\r\n return KEY_IDS.PAGE_DOWN;\r\n}\r\n\r\n return'';\r\n}\r\n\r\n/**\r\n*Computes the value given a keyboard key ID\r\n*@param{string}keyId\r\n*@return{number}\r\n*/\r\n\r\n},{\r\n key:'getValueForKeyId_',\r\n value:function getValueForKeyId_(keyId){\r\n var max=this.max_,\r\n min=this.min_,\r\n step=this.step_;\r\n\r\n var delta=step||(max-min)/100;\r\n var valueNeedsToBeFlipped=this.adapter_.isRTL()&&(keyId===KEY_IDS.ARROW_LEFT||keyId===KEY_IDS.ARROW_RIGHT);\r\n if(valueNeedsToBeFlipped){\r\n delta=-delta;\r\n}\r\n\r\n switch(keyId){\r\n case KEY_IDS.ARROW_LEFT:\r\n case KEY_IDS.ARROW_DOWN:\r\n return this.value_-delta;\r\n case KEY_IDS.ARROW_RIGHT:\r\n case KEY_IDS.ARROW_UP:\r\n return this.value_+delta;\r\n case KEY_IDS.HOME:\r\n return this.min_;\r\n case KEY_IDS.END:\r\n return this.max_;\r\n case KEY_IDS.PAGE_UP:\r\n return this.value_+delta*__WEBPACK_IMPORTED_MODULE_0__constants__[\"b\"/*numbers*/].PAGE_FACTOR;\r\n case KEY_IDS.PAGE_DOWN:\r\n return this.value_-delta*__WEBPACK_IMPORTED_MODULE_0__constants__[\"b\"/*numbers*/].PAGE_FACTOR;\r\n default:\r\n return NaN;\r\n}\r\n}\r\n},{\r\n key:'handleFocus_',\r\n value:function handleFocus_(){\r\n if(this.preventFocusState_){\r\n return;\r\n}\r\n this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\"/*cssClasses*/].FOCUS);\r\n}\r\n},{\r\n key:'handleBlur_',\r\n value:function handleBlur_(){\r\n this.preventFocusState_=false;\r\n this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\"/*cssClasses*/].FOCUS);\r\n}\r\n\r\n/**\r\n*Sets the value of the slider\r\n*@param{number}value\r\n*@param{boolean}shouldFireInput\r\n*@param{boolean=}force\r\n*/\r\n\r\n},{\r\n key:'setValue_',\r\n value:function setValue_(value,shouldFireInput){\r\n var force=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;\r\n\r\n if(value===this.value_&&!force){\r\n return;\r\n}\r\n\r\n var min=this.min_,\r\n max=this.max_;\r\n\r\n var valueSetToBoundary=value===min||value===max;\r\n if(this.step_&&!valueSetToBoundary){\r\n value=this.quantize_(value);\r\n}\r\n if(value<min){\r\n value=min;\r\n}else if(value>max){\r\n value=max;\r\n}\r\n this.value_=value;\r\n this.adapter_.setAttribute(__WEBPACK_IMPORTED_MODULE_0__constants__[\"c\"/*strings*/].ARIA_VALUENOW,String(this.value_));\r\n this.updateUIForCurrentValue_();\r\n\r\n if(shouldFireInput){\r\n this.adapter_.notifyInput();\r\n if(this.isDiscrete_){\r\n this.adapter_.setMarkerValue(value);\r\n}\r\n}\r\n}\r\n\r\n/**\r\n*Calculates the quantized value\r\n*@param{number}value\r\n*@return{number}\r\n*/\r\n\r\n},{\r\n key:'quantize_',\r\n value:function quantize_(value){\r\n var numSteps=Math.round(value/this.step_);\r\n var quantizedVal=numSteps*this.step_;\r\n return quantizedVal;\r\n}\r\n},{\r\n key:'updateUIForCurrentValue_',\r\n value:function updateUIForCurrentValue_(){\r\n var _this5=this;\r\n\r\n var max=this.max_,\r\n min=this.min_,\r\n value=this.value_;\r\n\r\n var pctComplete=(value-min)/(max-min);\r\n var translatePx=pctComplete*this.rect_.width;\r\n if(this.adapter_.isRTL()){\r\n translatePx=this.rect_.width-translatePx;\r\n}\r\n\r\n var transformProp=Object(__WEBPACK_IMPORTED_MODULE_2__material_animation_index__[\"getCorrectPropertyName\"])(window,'transform');\r\n var transitionendEvtName=Object(__WEBPACK_IMPORTED_MODULE_2__material_animation_index__[\"getCorrectEventName\"])(window,'transitionend');\r\n\r\n if(this.inTransit_){\r\n var onTransitionEnd=function onTransitionEnd(){\r\n _this5.setInTransit_(false);\r\n _this5.adapter_.deregisterThumbContainerInteractionHandler(transitionendEvtName,onTransitionEnd);\r\n};\r\n this.adapter_.registerThumbContainerInteractionHandler(transitionendEvtName,onTransitionEnd);\r\n}\r\n\r\n this.updateUIFrame_=requestAnimationFrame(function(){\r\n//NOTE(traviskaufman):It would be nice to use calc()here,\r\n//but IE cannot handle calcs in transforms correctly.\r\n//See:https://goo.gl/NC2itk\r\n//Also note that the-50%offset is used to center the slider thumb.\r\n _this5.adapter_.setThumbContainerStyleProperty(transformProp,'translateX('+translatePx+'px)translateX(-50%)');\r\n _this5.adapter_.setTrackStyleProperty(transformProp,'scaleX('+pctComplete+')');\r\n});\r\n}\r\n\r\n/**\r\n*Toggles the active state of the slider\r\n*@param{boolean}active\r\n*/\r\n\r\n},{\r\n key:'setActive_',\r\n value:function setActive_(active){\r\n this.active_=active;\r\n this.toggleClass_(__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\"/*cssClasses*/].ACTIVE,this.active_);\r\n}\r\n\r\n/**\r\n*Toggles the inTransit state of the slider\r\n*@param{boolean}inTransit\r\n*/\r\n\r\n},{\r\n key:'setInTransit_',\r\n value:function setInTransit_(inTransit){\r\n this.inTransit_=inTransit;\r\n this.toggleClass_(__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\"/*cssClasses*/].IN_TRANSIT,this.inTransit_);\r\n}\r\n\r\n/**\r\n*Conditionally adds or removes a class based on shouldBePresent\r\n*@param{string}className\r\n*@param{boolean}shouldBePresent\r\n*/\r\n\r\n},{\r\n key:'toggleClass_',\r\n value:function toggleClass_(className,shouldBePresent){\r\n if(shouldBePresent){\r\n this.adapter_.addClass(className);\r\n}else{\r\n this.adapter_.removeClass(className);\r\n}\r\n}\r\n}]);\r\n\r\n return MDCSliderFoundation;\r\n}(__WEBPACK_IMPORTED_MODULE_3__material_base_foundation__[\"a\"/*default*/]);\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCSliderFoundation);\r\n\r\n/***/}),\r\n\r\n/***/14:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nObject.defineProperty(__webpack_exports__,\"__esModule\",{value:true});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"transformStyleProperties\",function(){return transformStyleProperties;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"getCorrectEventName\",function(){return getCorrectEventName;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"getCorrectPropertyName\",function(){return getCorrectPropertyName;});\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n*@typedef{{\r\n*noPrefix:string,\r\n*webkitPrefix:string,\r\n*styleProperty:string\r\n*}}\r\n*/\r\nvar VendorPropertyMapType=void 0;\r\n\r\n/**@const{Object<string,!VendorPropertyMapType>}*/\r\nvar eventTypeMap={\r\n'animationstart':{\r\n noPrefix:'animationstart',\r\n webkitPrefix:'webkitAnimationStart',\r\n styleProperty:'animation'\r\n},\r\n'animationend':{\r\n noPrefix:'animationend',\r\n webkitPrefix:'webkitAnimationEnd',\r\n styleProperty:'animation'\r\n},\r\n'animationiteration':{\r\n noPrefix:'animationiteration',\r\n webkitPrefix:'webkitAnimationIteration',\r\n styleProperty:'animation'\r\n},\r\n'transitionend':{\r\n noPrefix:'transitionend',\r\n webkitPrefix:'webkitTransitionEnd',\r\n styleProperty:'transition'\r\n}\r\n};\r\n\r\n/**@const{Object<string,!VendorPropertyMapType>}*/\r\nvar cssPropertyMap={\r\n'animation':{\r\n noPrefix:'animation',\r\n webkitPrefix:'-webkit-animation'\r\n},\r\n'transform':{\r\n noPrefix:'transform',\r\n webkitPrefix:'-webkit-transform'\r\n},\r\n'transition':{\r\n noPrefix:'transition',\r\n webkitPrefix:'-webkit-transition'\r\n}\r\n};\r\n\r\n/**\r\n*@param{!Object}windowObj\r\n*@return{boolean}\r\n*/\r\nfunction hasProperShape(windowObj){\r\n return windowObj['document']!==undefined&&typeof windowObj['document']['createElement']==='function';\r\n}\r\n\r\n/**\r\n*@param{string}eventType\r\n*@return{boolean}\r\n*/\r\nfunction eventFoundInMaps(eventType){\r\n return eventType in eventTypeMap||eventType in cssPropertyMap;\r\n}\r\n\r\n/**\r\n*@param{string}eventType\r\n*@param{!Object<string,!VendorPropertyMapType>}map\r\n*@param{!Element}el\r\n*@return{string}\r\n*/\r\nfunction getJavaScriptEventName(eventType,map,el){\r\n return map[eventType].styleProperty in el.style?map[eventType].noPrefix:map[eventType].webkitPrefix;\r\n}\r\n\r\n/**\r\n*Helper function to determine browser prefix for CSS3 animation events\r\n*and property names.\r\n*@param{!Object}windowObj\r\n*@param{string}eventType\r\n*@return{string}\r\n*/\r\nfunction getAnimationName(windowObj,eventType){\r\n if(!hasProperShape(windowObj)||!eventFoundInMaps(eventType)){\r\n return eventType;\r\n}\r\n\r\n var map=/**@type{!Object<string,!VendorPropertyMapType>}*/eventType in eventTypeMap?eventTypeMap:cssPropertyMap;\r\n var el=windowObj['document']['createElement']('div');\r\n var eventName='';\r\n\r\n if(map===eventTypeMap){\r\n eventName=getJavaScriptEventName(eventType,map,el);\r\n}else{\r\n eventName=map[eventType].noPrefix in el.style?map[eventType].noPrefix:map[eventType].webkitPrefix;\r\n}\r\n\r\n return eventName;\r\n}\r\n\r\n//Public functions to access getAnimationName()for JavaScript events or CSS\r\n//property names.\r\n\r\nvar transformStyleProperties=['transform','WebkitTransform','MozTransform','OTransform','MSTransform'];\r\n\r\n/**\r\n*@param{!Object}windowObj\r\n*@param{string}eventType\r\n*@return{string}\r\n*/\r\nfunction getCorrectEventName(windowObj,eventType){\r\n return getAnimationName(windowObj,eventType);\r\n}\r\n\r\n/**\r\n*@param{!Object}windowObj\r\n*@param{string}eventType\r\n*@return{string}\r\n*/\r\nfunction getCorrectPropertyName(windowObj,eventType){\r\n return getAnimationName(windowObj,eventType);\r\n}\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/76:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"a\",function(){return cssClasses;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"c\",function(){return strings;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"b\",function(){return numbers;});\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**@enum{string}*/\r\nvar cssClasses={\r\n ACTIVE:'mdc-slider--active',\r\n DISABLED:'mdc-slider--disabled',\r\n DISCRETE:'mdc-slider--discrete',\r\n FOCUS:'mdc-slider--focus',\r\n IN_TRANSIT:'mdc-slider--in-transit',\r\n IS_DISCRETE:'mdc-slider--discrete',\r\n HAS_TRACK_MARKER:'mdc-slider--display-markers'\r\n};\r\n\r\n/**@enum{string}*/\r\nvar strings={\r\n TRACK_SELECTOR:'.mdc-slider__track',\r\n TRACK_MARKER_CONTAINER_SELECTOR:'.mdc-slider__track-marker-container',\r\n LAST_TRACK_MARKER_SELECTOR:'.mdc-slider__track-marker:last-child',\r\n THUMB_CONTAINER_SELECTOR:'.mdc-slider__thumb-container',\r\n PIN_VALUE_MARKER_SELECTOR:'.mdc-slider__pin-value-marker',\r\n ARIA_VALUEMIN:'aria-valuemin',\r\n ARIA_VALUEMAX:'aria-valuemax',\r\n ARIA_VALUENOW:'aria-valuenow',\r\n ARIA_DISABLED:'aria-disabled',\r\n STEP_DATA_ATTR:'data-step',\r\n CHANGE_EVENT:'MDCSlider:change',\r\n INPUT_EVENT:'MDCSlider:input'\r\n};\r\n\r\n/**@enum{number}*/\r\nvar numbers={\r\n PAGE_FACTOR:4\r\n};\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/77:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/*eslint-disable no-unused-vars*/\r\n\r\n/**\r\n*Adapter for MDC Slider.\r\n*\r\n*Defines the shape of the adapter expected by the foundation.Implement this\r\n*adapter to integrate the Slider into your framework.See\r\n*https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\r\n*for more information.\r\n*\r\n*@record\r\n*/\r\nvar MDCSliderAdapter=function(){\r\n function MDCSliderAdapter(){\r\n _classCallCheck(this,MDCSliderAdapter);\r\n}\r\n\r\n _createClass(MDCSliderAdapter,[{\r\n key:\"hasClass\",\r\n\r\n/**\r\n*Returns true if className exists for the slider Element\r\n*@param{string}className\r\n*@return{boolean}\r\n*/\r\n value:function hasClass(className){}\r\n\r\n/**\r\n*Adds a class to the slider Element\r\n*@param{string}className\r\n*/\r\n\r\n},{\r\n key:\"addClass\",\r\n value:function addClass(className){}\r\n\r\n/**\r\n*Removes a class from the slider Element\r\n*@param{string}className\r\n*/\r\n\r\n},{\r\n key:\"removeClass\",\r\n value:function removeClass(className){}\r\n\r\n/**\r\n*Returns a string if attribute name exists on the slider Element,\r\n*otherwise returns null\r\n*@param{string}name\r\n*@return{?string}\r\n*/\r\n\r\n},{\r\n key:\"getAttribute\",\r\n value:function getAttribute(name){}\r\n\r\n/**\r\n*Sets attribute name on slider Element to value\r\n*@param{string}name\r\n*@param{string}value\r\n*/\r\n\r\n},{\r\n key:\"setAttribute\",\r\n value:function setAttribute(name,value){}\r\n\r\n/**\r\n*Removes attribute name from slider Element\r\n*@param{string}name\r\n*/\r\n\r\n},{\r\n key:\"removeAttribute\",\r\n value:function removeAttribute(name){}\r\n\r\n/**\r\n*Returns the bounding client rect for the slider Element\r\n*@return{?ClientRect}\r\n*/\r\n\r\n},{\r\n key:\"computeBoundingRect\",\r\n value:function computeBoundingRect(){}\r\n\r\n/**\r\n*Returns the tab index of the slider Element\r\n*@return{number}\r\n*/\r\n\r\n},{\r\n key:\"getTabIndex\",\r\n value:function getTabIndex(){}\r\n\r\n/**\r\n*Registers an event handler on the root element for a given event.\r\n*@param{string}type\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"registerInteractionHandler\",\r\n value:function registerInteractionHandler(type,handler){}\r\n\r\n/**\r\n*Deregisters an event handler on the root element for a given event.\r\n*@param{string}type\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"deregisterInteractionHandler\",\r\n value:function deregisterInteractionHandler(type,handler){}\r\n\r\n/**\r\n*Registers an event handler on the thumb container element for a given event.\r\n*@param{string}type\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"registerThumbContainerInteractionHandler\",\r\n value:function registerThumbContainerInteractionHandler(type,handler){}\r\n\r\n/**\r\n*Deregisters an event handler on the thumb container element for a given event.\r\n*@param{string}type\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"deregisterThumbContainerInteractionHandler\",\r\n value:function deregisterThumbContainerInteractionHandler(type,handler){}\r\n\r\n/**\r\n*Registers an event handler on the body for a given event.\r\n*@param{string}type\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"registerBodyInteractionHandler\",\r\n value:function registerBodyInteractionHandler(type,handler){}\r\n\r\n/**\r\n*Deregisters an event handler on the body for a given event.\r\n*@param{string}type\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"deregisterBodyInteractionHandler\",\r\n value:function deregisterBodyInteractionHandler(type,handler){}\r\n\r\n/**\r\n*Registers an event handler for the window resize event\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"registerResizeHandler\",\r\n value:function registerResizeHandler(handler){}\r\n\r\n/**\r\n*Deregisters an event handler for the window resize event\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"deregisterResizeHandler\",\r\n value:function deregisterResizeHandler(handler){}\r\n\r\n/**\r\n*Emits a custom event MDCSlider:input from the root\r\n*/\r\n\r\n},{\r\n key:\"notifyInput\",\r\n value:function notifyInput(){}\r\n\r\n/**\r\n*Emits a custom event MDCSlider:change from the root\r\n*/\r\n\r\n},{\r\n key:\"notifyChange\",\r\n value:function notifyChange(){}\r\n\r\n/**\r\n*Sets a style property of the thumb container element to the passed value\r\n*@param{string}propertyName\r\n*@param{string}value\r\n*/\r\n\r\n},{\r\n key:\"setThumbContainerStyleProperty\",\r\n value:function setThumbContainerStyleProperty(propertyName,value){}\r\n\r\n/**\r\n*Sets a style property of the track element to the passed value\r\n*@param{string}propertyName\r\n*@param{string}value\r\n*/\r\n\r\n},{\r\n key:\"setTrackStyleProperty\",\r\n value:function setTrackStyleProperty(propertyName,value){}\r\n\r\n/**\r\n*Sets the inner text of the pin marker to the passed value\r\n*@param{number}value\r\n*/\r\n\r\n},{\r\n key:\"setMarkerValue\",\r\n value:function setMarkerValue(value){}\r\n\r\n/**\r\n*Appends the passed number of track markers to the track mark container element\r\n*@param{number}numMarkers\r\n*/\r\n\r\n},{\r\n key:\"appendTrackMarkers\",\r\n value:function appendTrackMarkers(numMarkers){}\r\n\r\n/**\r\n*Removes all track markers fromt he track mark container element\r\n*/\r\n\r\n},{\r\n key:\"removeTrackMarkers\",\r\n value:function removeTrackMarkers(){}\r\n\r\n/**\r\n*Sets a style property of the last track marker to the passed value\r\n*@param{string}propertyName\r\n*@param{string}value\r\n*/\r\n\r\n},{\r\n key:\"setLastTrackMarkersStyleProperty\",\r\n value:function setLastTrackMarkersStyleProperty(propertyName,value){}\r\n\r\n/**\r\n*Returns true if the root element is RTL,otherwise false\r\n*@return{boolean}\r\n*/\r\n\r\n},{\r\n key:\"isRTL\",\r\n value:function isRTL(){}\r\n}]);\r\n\r\n return MDCSliderAdapter;\r\n}();\r\n\r\n/*unused harmony default export*/var _unused_webpack_default_export=(MDCSliderAdapter);\r\n\r\n/***/})\r\n\r\n/******/});\r\n});\r\n//#sourceMappingURL=mdc.slider.js.map//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,\n//#sourceURL=webpack-internal:///./node_modules/@material/slider/dist/mdc.slider.js\n");/***/}),/***/"./node_modules/@material/textfield/dist/mdc.textfield.js":/*!****************************************************************!*\;!***./node_modules/@material/textfield/dist/mdc.textfield.js***!;\****************************************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){eval("/*!\r\n Material Components for the Web\r\n Copyright(c)2019 Google Inc.\r\n License:MIT\r\n*/\r\n(function webpackUniversalModuleDefinition(root,factory){\r\n\tif(true)\r\n\t\tmodule.exports=factory();\r\n\telse{}\r\n})(this,function(){\r\nreturn/******/(function(modules){//webpackBootstrap\r\n/******/\t//The module cache\r\n/******/\tvar installedModules={};\r\n/******/\r\n/******/\t//The require function\r\n/******/\tfunction __webpack_require__(moduleId){\r\n/******/\r\n/******/\t\t//Check if module is in cache\r\n/******/\t\tif(installedModules[moduleId]){\r\n/******/\t\t\treturn installedModules[moduleId].exports;\r\n/******/\t\t}\r\n/******/\t\t//Create a new module(and put it into the cache)\r\n/******/\t\tvar module=installedModules[moduleId]={\r\n/******/\t\t\ti:moduleId,\r\n/******/\t\t\tl:false,\r\n/******/\t\t\texports:{}\r\n/******/\t\t};\r\n/******/\r\n/******/\t\t//Execute the module function\r\n/******/\t\tmodules[moduleId].call(module.exports,module,module.exports,__webpack_require__);\r\n/******/\r\n/******/\t\t//Flag the module as loaded\r\n/******/\t\tmodule.l=true;\r\n/******/\r\n/******/\t\t//Return the exports of the module\r\n/******/\t\treturn module.exports;\r\n/******/\t}\r\n/******/\r\n/******/\r\n/******/\t//expose the modules object(__webpack_modules__)\r\n/******/\t__webpack_require__.m=modules;\r\n/******/\r\n/******/\t//expose the module cache\r\n/******/\t__webpack_require__.c=installedModules;\r\n/******/\r\n/******/\t//define getter function for harmony exports\r\n/******/\t__webpack_require__.d=function(exports,name,getter){\r\n/******/\t\tif(!__webpack_require__.o(exports,name)){\r\n/******/\t\t\tObject.defineProperty(exports,name,{\r\n/******/\t\t\t\tconfigurable:false,\r\n/******/\t\t\t\tenumerable:true,\r\n/******/\t\t\t\tget:getter\r\n/******/\t\t\t});\r\n/******/\t\t}\r\n/******/\t};\r\n/******/\r\n/******/\t//getDefaultExport function for compatibility with non-harmony modules\r\n/******/\t__webpack_require__.n=function(module){\r\n/******/\t\tvar getter=module&&module.__esModule?\r\n/******/\t\t\tfunction getDefault(){return module['default'];}:\r\n/******/\t\t\tfunction getModuleExports(){return module;};\r\n/******/\t\t__webpack_require__.d(getter,'a',getter);\r\n/******/\t\treturn getter;\r\n/******/\t};\r\n/******/\r\n/******/\t//Object.prototype.hasOwnProperty.call\r\n/******/\t__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};\r\n/******/\r\n/******/\t//__webpack_public_path__\r\n/******/\t__webpack_require__.p=\"\";\r\n/******/\r\n/******/\t//Load entry module and return exports\r\n/******/\treturn __webpack_require__(__webpack_require__.s=157);\r\n/******/})\r\n/************************************************************************/\r\n/******/({\r\n\r\n/***/0:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n*@template A\r\n*/\r\nvar MDCFoundation=function(){\r\n _createClass(MDCFoundation,null,[{\r\n key:\"cssClasses\",\r\n\r\n/**@return enum{cssClasses}*/\r\n get:function get(){\r\n//Classes extending MDCFoundation should implement this method to return an object which exports every\r\n//CSS class the foundation class needs as a property.e.g.{ACTIVE:'mdc-component--active'}\r\n return{};\r\n}\r\n\r\n/**@return enum{strings}*/\r\n\r\n},{\r\n key:\"strings\",\r\n get:function get(){\r\n//Classes extending MDCFoundation should implement this method to return an object which exports all\r\n//semantic strings as constants.e.g.{ARIA_ROLE:'tablist'}\r\n return{};\r\n}\r\n\r\n/**@return enum{numbers}*/\r\n\r\n},{\r\n key:\"numbers\",\r\n get:function get(){\r\n//Classes extending MDCFoundation should implement this method to return an object which exports all\r\n//of its semantic numbers as constants.e.g.{ANIMATION_DELAY_MS:350}\r\n return{};\r\n}\r\n\r\n/**@return{!Object}*/\r\n\r\n},{\r\n key:\"defaultAdapter\",\r\n get:function get(){\r\n//Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\r\n//way of viewing the necessary methods of an adapter.In the future,this could also be used for adapter\r\n//validation.\r\n return{};\r\n}\r\n\r\n/**\r\n*@param{A=}adapter\r\n*/\r\n\r\n}]);\r\n\r\n function MDCFoundation(){\r\n var adapter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};\r\n\r\n _classCallCheck(this,MDCFoundation);\r\n\r\n/**@protected{!A}*/\r\n this.adapter_=adapter;\r\n}\r\n\r\n _createClass(MDCFoundation,[{\r\n key:\"init\",\r\n value:function init(){\r\n//Subclasses should override this method to perform initialization routines(registering events,etc.)\r\n}\r\n},{\r\n key:\"destroy\",\r\n value:function destroy(){\r\n//Subclasses should override this method to perform de-initialization routines(de-registering events,etc.)\r\n}\r\n}]);\r\n\r\n return MDCFoundation;\r\n}();\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCFoundation);\r\n\r\n/***/}),\r\n\r\n/***/1:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__foundation__=__webpack_require__(0);\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n/**\r\n*@template F\r\n*/\r\n\r\nvar MDCComponent=function(){\r\n _createClass(MDCComponent,null,[{\r\n key:'attachTo',\r\n\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCComponent}\r\n*/\r\n value:function attachTo(root){\r\n//Subclasses which extend MDCBase should provide an attachTo()method that takes a root element and\r\n//returns an instantiated component with its root set to that element.Also note that in the cases of\r\n//subclasses,an explicit foundation class will not have to be passed in;it will simply be initialized\r\n//from getDefaultFoundation().\r\n return new MDCComponent(root,new __WEBPACK_IMPORTED_MODULE_0__foundation__[\"a\"/*default*/]());\r\n}\r\n\r\n/**\r\n*@param{!Element}root\r\n*@param{F=}foundation\r\n*@param{...?}args\r\n*/\r\n\r\n}]);\r\n\r\n function MDCComponent(root){\r\n var foundation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;\r\n\r\n _classCallCheck(this,MDCComponent);\r\n\r\n/**@protected{!Element}*/\r\n this.root_=root;\r\n\r\n for(var _len=arguments.length,args=Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){\r\n args[_key-2]=arguments[_key];\r\n}\r\n\r\n this.initialize.apply(this,args);\r\n//Note that we initialize foundation here and not within the constructor's default param so that\r\n//this.root_ is defined and can be used within the foundation class.\r\n/**@protected{!F}*/\r\n this.foundation_=foundation===undefined?this.getDefaultFoundation():foundation;\r\n this.foundation_.init();\r\n this.initialSyncWithDOM();\r\n}\r\n\r\n _createClass(MDCComponent,[{\r\n key:'initialize',\r\n value:function initialize()/*...args*/{}\r\n//Subclasses can override this to do any additional setup work that would be considered part of a\r\n//\"constructor\".Essentially,it is a hook into the parent constructor before the foundation is\r\n//initialized.Any additional arguments besides root and foundation will be passed in here.\r\n\r\n\r\n/**\r\n*@return{!F}foundation\r\n*/\r\n\r\n},{\r\n key:'getDefaultFoundation',\r\n value:function getDefaultFoundation(){\r\n//Subclasses must override this method to return a properly configured foundation class for the\r\n//component.\r\n throw new Error('Subclasses must override getDefaultFoundation to return a properly configured'+'foundation class');\r\n}\r\n},{\r\n key:'initialSyncWithDOM',\r\n value:function initialSyncWithDOM(){\r\n//Subclasses should override this method if they need to perform work to synchronize with a host DOM\r\n//object.An example of this would be a form control wrapper that needs to synchronize its internal state\r\n//to some property or attribute of the host DOM.Please note:this is*not*the place to perform DOM\r\n//reads/writes that would cause layout/paint,as this is called synchronously from within the constructor.\r\n}\r\n},{\r\n key:'destroy',\r\n value:function destroy(){\r\n//Subclasses may implement this method to release any resources/deregister any listeners they have\r\n//attached.An example of this might be deregistering a resize event from the window object.\r\n this.foundation_.destroy();\r\n}\r\n\r\n/**\r\n*Wrapper method to add an event listener to the component's root element.This is most useful when\r\n*listening for custom events.\r\n*@param{string}evtType\r\n*@param{!Function}handler\r\n*/\r\n\r\n},{\r\n key:'listen',\r\n value:function listen(evtType,handler){\r\n this.root_.addEventListener(evtType,handler);\r\n}\r\n\r\n/**\r\n*Wrapper method to remove an event listener to the component's root element.This is most useful when\r\n*unlistening for custom events.\r\n*@param{string}evtType\r\n*@param{!Function}handler\r\n*/\r\n\r\n},{\r\n key:'unlisten',\r\n value:function unlisten(evtType,handler){\r\n this.root_.removeEventListener(evtType,handler);\r\n}\r\n\r\n/**\r\n*Fires a cross-browser-compatible custom event from the component root of the given type,\r\n*with the given data.\r\n*@param{string}evtType\r\n*@param{!Object}evtData\r\n*@param{boolean=}shouldBubble\r\n*/\r\n\r\n},{\r\n key:'emit',\r\n value:function emit(evtType,evtData){\r\n var shouldBubble=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;\r\n\r\n var evt=void 0;\r\n if(typeof CustomEvent==='function'){\r\n evt=new CustomEvent(evtType,{\r\n detail:evtData,\r\n bubbles:shouldBubble\r\n});\r\n}else{\r\n evt=document.createEvent('CustomEvent');\r\n evt.initCustomEvent(evtType,shouldBubble,false,evtData);\r\n}\r\n\r\n this.root_.dispatchEvent(evt);\r\n}\r\n}]);\r\n\r\n return MDCComponent;\r\n}();\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCComponent);\r\n\r\n/***/}),\r\n\r\n/***/12:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/*eslint no-unused-vars:[2,{\"args\":\"none\"}]*/\r\n\r\n/**\r\n*Adapter for MDC Floating Label.\r\n*\r\n*Defines the shape of the adapter expected by the foundation.Implement this\r\n*adapter to integrate the floating label into your framework.See\r\n*https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\r\n*for more information.\r\n*\r\n*@record\r\n*/\r\nvar MDCFloatingLabelAdapter=function(){\r\n function MDCFloatingLabelAdapter(){\r\n _classCallCheck(this,MDCFloatingLabelAdapter);\r\n}\r\n\r\n _createClass(MDCFloatingLabelAdapter,[{\r\n key:\"addClass\",\r\n\r\n/**\r\n*Adds a class to the label element.\r\n*@param{string}className\r\n*/\r\n value:function addClass(className){}\r\n\r\n/**\r\n*Removes a class from the label element.\r\n*@param{string}className\r\n*/\r\n\r\n},{\r\n key:\"removeClass\",\r\n value:function removeClass(className){}\r\n\r\n/**\r\n*Returns the width of the label element.\r\n*@return{number}\r\n*/\r\n\r\n},{\r\n key:\"getWidth\",\r\n value:function getWidth(){}\r\n\r\n/**\r\n*Registers an event listener on the root element for a given event.\r\n*@param{string}evtType\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"registerInteractionHandler\",\r\n value:function registerInteractionHandler(evtType,handler){}\r\n\r\n/**\r\n*Deregisters an event listener on the root element for a given event.\r\n*@param{string}evtType\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"deregisterInteractionHandler\",\r\n value:function deregisterInteractionHandler(evtType,handler){}\r\n}]);\r\n\r\n return MDCFloatingLabelAdapter;\r\n}();\r\n\r\n/*unused harmony default export*/var _unused_webpack_default_export=(MDCFloatingLabelAdapter);\r\n\r\n/***/}),\r\n\r\n/***/157:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nObject.defineProperty(__webpack_exports__,\"__esModule\",{value:true});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCTextField\",function(){return MDCTextField;});\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_component__=__webpack_require__(1);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__=__webpack_require__(4);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__material_ripple_util__=__webpack_require__(2);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_3__constants__=__webpack_require__(82);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_4__adapter__=__webpack_require__(83);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_5__foundation__=__webpack_require__(160);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_6__material_line_ripple_index__=__webpack_require__(30);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_7__helper_text_index__=__webpack_require__(161);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_8__icon_index__=__webpack_require__(162);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_9__material_floating_label_index__=__webpack_require__(16);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_10__material_notched_outline_index__=__webpack_require__(35);\r\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCTextFieldFoundation\",function(){return __WEBPACK_IMPORTED_MODULE_5__foundation__[\"a\"];});\r\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCTextFieldHelperText\",function(){return __WEBPACK_IMPORTED_MODULE_7__helper_text_index__[\"a\"];});\r\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCTextFieldHelperTextFoundation\",function(){return __WEBPACK_IMPORTED_MODULE_7__helper_text_index__[\"b\"];});\r\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCTextFieldIcon\",function(){return __WEBPACK_IMPORTED_MODULE_8__icon_index__[\"a\"];});\r\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCTextFieldIconFoundation\",function(){return __WEBPACK_IMPORTED_MODULE_8__icon_index__[\"b\"];});\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nvar _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if(\"value\"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n/*eslint-disable no-unused-vars*/\r\n\r\n/*eslint-enable no-unused-vars*/\r\n\r\n\r\n\r\n\r\n\r\n/*eslint-disable no-unused-vars*/\r\n\r\n\r\n\r\n\r\n\r\n/*eslint-enable no-unused-vars*/\r\n\r\n/**\r\n*@extends{MDCComponent<!MDCTextFieldFoundation>}\r\n*@final\r\n*/\r\n\r\nvar MDCTextField=function(_MDCComponent){\r\n _inherits(MDCTextField,_MDCComponent);\r\n\r\n/**\r\n*@param{...?}args\r\n*/\r\n function MDCTextField(){\r\n var _ref;\r\n\r\n _classCallCheck(this,MDCTextField);\r\n\r\n for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){\r\n args[_key]=arguments[_key];\r\n}\r\n\r\n/**@private{?Element}*/\r\n var _this=_possibleConstructorReturn(this,(_ref=MDCTextField.__proto__||Object.getPrototypeOf(MDCTextField)).call.apply(_ref,[this].concat(args)));\r\n\r\n _this.input_;\r\n/**@type{?MDCRipple}*/\r\n _this.ripple;\r\n/**@private{?MDCLineRipple}*/\r\n _this.lineRipple_;\r\n/**@private{?MDCTextFieldHelperText}*/\r\n _this.helperText_;\r\n/**@private{?MDCTextFieldIcon}*/\r\n _this.leadingIcon_;\r\n/**@private{?MDCTextFieldIcon}*/\r\n _this.trailingIcon_;\r\n/**@private{?MDCFloatingLabel}*/\r\n _this.label_;\r\n/**@private{?MDCNotchedOutline}*/\r\n _this.outline_;\r\n return _this;\r\n}\r\n\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCTextField}\r\n*/\r\n\r\n\r\n _createClass(MDCTextField,[{\r\n key:'initialize',\r\n\r\n\r\n/**\r\n*@param{(function(!Element):!MDCRipple)=}rippleFactory A function which\r\n*creates a new MDCRipple.\r\n*@param{(function(!Element):!MDCLineRipple)=}lineRippleFactory A function which\r\n*creates a new MDCLineRipple.\r\n*@param{(function(!Element):!MDCTextFieldHelperText)=}helperTextFactory A function which\r\n*creates a new MDCTextFieldHelperText.\r\n*@param{(function(!Element):!MDCTextFieldIcon)=}iconFactory A function which\r\n*creates a new MDCTextFieldIcon.\r\n*@param{(function(!Element):!MDCFloatingLabel)=}labelFactory A function which\r\n*creates a new MDCFloatingLabel.\r\n*@param{(function(!Element):!MDCNotchedOutline)=}outlineFactory A function which\r\n*creates a new MDCNotchedOutline.\r\n*/\r\n value:function initialize(){\r\n var rippleFactory=arguments.length>0&&arguments[0]!==undefined?arguments[0]:function(el,foundation){\r\n return new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__[\"MDCRipple\"](el,foundation);\r\n};\r\n var lineRippleFactory=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(el){\r\n return new __WEBPACK_IMPORTED_MODULE_6__material_line_ripple_index__[\"MDCLineRipple\"](el);\r\n};\r\n var helperTextFactory=arguments.length>2&&arguments[2]!==undefined?arguments[2]:function(el){\r\n return new __WEBPACK_IMPORTED_MODULE_7__helper_text_index__[\"a\"/*MDCTextFieldHelperText*/](el);\r\n};\r\n var iconFactory=arguments.length>3&&arguments[3]!==undefined?arguments[3]:function(el){\r\n return new __WEBPACK_IMPORTED_MODULE_8__icon_index__[\"a\"/*MDCTextFieldIcon*/](el);\r\n};\r\n\r\n var _this2=this;\r\n\r\n var labelFactory=arguments.length>4&&arguments[4]!==undefined?arguments[4]:function(el){\r\n return new __WEBPACK_IMPORTED_MODULE_9__material_floating_label_index__[\"MDCFloatingLabel\"](el);\r\n};\r\n var outlineFactory=arguments.length>5&&arguments[5]!==undefined?arguments[5]:function(el){\r\n return new __WEBPACK_IMPORTED_MODULE_10__material_notched_outline_index__[\"MDCNotchedOutline\"](el);\r\n};\r\n\r\n this.input_=this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\"/*strings*/].INPUT_SELECTOR);\r\n var labelElement=this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\"/*strings*/].LABEL_SELECTOR);\r\n if(labelElement){\r\n this.label_=labelFactory(labelElement);\r\n}\r\n var lineRippleElement=this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\"/*strings*/].LINE_RIPPLE_SELECTOR);\r\n if(lineRippleElement){\r\n this.lineRipple_=lineRippleFactory(lineRippleElement);\r\n}\r\n var outlineElement=this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\"/*strings*/].OUTLINE_SELECTOR);\r\n if(outlineElement){\r\n this.outline_=outlineFactory(outlineElement);\r\n}\r\n if(this.input_.hasAttribute(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\"/*strings*/].ARIA_CONTROLS)){\r\n var helperTextElement=document.getElementById(this.input_.getAttribute(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\"/*strings*/].ARIA_CONTROLS));\r\n if(helperTextElement){\r\n this.helperText_=helperTextFactory(helperTextElement);\r\n}\r\n}\r\n var iconElements=this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\"/*strings*/].ICON_SELECTOR);\r\n if(iconElements.length>0){\r\n if(iconElements.length>1){\r\n//Has both icons.\r\n this.leadingIcon_=iconFactory(iconElements[0]);\r\n this.trailingIcon_=iconFactory(iconElements[1]);\r\n}else{\r\n if(this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_3__constants__[\"c\"/*cssClasses*/].WITH_LEADING_ICON)){\r\n this.leadingIcon_=iconFactory(iconElements[0]);\r\n}else{\r\n this.trailingIcon_=iconFactory(iconElements[0]);\r\n}\r\n}\r\n}\r\n\r\n this.ripple=null;\r\n if(!this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_3__constants__[\"c\"/*cssClasses*/].TEXTAREA)&&!this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_3__constants__[\"c\"/*cssClasses*/].OUTLINED)){\r\n var MATCHES=Object(__WEBPACK_IMPORTED_MODULE_2__material_ripple_util__[\"getMatchesProperty\"])(HTMLElement.prototype);\r\n var adapter=_extends(__WEBPACK_IMPORTED_MODULE_1__material_ripple_index__[\"MDCRipple\"].createAdapter(/**@type{!RippleCapableSurface}*/this),{\r\n isSurfaceActive:function isSurfaceActive(){\r\n return _this2.input_[MATCHES](':active');\r\n},\r\n registerInteractionHandler:function registerInteractionHandler(type,handler){\r\n return _this2.input_.addEventListener(type,handler);\r\n},\r\n deregisterInteractionHandler:function deregisterInteractionHandler(type,handler){\r\n return _this2.input_.removeEventListener(type,handler);\r\n}\r\n});\r\n var foundation=new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__[\"MDCRippleFoundation\"](adapter);\r\n this.ripple=rippleFactory(this.root_,foundation);\r\n}\r\n}\r\n},{\r\n key:'destroy',\r\n value:function destroy(){\r\n if(this.ripple){\r\n this.ripple.destroy();\r\n}\r\n if(this.lineRipple_){\r\n this.lineRipple_.destroy();\r\n}\r\n if(this.helperText_){\r\n this.helperText_.destroy();\r\n}\r\n if(this.leadingIcon_){\r\n this.leadingIcon_.destroy();\r\n}\r\n if(this.trailingIcon_){\r\n this.trailingIcon_.destroy();\r\n}\r\n if(this.label_){\r\n this.label_.destroy();\r\n}\r\n if(this.outline_){\r\n this.outline_.destroy();\r\n}\r\n _get(MDCTextField.prototype.__proto__||Object.getPrototypeOf(MDCTextField.prototype),'destroy',this).call(this);\r\n}\r\n\r\n/**\r\n*Initiliazes the Text Field's internal state based on the environment's\r\n*state.\r\n*/\r\n\r\n},{\r\n key:'initialSyncWithDom',\r\n value:function initialSyncWithDom(){\r\n this.disabled=this.input_.disabled;\r\n}\r\n\r\n/**\r\n*@return{string}The value of the input.\r\n*/\r\n\r\n},{\r\n key:'focus',\r\n\r\n\r\n/**\r\n*Focuses the input element.\r\n*/\r\n value:function focus(){\r\n this.input_.focus();\r\n}\r\n\r\n/**\r\n*Recomputes the outline SVG path for the outline element.\r\n*/\r\n\r\n},{\r\n key:'layout',\r\n value:function layout(){\r\n var openNotch=this.foundation_.shouldFloat;\r\n this.foundation_.notchOutline(openNotch);\r\n}\r\n\r\n/**\r\n*@return{!MDCTextFieldFoundation}\r\n*/\r\n\r\n},{\r\n key:'getDefaultFoundation',\r\n value:function getDefaultFoundation(){\r\n var _this3=this;\r\n\r\n return new __WEBPACK_IMPORTED_MODULE_5__foundation__[\"a\"/*default*/](\r\n/**@type{!MDCTextFieldAdapter}*/_extends({\r\n addClass:function addClass(className){\r\n return _this3.root_.classList.add(className);\r\n},\r\n removeClass:function removeClass(className){\r\n return _this3.root_.classList.remove(className);\r\n},\r\n hasClass:function hasClass(className){\r\n return _this3.root_.classList.contains(className);\r\n},\r\n registerTextFieldInteractionHandler:function registerTextFieldInteractionHandler(evtType,handler){\r\n return _this3.root_.addEventListener(evtType,handler);\r\n},\r\n deregisterTextFieldInteractionHandler:function deregisterTextFieldInteractionHandler(evtType,handler){\r\n return _this3.root_.removeEventListener(evtType,handler);\r\n},\r\n registerValidationAttributeChangeHandler:function registerValidationAttributeChangeHandler(handler){\r\n var getAttributesList=function getAttributesList(mutationsList){\r\n return mutationsList.map(function(mutation){\r\n return mutation.attributeName;\r\n});\r\n};\r\n var observer=new MutationObserver(function(mutationsList){\r\n return handler(getAttributesList(mutationsList));\r\n});\r\n var targetNode=_this3.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\"/*strings*/].INPUT_SELECTOR);\r\n var config={attributes:true};\r\n observer.observe(targetNode,config);\r\n return observer;\r\n},\r\n deregisterValidationAttributeChangeHandler:function deregisterValidationAttributeChangeHandler(observer){\r\n return observer.disconnect();\r\n},\r\n isFocused:function isFocused(){\r\n return document.activeElement===_this3.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\"/*strings*/].INPUT_SELECTOR);\r\n}\r\n},this.getInputAdapterMethods_(),this.getLabelAdapterMethods_(),this.getLineRippleAdapterMethods_(),this.getOutlineAdapterMethods_()),this.getFoundationMap_());\r\n}\r\n\r\n/**\r\n*@return{!{\r\n*shakeLabel:function(boolean):undefined,\r\n*floatLabel:function(boolean):undefined,\r\n*hasLabel:function():boolean,\r\n*getLabelWidth:function():number,\r\n*}}\r\n*/\r\n\r\n},{\r\n key:'getLabelAdapterMethods_',\r\n value:function getLabelAdapterMethods_(){\r\n var _this4=this;\r\n\r\n return{\r\n shakeLabel:function shakeLabel(shouldShake){\r\n return _this4.label_.shake(shouldShake);\r\n},\r\n floatLabel:function floatLabel(shouldFloat){\r\n return _this4.label_.float(shouldFloat);\r\n},\r\n hasLabel:function hasLabel(){\r\n return!!_this4.label_;\r\n},\r\n getLabelWidth:function getLabelWidth(){\r\n return _this4.label_?_this4.label_.getWidth():0;\r\n}\r\n};\r\n}\r\n\r\n/**\r\n*@return{!{\r\n*activateLineRipple:function():undefined,\r\n*deactivateLineRipple:function():undefined,\r\n*setLineRippleTransformOrigin:function(number):undefined,\r\n*}}\r\n*/\r\n\r\n},{\r\n key:'getLineRippleAdapterMethods_',\r\n value:function getLineRippleAdapterMethods_(){\r\n var _this5=this;\r\n\r\n return{\r\n activateLineRipple:function activateLineRipple(){\r\n if(_this5.lineRipple_){\r\n _this5.lineRipple_.activate();\r\n}\r\n},\r\n deactivateLineRipple:function deactivateLineRipple(){\r\n if(_this5.lineRipple_){\r\n _this5.lineRipple_.deactivate();\r\n}\r\n},\r\n setLineRippleTransformOrigin:function setLineRippleTransformOrigin(normalizedX){\r\n if(_this5.lineRipple_){\r\n _this5.lineRipple_.setRippleCenter(normalizedX);\r\n}\r\n}\r\n};\r\n}\r\n\r\n/**\r\n*@return{!{\r\n*notchOutline:function(number,boolean):undefined,\r\n*hasOutline:function():boolean,\r\n*}}\r\n*/\r\n\r\n},{\r\n key:'getOutlineAdapterMethods_',\r\n value:function getOutlineAdapterMethods_(){\r\n var _this6=this;\r\n\r\n return{\r\n notchOutline:function notchOutline(labelWidth){\r\n return _this6.outline_.notch(labelWidth);\r\n},\r\n closeOutline:function closeOutline(){\r\n return _this6.outline_.closeNotch();\r\n},\r\n hasOutline:function hasOutline(){\r\n return!!_this6.outline_;\r\n}\r\n};\r\n}\r\n\r\n/**\r\n*@return{!{\r\n*registerInputInteractionHandler:function(string,function()):undefined,\r\n*deregisterInputInteractionHandler:function(string,function()):undefined,\r\n*getNativeInput:function():?Element,\r\n*}}\r\n*/\r\n\r\n},{\r\n key:'getInputAdapterMethods_',\r\n value:function getInputAdapterMethods_(){\r\n var _this7=this;\r\n\r\n return{\r\n registerInputInteractionHandler:function registerInputInteractionHandler(evtType,handler){\r\n return _this7.input_.addEventListener(evtType,handler);\r\n},\r\n deregisterInputInteractionHandler:function deregisterInputInteractionHandler(evtType,handler){\r\n return _this7.input_.removeEventListener(evtType,handler);\r\n},\r\n getNativeInput:function getNativeInput(){\r\n return _this7.input_;\r\n}\r\n};\r\n}\r\n\r\n/**\r\n*Returns a map of all subcomponents to subfoundations.\r\n*@return{!FoundationMapType}\r\n*/\r\n\r\n},{\r\n key:'getFoundationMap_',\r\n value:function getFoundationMap_(){\r\n return{\r\n helperText:this.helperText_?this.helperText_.foundation:undefined,\r\n leadingIcon:this.leadingIcon_?this.leadingIcon_.foundation:undefined,\r\n trailingIcon:this.trailingIcon_?this.trailingIcon_.foundation:undefined\r\n};\r\n}\r\n},{\r\n key:'value',\r\n get:function get(){\r\n return this.foundation_.getValue();\r\n}\r\n\r\n/**\r\n*@param{string}value The value to set on the input.\r\n*/\r\n,\r\n set:function set(value){\r\n this.foundation_.setValue(value);\r\n}\r\n\r\n/**\r\n*@return{boolean}True if the Text Field is disabled.\r\n*/\r\n\r\n},{\r\n key:'disabled',\r\n get:function get(){\r\n return this.foundation_.isDisabled();\r\n}\r\n\r\n/**\r\n*@param{boolean}disabled Sets the Text Field disabled or enabled.\r\n*/\r\n,\r\n set:function set(disabled){\r\n this.foundation_.setDisabled(disabled);\r\n}\r\n\r\n/**\r\n*@return{boolean}valid True if the Text Field is valid.\r\n*/\r\n\r\n},{\r\n key:'valid',\r\n get:function get(){\r\n return this.foundation_.isValid();\r\n}\r\n\r\n/**\r\n*@param{boolean}valid Sets the Text Field valid or invalid.\r\n*/\r\n,\r\n set:function set(valid){\r\n this.foundation_.setValid(valid);\r\n}\r\n\r\n/**\r\n*@return{boolean}True if the Text Field is required.\r\n*/\r\n\r\n},{\r\n key:'required',\r\n get:function get(){\r\n return this.input_.required;\r\n}\r\n\r\n/**\r\n*@param{boolean}required Sets the Text Field to required.\r\n*/\r\n,\r\n set:function set(required){\r\n this.input_.required=required;\r\n}\r\n\r\n/**\r\n*@return{string}The input element's validation pattern.\r\n*/\r\n\r\n},{\r\n key:'pattern',\r\n get:function get(){\r\n return this.input_.pattern;\r\n}\r\n\r\n/**\r\n*@param{string}pattern Sets the input element's validation pattern.\r\n*/\r\n,\r\n set:function set(pattern){\r\n this.input_.pattern=pattern;\r\n}\r\n\r\n/**\r\n*@return{number}The input element's minLength.\r\n*/\r\n\r\n},{\r\n key:'minLength',\r\n get:function get(){\r\n return this.input_.minLength;\r\n}\r\n\r\n/**\r\n*@param{number}minLength Sets the input element's minLength.\r\n*/\r\n,\r\n set:function set(minLength){\r\n this.input_.minLength=minLength;\r\n}\r\n\r\n/**\r\n*@return{number}The input element's maxLength.\r\n*/\r\n\r\n},{\r\n key:'maxLength',\r\n get:function get(){\r\n return this.input_.maxLength;\r\n}\r\n\r\n/**\r\n*@param{number}maxLength Sets the input element's maxLength.\r\n*/\r\n,\r\n set:function set(maxLength){\r\n//Chrome throws exception if maxLength is set<0\r\n if(maxLength<0){\r\n this.input_.removeAttribute('maxLength');\r\n}else{\r\n this.input_.maxLength=maxLength;\r\n}\r\n}\r\n\r\n/**\r\n*@return{string}The input element's min.\r\n*/\r\n\r\n},{\r\n key:'min',\r\n get:function get(){\r\n return this.input_.min;\r\n}\r\n\r\n/**\r\n*@param{string}min Sets the input element's min.\r\n*/\r\n,\r\n set:function set(min){\r\n this.input_.min=min;\r\n}\r\n\r\n/**\r\n*@return{string}The input element's max.\r\n*/\r\n\r\n},{\r\n key:'max',\r\n get:function get(){\r\n return this.input_.max;\r\n}\r\n\r\n/**\r\n*@param{string}max Sets the input element's max.\r\n*/\r\n,\r\n set:function set(max){\r\n this.input_.max=max;\r\n}\r\n\r\n/**\r\n*@return{string}The input element's step.\r\n*/\r\n\r\n},{\r\n key:'step',\r\n get:function get(){\r\n return this.input_.step;\r\n}\r\n\r\n/**\r\n*@param{string}step Sets the input element's step.\r\n*/\r\n,\r\n set:function set(step){\r\n this.input_.step=step;\r\n}\r\n\r\n/**\r\n*Sets the helper text element content.\r\n*@param{string}content\r\n*/\r\n\r\n},{\r\n key:'helperTextContent',\r\n set:function set(content){\r\n this.foundation_.setHelperTextContent(content);\r\n}\r\n\r\n/**\r\n*Sets the aria label of the leading icon.\r\n*@param{string}label\r\n*/\r\n\r\n},{\r\n key:'leadingIconAriaLabel',\r\n set:function set(label){\r\n this.foundation_.setLeadingIconAriaLabel(label);\r\n}\r\n\r\n/**\r\n*Sets the text content of the leading icon.\r\n*@param{string}content\r\n*/\r\n\r\n},{\r\n key:'leadingIconContent',\r\n set:function set(content){\r\n this.foundation_.setLeadingIconContent(content);\r\n}\r\n\r\n/**\r\n*Sets the aria label of the trailing icon.\r\n*@param{string}label\r\n*/\r\n\r\n},{\r\n key:'trailingIconAriaLabel',\r\n set:function set(label){\r\n this.foundation_.setTrailingIconAriaLabel(label);\r\n}\r\n\r\n/**\r\n*Sets the text content of the trailing icon.\r\n*@param{string}content\r\n*/\r\n\r\n},{\r\n key:'trailingIconContent',\r\n set:function set(content){\r\n this.foundation_.setTrailingIconContent(content);\r\n}\r\n\r\n/**\r\n*Enables or disables the use of native validation.Use this for custom validation.\r\n*@param{boolean}useNativeValidation Set this to false to ignore native input validation.\r\n*/\r\n\r\n},{\r\n key:'useNativeValidation',\r\n set:function set(useNativeValidation){\r\n this.foundation_.setUseNativeValidation(useNativeValidation);\r\n}\r\n}],[{\r\n key:'attachTo',\r\n value:function attachTo(root){\r\n return new MDCTextField(root);\r\n}\r\n}]);\r\n\r\n return MDCTextField;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\"/*default*/]);\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/158:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"b\",function(){return strings;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"a\",function(){return cssClasses;});\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**@enum{string}*/\r\nvar strings={\r\n ARIA_HIDDEN:'aria-hidden',\r\n ROLE:'role'\r\n};\r\n\r\n/**@enum{string}*/\r\nvar cssClasses={\r\n HELPER_TEXT_PERSISTENT:'mdc-text-field-helper-text--persistent',\r\n HELPER_TEXT_VALIDATION_MSG:'mdc-text-field-helper-text--validation-msg'\r\n};\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/159:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"a\",function(){return strings;});\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**@enum{string}*/\r\nvar strings={\r\n ICON_EVENT:'MDCTextField:icon',\r\n ICON_ROLE:'button'\r\n};\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/16:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nObject.defineProperty(__webpack_exports__,\"__esModule\",{value:true});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCFloatingLabel\",function(){return MDCFloatingLabel;});\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_component__=__webpack_require__(1);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(12);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__foundation__=__webpack_require__(26);\r\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCFloatingLabelFoundation\",function(){return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"];});\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCComponent<!MDCFloatingLabelFoundation>}\r\n*@final\r\n*/\r\n\r\nvar MDCFloatingLabel=function(_MDCComponent){\r\n _inherits(MDCFloatingLabel,_MDCComponent);\r\n\r\n function MDCFloatingLabel(){\r\n _classCallCheck(this,MDCFloatingLabel);\r\n\r\n return _possibleConstructorReturn(this,(MDCFloatingLabel.__proto__||Object.getPrototypeOf(MDCFloatingLabel)).apply(this,arguments));\r\n}\r\n\r\n _createClass(MDCFloatingLabel,[{\r\n key:'shake',\r\n\r\n\r\n/**\r\n*Styles the label to produce the label shake for errors.\r\n*@param{boolean}shouldShake styles the label to shake by adding shake class\r\n*if true,otherwise will stop shaking by removing shake class.\r\n*/\r\n value:function shake(shouldShake){\r\n this.foundation_.shake(shouldShake);\r\n}\r\n\r\n/**\r\n*Styles label to float/dock.\r\n*@param{boolean}shouldFloat styles the label to float by adding float class\r\n*if true,otherwise docks the label by removing the float class.\r\n*/\r\n\r\n},{\r\n key:'float',\r\n value:function float(shouldFloat){\r\n this.foundation_.float(shouldFloat);\r\n}\r\n\r\n/**\r\n*@return{number}\r\n*/\r\n\r\n},{\r\n key:'getWidth',\r\n value:function getWidth(){\r\n return this.foundation_.getWidth();\r\n}\r\n\r\n/**\r\n*@return{!MDCFloatingLabelFoundation}\r\n*/\r\n\r\n},{\r\n key:'getDefaultFoundation',\r\n value:function getDefaultFoundation(){\r\n var _this2=this;\r\n\r\n return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"/*default*/]({\r\n addClass:function addClass(className){\r\n return _this2.root_.classList.add(className);\r\n},\r\n removeClass:function removeClass(className){\r\n return _this2.root_.classList.remove(className);\r\n},\r\n getWidth:function getWidth(){\r\n return _this2.root_.scrollWidth;\r\n},\r\n registerInteractionHandler:function registerInteractionHandler(evtType,handler){\r\n return _this2.root_.addEventListener(evtType,handler);\r\n},\r\n deregisterInteractionHandler:function deregisterInteractionHandler(evtType,handler){\r\n return _this2.root_.removeEventListener(evtType,handler);\r\n}\r\n});\r\n}\r\n}],[{\r\n key:'attachTo',\r\n\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCFloatingLabel}\r\n*/\r\n value:function attachTo(root){\r\n return new MDCFloatingLabel(root);\r\n}\r\n}]);\r\n\r\n return MDCFloatingLabel;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\"/*default*/]);\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/160:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__=__webpack_require__(0);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__helper_text_foundation__=__webpack_require__(61);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__icon_foundation__=__webpack_require__(62);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_3__adapter__=__webpack_require__(83);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_4__constants__=__webpack_require__(82);\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n/*eslint-disable no-unused-vars*/\r\n\r\n\r\n/*eslint-enable no-unused-vars*/\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCFoundation<!MDCTextFieldAdapter>}\r\n*@final\r\n*/\r\n\r\nvar MDCTextFieldFoundation=function(_MDCFoundation){\r\n _inherits(MDCTextFieldFoundation,_MDCFoundation);\r\n\r\n _createClass(MDCTextFieldFoundation,[{\r\n key:'shouldShake',\r\n\r\n\r\n/**@return{boolean}*/\r\n get:function get(){\r\n return!this.isValid()&&!this.isFocused_&&!!this.getValue();\r\n}\r\n\r\n/**\r\n*@return{boolean}\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'shouldAlwaysFloat_',\r\n get:function get(){\r\n var type=this.getNativeInput_().type;\r\n return __WEBPACK_IMPORTED_MODULE_4__constants__[\"a\"/*ALWAYS_FLOAT_TYPES*/].indexOf(type)>=0;\r\n}\r\n\r\n/**@return{boolean}*/\r\n\r\n},{\r\n key:'shouldFloat',\r\n get:function get(){\r\n return this.shouldAlwaysFloat_||this.isFocused_||!!this.getValue()||this.isBadInput_();\r\n}\r\n\r\n/**\r\n*{@see MDCTextFieldAdapter}for typing information on parameters and return\r\n*types.\r\n*@return{!MDCTextFieldAdapter}\r\n*/\r\n\r\n}],[{\r\n key:'cssClasses',\r\n\r\n/**@return enum{string}*/\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_4__constants__[\"c\"/*cssClasses*/];\r\n}\r\n\r\n/**@return enum{string}*/\r\n\r\n},{\r\n key:'strings',\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_4__constants__[\"e\"/*strings*/];\r\n}\r\n\r\n/**@return enum{string}*/\r\n\r\n},{\r\n key:'numbers',\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_4__constants__[\"d\"/*numbers*/];\r\n}\r\n},{\r\n key:'defaultAdapter',\r\n get:function get(){\r\n return(/**@type{!MDCTextFieldAdapter}*/{\r\n addClass:function addClass(){},\r\n removeClass:function removeClass(){},\r\n hasClass:function hasClass(){},\r\n registerTextFieldInteractionHandler:function registerTextFieldInteractionHandler(){},\r\n deregisterTextFieldInteractionHandler:function deregisterTextFieldInteractionHandler(){},\r\n registerInputInteractionHandler:function registerInputInteractionHandler(){},\r\n deregisterInputInteractionHandler:function deregisterInputInteractionHandler(){},\r\n registerValidationAttributeChangeHandler:function registerValidationAttributeChangeHandler(){},\r\n deregisterValidationAttributeChangeHandler:function deregisterValidationAttributeChangeHandler(){},\r\n getNativeInput:function getNativeInput(){},\r\n isFocused:function isFocused(){},\r\n activateLineRipple:function activateLineRipple(){},\r\n deactivateLineRipple:function deactivateLineRipple(){},\r\n setLineRippleTransformOrigin:function setLineRippleTransformOrigin(){},\r\n shakeLabel:function shakeLabel(){},\r\n floatLabel:function floatLabel(){},\r\n hasLabel:function hasLabel(){},\r\n getLabelWidth:function getLabelWidth(){},\r\n hasOutline:function hasOutline(){},\r\n notchOutline:function notchOutline(){},\r\n closeOutline:function closeOutline(){}\r\n}\r\n);\r\n}\r\n\r\n/**\r\n*@param{!MDCTextFieldAdapter}adapter\r\n*@param{!FoundationMapType=}foundationMap Map from subcomponent names to their subfoundations.\r\n*/\r\n\r\n}]);\r\n\r\n function MDCTextFieldFoundation(adapter){\r\n var foundationMap=arguments.length>1&&arguments[1]!==undefined?arguments[1]:/**@type{!FoundationMapType}*/{};\r\n\r\n _classCallCheck(this,MDCTextFieldFoundation);\r\n\r\n/**@type{!MDCTextFieldHelperTextFoundation|undefined}*/\r\n var _this=_possibleConstructorReturn(this,(MDCTextFieldFoundation.__proto__||Object.getPrototypeOf(MDCTextFieldFoundation)).call(this,_extends(MDCTextFieldFoundation.defaultAdapter,adapter)));\r\n\r\n _this.helperText_=foundationMap.helperText;\r\n/**@type{!MDCTextFieldIconFoundation|undefined}*/\r\n _this.leadingIcon_=foundationMap.leadingIcon;\r\n/**@type{!MDCTextFieldIconFoundation|undefined}*/\r\n _this.trailingIcon_=foundationMap.trailingIcon;\r\n\r\n/**@private{boolean}*/\r\n _this.isFocused_=false;\r\n/**@private{boolean}*/\r\n _this.receivedUserInput_=false;\r\n/**@private{boolean}*/\r\n _this.useCustomValidityChecking_=false;\r\n/**@private{boolean}*/\r\n _this.isValid_=true;\r\n\r\n/**@private{boolean}*/\r\n _this.useNativeValidation_=true;\r\n\r\n/**@private{function():undefined}*/\r\n _this.inputFocusHandler_=function(){\r\n return _this.activateFocus();\r\n};\r\n/**@private{function():undefined}*/\r\n _this.inputBlurHandler_=function(){\r\n return _this.deactivateFocus();\r\n};\r\n/**@private{function():undefined}*/\r\n _this.inputInputHandler_=function(){\r\n return _this.autoCompleteFocus();\r\n};\r\n/**@private{function(!Event):undefined}*/\r\n _this.setPointerXOffset_=function(evt){\r\n return _this.setTransformOrigin(evt);\r\n};\r\n/**@private{function(!Event):undefined}*/\r\n _this.textFieldInteractionHandler_=function(){\r\n return _this.handleTextFieldInteraction();\r\n};\r\n/**@private{function(!Array):undefined}*/\r\n _this.validationAttributeChangeHandler_=function(attributesList){\r\n return _this.handleValidationAttributeChange(attributesList);\r\n};\r\n\r\n/**@private{!MutationObserver}*/\r\n _this.validationObserver_;\r\n return _this;\r\n}\r\n\r\n _createClass(MDCTextFieldFoundation,[{\r\n key:'init',\r\n value:function init(){\r\n var _this2=this;\r\n\r\n if(this.adapter_.isFocused()){\r\n this.inputFocusHandler_();\r\n}else if(this.adapter_.hasLabel()&&this.shouldFloat){\r\n this.notchOutline(true);\r\n this.adapter_.floatLabel(true);\r\n}\r\n\r\n this.adapter_.registerInputInteractionHandler('focus',this.inputFocusHandler_);\r\n this.adapter_.registerInputInteractionHandler('blur',this.inputBlurHandler_);\r\n this.adapter_.registerInputInteractionHandler('input',this.inputInputHandler_);\r\n['mousedown','touchstart'].forEach(function(evtType){\r\n _this2.adapter_.registerInputInteractionHandler(evtType,_this2.setPointerXOffset_);\r\n});\r\n['click','keydown'].forEach(function(evtType){\r\n _this2.adapter_.registerTextFieldInteractionHandler(evtType,_this2.textFieldInteractionHandler_);\r\n});\r\n this.validationObserver_=this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);\r\n}\r\n},{\r\n key:'destroy',\r\n value:function destroy(){\r\n var _this3=this;\r\n\r\n this.adapter_.deregisterInputInteractionHandler('focus',this.inputFocusHandler_);\r\n this.adapter_.deregisterInputInteractionHandler('blur',this.inputBlurHandler_);\r\n this.adapter_.deregisterInputInteractionHandler('input',this.inputInputHandler_);\r\n['mousedown','touchstart'].forEach(function(evtType){\r\n _this3.adapter_.deregisterInputInteractionHandler(evtType,_this3.setPointerXOffset_);\r\n});\r\n['click','keydown'].forEach(function(evtType){\r\n _this3.adapter_.deregisterTextFieldInteractionHandler(evtType,_this3.textFieldInteractionHandler_);\r\n});\r\n this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);\r\n}\r\n\r\n/**\r\n*Handles user interactions with the Text Field.\r\n*/\r\n\r\n},{\r\n key:'handleTextFieldInteraction',\r\n value:function handleTextFieldInteraction(){\r\n if(this.adapter_.getNativeInput().disabled){\r\n return;\r\n}\r\n this.receivedUserInput_=true;\r\n}\r\n\r\n/**\r\n*Handles validation attribute changes\r\n*@param{!Array<string>}attributesList\r\n*/\r\n\r\n},{\r\n key:'handleValidationAttributeChange',\r\n value:function handleValidationAttributeChange(attributesList){\r\n var _this4=this;\r\n\r\n attributesList.some(function(attributeName){\r\n if(__WEBPACK_IMPORTED_MODULE_4__constants__[\"b\"/*VALIDATION_ATTR_WHITELIST*/].indexOf(attributeName)>-1){\r\n _this4.styleValidity_(true);\r\n return true;\r\n}\r\n});\r\n}\r\n\r\n/**\r\n*Opens/closes the notched outline.\r\n*@param{boolean}openNotch\r\n*/\r\n\r\n},{\r\n key:'notchOutline',\r\n value:function notchOutline(openNotch){\r\n if(!this.adapter_.hasOutline()){\r\n return;\r\n}\r\n\r\n if(openNotch){\r\n var isDense=this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_4__constants__[\"c\"/*cssClasses*/].DENSE);\r\n var labelScale=isDense?__WEBPACK_IMPORTED_MODULE_4__constants__[\"d\"/*numbers*/].DENSE_LABEL_SCALE:__WEBPACK_IMPORTED_MODULE_4__constants__[\"d\"/*numbers*/].LABEL_SCALE;\r\n var labelWidth=this.adapter_.getLabelWidth()*labelScale;\r\n this.adapter_.notchOutline(labelWidth);\r\n}else{\r\n this.adapter_.closeOutline();\r\n}\r\n}\r\n\r\n/**\r\n*Activates the text field focus state.\r\n*/\r\n\r\n},{\r\n key:'activateFocus',\r\n value:function activateFocus(){\r\n this.isFocused_=true;\r\n this.styleFocused_(this.isFocused_);\r\n this.adapter_.activateLineRipple();\r\n if(this.adapter_.hasLabel()){\r\n this.notchOutline(this.shouldFloat);\r\n this.adapter_.floatLabel(this.shouldFloat);\r\n this.adapter_.shakeLabel(this.shouldShake);\r\n}\r\n if(this.helperText_){\r\n this.helperText_.showToScreenReader();\r\n}\r\n}\r\n\r\n/**\r\n*Sets the line ripple's transform origin,so that the line ripple activate\r\n*animation will animate out from the user's click location.\r\n*@param{!Event}evt\r\n*/\r\n\r\n},{\r\n key:'setTransformOrigin',\r\n value:function setTransformOrigin(evt){\r\n var targetEvent=void 0;\r\n if(evt.touches){\r\n targetEvent=evt.touches[0];\r\n}else{\r\n targetEvent=evt;\r\n}\r\n var targetClientRect=targetEvent.target.getBoundingClientRect();\r\n var normalizedX=targetEvent.clientX-targetClientRect.left;\r\n this.adapter_.setLineRippleTransformOrigin(normalizedX);\r\n}\r\n\r\n/**\r\n*Activates the Text Field's focus state in cases when the input value\r\n*changes without user input(e.g.programatically).\r\n*/\r\n\r\n},{\r\n key:'autoCompleteFocus',\r\n value:function autoCompleteFocus(){\r\n if(!this.receivedUserInput_){\r\n this.activateFocus();\r\n}\r\n}\r\n\r\n/**\r\n*Deactivates the Text Field's focus state.\r\n*/\r\n\r\n},{\r\n key:'deactivateFocus',\r\n value:function deactivateFocus(){\r\n this.isFocused_=false;\r\n this.adapter_.deactivateLineRipple();\r\n var isValid=this.isValid();\r\n this.styleValidity_(isValid);\r\n this.styleFocused_(this.isFocused_);\r\n if(this.adapter_.hasLabel()){\r\n this.notchOutline(this.shouldFloat);\r\n this.adapter_.floatLabel(this.shouldFloat);\r\n this.adapter_.shakeLabel(this.shouldShake);\r\n}\r\n if(!this.shouldFloat){\r\n this.receivedUserInput_=false;\r\n}\r\n}\r\n\r\n/**\r\n*@return{string}The value of the input Element.\r\n*/\r\n\r\n},{\r\n key:'getValue',\r\n value:function getValue(){\r\n return this.getNativeInput_().value;\r\n}\r\n\r\n/**\r\n*@param{string}value The value to set on the input Element.\r\n*/\r\n\r\n},{\r\n key:'setValue',\r\n value:function setValue(value){\r\n//Prevent Safari from moving the caret to the end of the input when the value has not changed.\r\n if(this.getValue()!==value){\r\n this.getNativeInput_().value=value;\r\n}\r\n var isValid=this.isValid();\r\n this.styleValidity_(isValid);\r\n if(this.adapter_.hasLabel()){\r\n this.notchOutline(this.shouldFloat);\r\n this.adapter_.floatLabel(this.shouldFloat);\r\n this.adapter_.shakeLabel(this.shouldShake);\r\n}\r\n}\r\n\r\n/**\r\n*@return{boolean}If a custom validity is set,returns that value.\r\n*Otherwise,returns the result of native validity checks.\r\n*/\r\n\r\n},{\r\n key:'isValid',\r\n value:function isValid(){\r\n return this.useNativeValidation_?this.isNativeInputValid_():this.isValid_;\r\n}\r\n\r\n/**\r\n*@param{boolean}isValid Sets the validity state of the Text Field.\r\n*/\r\n\r\n},{\r\n key:'setValid',\r\n value:function setValid(isValid){\r\n this.isValid_=isValid;\r\n this.styleValidity_(isValid);\r\n\r\n var shouldShake=!isValid&&!this.isFocused_;\r\n if(this.adapter_.hasLabel()){\r\n this.adapter_.shakeLabel(shouldShake);\r\n}\r\n}\r\n\r\n/**\r\n*Enables or disables the use of native validation.Use this for custom validation.\r\n*@param{boolean}useNativeValidation Set this to false to ignore native input validation.\r\n*/\r\n\r\n},{\r\n key:'setUseNativeValidation',\r\n value:function setUseNativeValidation(useNativeValidation){\r\n this.useNativeValidation_=useNativeValidation;\r\n}\r\n\r\n/**\r\n*@return{boolean}True if the Text Field is disabled.\r\n*/\r\n\r\n},{\r\n key:'isDisabled',\r\n value:function isDisabled(){\r\n return this.getNativeInput_().disabled;\r\n}\r\n\r\n/**\r\n*@param{boolean}disabled Sets the text-field disabled or enabled.\r\n*/\r\n\r\n},{\r\n key:'setDisabled',\r\n value:function setDisabled(disabled){\r\n this.getNativeInput_().disabled=disabled;\r\n this.styleDisabled_(disabled);\r\n}\r\n\r\n/**\r\n*@param{string}content Sets the content of the helper text.\r\n*/\r\n\r\n},{\r\n key:'setHelperTextContent',\r\n value:function setHelperTextContent(content){\r\n if(this.helperText_){\r\n this.helperText_.setContent(content);\r\n}\r\n}\r\n\r\n/**\r\n*Sets the aria label of the leading icon.\r\n*@param{string}label\r\n*/\r\n\r\n},{\r\n key:'setLeadingIconAriaLabel',\r\n value:function setLeadingIconAriaLabel(label){\r\n if(this.leadingIcon_){\r\n this.leadingIcon_.setAriaLabel(label);\r\n}\r\n}\r\n\r\n/**\r\n*Sets the text content of the leading icon.\r\n*@param{string}content\r\n*/\r\n\r\n},{\r\n key:'setLeadingIconContent',\r\n value:function setLeadingIconContent(content){\r\n if(this.leadingIcon_){\r\n this.leadingIcon_.setContent(content);\r\n}\r\n}\r\n\r\n/**\r\n*Sets the aria label of the trailing icon.\r\n*@param{string}label\r\n*/\r\n\r\n},{\r\n key:'setTrailingIconAriaLabel',\r\n value:function setTrailingIconAriaLabel(label){\r\n if(this.trailingIcon_){\r\n this.trailingIcon_.setAriaLabel(label);\r\n}\r\n}\r\n\r\n/**\r\n*Sets the text content of the trailing icon.\r\n*@param{string}content\r\n*/\r\n\r\n},{\r\n key:'setTrailingIconContent',\r\n value:function setTrailingIconContent(content){\r\n if(this.trailingIcon_){\r\n this.trailingIcon_.setContent(content);\r\n}\r\n}\r\n\r\n/**\r\n*@return{boolean}True if the Text Field input fails in converting the\r\n*user-supplied value.\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'isBadInput_',\r\n value:function isBadInput_(){\r\n return this.getNativeInput_().validity.badInput;\r\n}\r\n\r\n/**\r\n*@return{boolean}The result of native validity checking\r\n*(ValidityState.valid).\r\n*/\r\n\r\n},{\r\n key:'isNativeInputValid_',\r\n value:function isNativeInputValid_(){\r\n return this.getNativeInput_().validity.valid;\r\n}\r\n\r\n/**\r\n*Styles the component based on the validity state.\r\n*@param{boolean}isValid\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'styleValidity_',\r\n value:function styleValidity_(isValid){\r\n var INVALID=MDCTextFieldFoundation.cssClasses.INVALID;\r\n\r\n if(isValid){\r\n this.adapter_.removeClass(INVALID);\r\n}else{\r\n this.adapter_.addClass(INVALID);\r\n}\r\n if(this.helperText_){\r\n this.helperText_.setValidity(isValid);\r\n}\r\n}\r\n\r\n/**\r\n*Styles the component based on the focused state.\r\n*@param{boolean}isFocused\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'styleFocused_',\r\n value:function styleFocused_(isFocused){\r\n var FOCUSED=MDCTextFieldFoundation.cssClasses.FOCUSED;\r\n\r\n if(isFocused){\r\n this.adapter_.addClass(FOCUSED);\r\n}else{\r\n this.adapter_.removeClass(FOCUSED);\r\n}\r\n}\r\n\r\n/**\r\n*Styles the component based on the disabled state.\r\n*@param{boolean}isDisabled\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'styleDisabled_',\r\n value:function styleDisabled_(isDisabled){\r\n var _MDCTextFieldFoundati=MDCTextFieldFoundation.cssClasses,\r\n DISABLED=_MDCTextFieldFoundati.DISABLED,\r\n INVALID=_MDCTextFieldFoundati.INVALID;\r\n\r\n if(isDisabled){\r\n this.adapter_.addClass(DISABLED);\r\n this.adapter_.removeClass(INVALID);\r\n}else{\r\n this.adapter_.removeClass(DISABLED);\r\n}\r\n\r\n if(this.leadingIcon_){\r\n this.leadingIcon_.setDisabled(isDisabled);\r\n}\r\n\r\n if(this.trailingIcon_){\r\n this.trailingIcon_.setDisabled(isDisabled);\r\n}\r\n}\r\n\r\n/**\r\n*@return{!Element|!NativeInputType}The native text input from the\r\n*host environment,or a dummy if none exists.\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'getNativeInput_',\r\n value:function getNativeInput_(){\r\n return this.adapter_.getNativeInput()||\r\n/**@type{!NativeInputType}*/{\r\n value:'',\r\n disabled:false,\r\n validity:{\r\n badInput:false,\r\n valid:true\r\n}\r\n};\r\n}\r\n}]);\r\n\r\n return MDCTextFieldFoundation;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\"/*default*/]);\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCTextFieldFoundation);\r\n\r\n/***/}),\r\n\r\n/***/161:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"a\",function(){return MDCTextFieldHelperText;});\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_component__=__webpack_require__(1);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(84);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__foundation__=__webpack_require__(61);\r\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"b\",function(){return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"];});\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCComponent<!MDCTextFieldHelperTextFoundation>}\r\n*@final\r\n*/\r\n\r\nvar MDCTextFieldHelperText=function(_MDCComponent){\r\n _inherits(MDCTextFieldHelperText,_MDCComponent);\r\n\r\n function MDCTextFieldHelperText(){\r\n _classCallCheck(this,MDCTextFieldHelperText);\r\n\r\n return _possibleConstructorReturn(this,(MDCTextFieldHelperText.__proto__||Object.getPrototypeOf(MDCTextFieldHelperText)).apply(this,arguments));\r\n}\r\n\r\n _createClass(MDCTextFieldHelperText,[{\r\n key:'getDefaultFoundation',\r\n\r\n\r\n/**\r\n*@return{!MDCTextFieldHelperTextFoundation}\r\n*/\r\n value:function getDefaultFoundation(){\r\n var _this2=this;\r\n\r\n return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"/*default*/](/**@type{!MDCTextFieldHelperTextAdapter}*/_extends({\r\n addClass:function addClass(className){\r\n return _this2.root_.classList.add(className);\r\n},\r\n removeClass:function removeClass(className){\r\n return _this2.root_.classList.remove(className);\r\n},\r\n hasClass:function hasClass(className){\r\n return _this2.root_.classList.contains(className);\r\n},\r\n setAttr:function setAttr(attr,value){\r\n return _this2.root_.setAttribute(attr,value);\r\n},\r\n removeAttr:function removeAttr(attr){\r\n return _this2.root_.removeAttribute(attr);\r\n},\r\n setContent:function setContent(content){\r\n _this2.root_.textContent=content;\r\n}\r\n}));\r\n}\r\n},{\r\n key:'foundation',\r\n\r\n\r\n/**\r\n*@return{!MDCTextFieldHelperTextFoundation}\r\n*/\r\n get:function get(){\r\n return this.foundation_;\r\n}\r\n}],[{\r\n key:'attachTo',\r\n\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCTextFieldHelperText}\r\n*/\r\n value:function attachTo(root){\r\n return new MDCTextFieldHelperText(root);\r\n}\r\n}]);\r\n\r\n return MDCTextFieldHelperText;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\"/*default*/]);\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/162:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"a\",function(){return MDCTextFieldIcon;});\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_component__=__webpack_require__(1);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(85);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__foundation__=__webpack_require__(62);\r\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"b\",function(){return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"];});\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCComponent<!MDCTextFieldIconFoundation>}\r\n*@final\r\n*/\r\n\r\nvar MDCTextFieldIcon=function(_MDCComponent){\r\n _inherits(MDCTextFieldIcon,_MDCComponent);\r\n\r\n function MDCTextFieldIcon(){\r\n _classCallCheck(this,MDCTextFieldIcon);\r\n\r\n return _possibleConstructorReturn(this,(MDCTextFieldIcon.__proto__||Object.getPrototypeOf(MDCTextFieldIcon)).apply(this,arguments));\r\n}\r\n\r\n _createClass(MDCTextFieldIcon,[{\r\n key:'getDefaultFoundation',\r\n\r\n\r\n/**\r\n*@return{!MDCTextFieldIconFoundation}\r\n*/\r\n value:function getDefaultFoundation(){\r\n var _this2=this;\r\n\r\n return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"/*default*/](/**@type{!MDCTextFieldIconAdapter}*/_extends({\r\n getAttr:function getAttr(attr){\r\n return _this2.root_.getAttribute(attr);\r\n},\r\n setAttr:function setAttr(attr,value){\r\n return _this2.root_.setAttribute(attr,value);\r\n},\r\n removeAttr:function removeAttr(attr){\r\n return _this2.root_.removeAttribute(attr);\r\n},\r\n setContent:function setContent(content){\r\n _this2.root_.textContent=content;\r\n},\r\n registerInteractionHandler:function registerInteractionHandler(evtType,handler){\r\n return _this2.root_.addEventListener(evtType,handler);\r\n},\r\n deregisterInteractionHandler:function deregisterInteractionHandler(evtType,handler){\r\n return _this2.root_.removeEventListener(evtType,handler);\r\n},\r\n notifyIconAction:function notifyIconAction(){\r\n return _this2.emit(__WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"/*default*/].strings.ICON_EVENT,{}/*evtData*/,true/*shouldBubble*/);\r\n}\r\n}));\r\n}\r\n},{\r\n key:'foundation',\r\n\r\n\r\n/**\r\n*@return{!MDCTextFieldIconFoundation}\r\n*/\r\n get:function get(){\r\n return this.foundation_;\r\n}\r\n}],[{\r\n key:'attachTo',\r\n\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCTextFieldIcon}\r\n*/\r\n value:function attachTo(root){\r\n return new MDCTextFieldIcon(root);\r\n}\r\n}]);\r\n\r\n return MDCTextFieldIcon;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\"/*default*/]);\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/2:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nObject.defineProperty(__webpack_exports__,\"__esModule\",{value:true});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"supportsCssVariables\",function(){return supportsCssVariables;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"applyPassive\",function(){return applyPassive;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"getMatchesProperty\",function(){return getMatchesProperty;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"getNormalizedEventCoords\",function(){return getNormalizedEventCoords;});\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n*Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\r\n*@private{boolean|undefined}\r\n*/\r\nvar supportsCssVariables_=void 0;\r\n\r\n/**\r\n*Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\r\n*@private{boolean|undefined}\r\n*/\r\nvar supportsPassive_=void 0;\r\n\r\n/**\r\n*@param{!Window}windowObj\r\n*@return{boolean}\r\n*/\r\nfunction detectEdgePseudoVarBug(windowObj){\r\n//Detect versions of Edge with buggy var()support\r\n//See:https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\r\n var document=windowObj.document;\r\n var node=document.createElement('div');\r\n node.className='mdc-ripple-surface--test-edge-var-bug';\r\n document.body.appendChild(node);\r\n\r\n//The bug exists if::before style ends up propagating to the parent element.\r\n//Additionally,getComputedStyle returns null in iframes with display:\"none\"in Firefox,\r\n//but Firefox is known to support CSS custom properties correctly.\r\n//See:https://bugzilla.mozilla.org/show_bug.cgi?id=548397\r\n var computedStyle=windowObj.getComputedStyle(node);\r\n var hasPseudoVarBug=computedStyle!==null&&computedStyle.borderTopStyle==='solid';\r\n node.remove();\r\n return hasPseudoVarBug;\r\n}\r\n\r\n/**\r\n*@param{!Window}windowObj\r\n*@param{boolean=}forceRefresh\r\n*@return{boolean|undefined}\r\n*/\r\n\r\nfunction supportsCssVariables(windowObj){\r\n var forceRefresh=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;\r\n\r\n var supportsCssVariables=supportsCssVariables_;\r\n if(typeof supportsCssVariables_==='boolean'&&!forceRefresh){\r\n return supportsCssVariables;\r\n}\r\n\r\n var supportsFunctionPresent=windowObj.CSS&&typeof windowObj.CSS.supports==='function';\r\n if(!supportsFunctionPresent){\r\n return;\r\n}\r\n\r\n var explicitlySupportsCssVars=windowObj.CSS.supports('--css-vars','yes');\r\n//See:https://bugs.webkit.org/show_bug.cgi?id=154669\r\n//See:README section on Safari\r\n var weAreFeatureDetectingSafari10plus=windowObj.CSS.supports('(--css-vars:yes)')&&windowObj.CSS.supports('color','#00000000');\r\n\r\n if(explicitlySupportsCssVars||weAreFeatureDetectingSafari10plus){\r\n supportsCssVariables=!detectEdgePseudoVarBug(windowObj);\r\n}else{\r\n supportsCssVariables=false;\r\n}\r\n\r\n if(!forceRefresh){\r\n supportsCssVariables_=supportsCssVariables;\r\n}\r\n return supportsCssVariables;\r\n}\r\n\r\n//\r\n/**\r\n*Determine whether the current browser supports passive event listeners,and if so,use them.\r\n*@param{!Window=}globalObj\r\n*@param{boolean=}forceRefresh\r\n*@return{boolean|!EventListenerOptions}\r\n*/\r\nfunction applyPassive(){\r\n var globalObj=arguments.length>0&&arguments[0]!==undefined?arguments[0]:window;\r\n var forceRefresh=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;\r\n\r\n if(supportsPassive_===undefined||forceRefresh){\r\n var isSupported=false;\r\n try{\r\n globalObj.document.addEventListener('test',null,{get passive(){\r\n isSupported=true;\r\n return isSupported;\r\n}});\r\n}catch(e){}\r\n\r\n supportsPassive_=isSupported;\r\n}\r\n\r\n return supportsPassive_?/**@type{!EventListenerOptions}*/{passive:true}:false;\r\n}\r\n\r\n/**\r\n*@param{!Object}HTMLElementPrototype\r\n*@return{string}\r\n*/\r\nfunction getMatchesProperty(HTMLElementPrototype){\r\n/**\r\n*Order is important because we return the first existing method we find.\r\n*Do not change the order of the items in the below array.\r\n*/\r\n var matchesMethods=['matches','webkitMatchesSelector','msMatchesSelector'];\r\n var method='matches';\r\n for(var i=0;i<matchesMethods.length;i++){\r\n var matchesMethod=matchesMethods[i];\r\n if(matchesMethod in HTMLElementPrototype){\r\n method=matchesMethod;\r\n break;\r\n}\r\n}\r\n\r\n return method;\r\n}\r\n\r\n/**\r\n*@param{!Event}ev\r\n*@param{{x:number,y:number}}pageOffset\r\n*@param{!ClientRect}clientRect\r\n*@return{{x:number,y:number}}\r\n*/\r\nfunction getNormalizedEventCoords(ev,pageOffset,clientRect){\r\n var x=pageOffset.x,\r\n y=pageOffset.y;\r\n\r\n var documentX=x+clientRect.left;\r\n var documentY=y+clientRect.top;\r\n\r\n var normalizedX=void 0;\r\n var normalizedY=void 0;\r\n//Determine touch point relative to the ripple container.\r\n if(ev.type==='touchstart'){\r\n ev=/**@type{!TouchEvent}*/ev;\r\n normalizedX=ev.changedTouches[0].pageX-documentX;\r\n normalizedY=ev.changedTouches[0].pageY-documentY;\r\n}else{\r\n ev=/**@type{!MouseEvent}*/ev;\r\n normalizedX=ev.pageX-documentX;\r\n normalizedY=ev.pageY-documentY;\r\n}\r\n\r\n return{x:normalizedX,y:normalizedY};\r\n}\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/20:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2018 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/*eslint no-unused-vars:[2,{\"args\":\"none\"}]*/\r\n\r\n/**\r\n*Adapter for MDC TextField Line Ripple.\r\n*\r\n*Defines the shape of the adapter expected by the foundation.Implement this\r\n*adapter to integrate the line ripple into your framework.See\r\n*https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\r\n*for more information.\r\n*\r\n*@record\r\n*/\r\nvar MDCLineRippleAdapter=function(){\r\n function MDCLineRippleAdapter(){\r\n _classCallCheck(this,MDCLineRippleAdapter);\r\n}\r\n\r\n _createClass(MDCLineRippleAdapter,[{\r\n key:\"addClass\",\r\n\r\n/**\r\n*Adds a class to the line ripple element.\r\n*@param{string}className\r\n*/\r\n value:function addClass(className){}\r\n\r\n/**\r\n*Removes a class from the line ripple element.\r\n*@param{string}className\r\n*/\r\n\r\n},{\r\n key:\"removeClass\",\r\n value:function removeClass(className){}\r\n\r\n/**\r\n*@param{string}className\r\n*@return{boolean}\r\n*/\r\n\r\n},{\r\n key:\"hasClass\",\r\n value:function hasClass(className){}\r\n\r\n/**\r\n*Sets the style property with propertyName to value on the root element.\r\n*@param{string}propertyName\r\n*@param{string}value\r\n*/\r\n\r\n},{\r\n key:\"setStyle\",\r\n value:function setStyle(propertyName,value){}\r\n\r\n/**\r\n*Registers an event listener on the line ripple element for a given event.\r\n*@param{string}evtType\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"registerEventHandler\",\r\n value:function registerEventHandler(evtType,handler){}\r\n\r\n/**\r\n*Deregisters an event listener on the line ripple element for a given event.\r\n*@param{string}evtType\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"deregisterEventHandler\",\r\n value:function deregisterEventHandler(evtType,handler){}\r\n}]);\r\n\r\n return MDCLineRippleAdapter;\r\n}();\r\n\r\n/*unused harmony default export*/var _unused_webpack_default_export=(MDCLineRippleAdapter);\r\n\r\n/***/}),\r\n\r\n/***/22:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/*eslint no-unused-vars:[2,{\"args\":\"none\"}]*/\r\n\r\n/**\r\n*Adapter for MDC Notched Outline.\r\n*\r\n*Defines the shape of the adapter expected by the foundation.Implement this\r\n*adapter to integrate the Notched Outline into your framework.See\r\n*https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\r\n*for more information.\r\n*\r\n*@record\r\n*/\r\nvar MDCNotchedOutlineAdapter=function(){\r\n function MDCNotchedOutlineAdapter(){\r\n _classCallCheck(this,MDCNotchedOutlineAdapter);\r\n}\r\n\r\n _createClass(MDCNotchedOutlineAdapter,[{\r\n key:\"addClass\",\r\n\r\n/**\r\n*Adds a class to the root element.\r\n*@param{string}className\r\n*/\r\n value:function addClass(className){}\r\n\r\n/**\r\n*Removes a class from the root element.\r\n*@param{string}className\r\n*/\r\n\r\n},{\r\n key:\"removeClass\",\r\n value:function removeClass(className){}\r\n\r\n/**\r\n*Sets the width style property of the notch element.\r\n*@param{number}width\r\n*/\r\n\r\n},{\r\n key:\"setNotchWidthProperty\",\r\n value:function setNotchWidthProperty(width){}\r\n\r\n/**\r\n*Removes the width style property from the notch element.\r\n*/\r\n\r\n},{\r\n key:\"removeNotchWidthProperty\",\r\n value:function removeNotchWidthProperty(){}\r\n}]);\r\n\r\n return MDCNotchedOutlineAdapter;\r\n}();\r\n\r\n/*unused harmony default export*/var _unused_webpack_default_export=(MDCNotchedOutlineAdapter);\r\n\r\n/***/}),\r\n\r\n/***/23:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"a\",function(){return cssClasses;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"b\",function(){return numbers;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"c\",function(){return strings;});\r\n/**\r\n*@license\r\n*Copyright 2018 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**@enum{string}*/\r\nvar strings={\r\n NOTCH_ELEMENT_SELECTOR:'.mdc-notched-outline__notch'\r\n};\r\n\r\n/**@enum{number}*/\r\nvar numbers={\r\n//This should stay in sync with $mdc-notched-outline-padding*2.\r\n NOTCH_ELEMENT_PADDING:8\r\n};\r\n\r\n/**@enum{string}*/\r\nvar cssClasses={\r\n OUTLINE_NOTCHED:'mdc-notched-outline--notched',\r\n OUTLINE_UPGRADED:'mdc-notched-outline--upgraded',\r\n NO_LABEL:'mdc-notched-outline--no-label'\r\n};\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/26:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__=__webpack_require__(0);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(12);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__constants__=__webpack_require__(27);\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCFoundation<!MDCFloatingLabelAdapter>}\r\n*@final\r\n*/\r\n\r\nvar MDCFloatingLabelFoundation=function(_MDCFoundation){\r\n _inherits(MDCFloatingLabelFoundation,_MDCFoundation);\r\n\r\n _createClass(MDCFloatingLabelFoundation,null,[{\r\n key:'cssClasses',\r\n\r\n/**@return enum{string}*/\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/];\r\n}\r\n\r\n/**\r\n*{@see MDCFloatingLabelAdapter}for typing information on parameters and return\r\n*types.\r\n*@return{!MDCFloatingLabelAdapter}\r\n*/\r\n\r\n},{\r\n key:'defaultAdapter',\r\n get:function get(){\r\n return(/**@type{!MDCFloatingLabelAdapter}*/{\r\n addClass:function addClass(){},\r\n removeClass:function removeClass(){},\r\n getWidth:function getWidth(){},\r\n registerInteractionHandler:function registerInteractionHandler(){},\r\n deregisterInteractionHandler:function deregisterInteractionHandler(){}\r\n}\r\n);\r\n}\r\n\r\n/**\r\n*@param{!MDCFloatingLabelAdapter}adapter\r\n*/\r\n\r\n}]);\r\n\r\n function MDCFloatingLabelFoundation(adapter){\r\n _classCallCheck(this,MDCFloatingLabelFoundation);\r\n\r\n/**@private{function(!Event):undefined}*/\r\n var _this=_possibleConstructorReturn(this,(MDCFloatingLabelFoundation.__proto__||Object.getPrototypeOf(MDCFloatingLabelFoundation)).call(this,_extends(MDCFloatingLabelFoundation.defaultAdapter,adapter)));\r\n\r\n _this.shakeAnimationEndHandler_=function(){\r\n return _this.handleShakeAnimationEnd_();\r\n};\r\n return _this;\r\n}\r\n\r\n _createClass(MDCFloatingLabelFoundation,[{\r\n key:'init',\r\n value:function init(){\r\n this.adapter_.registerInteractionHandler('animationend',this.shakeAnimationEndHandler_);\r\n}\r\n},{\r\n key:'destroy',\r\n value:function destroy(){\r\n this.adapter_.deregisterInteractionHandler('animationend',this.shakeAnimationEndHandler_);\r\n}\r\n\r\n/**\r\n*Returns the width of the label element.\r\n*@return{number}\r\n*/\r\n\r\n},{\r\n key:'getWidth',\r\n value:function getWidth(){\r\n return this.adapter_.getWidth();\r\n}\r\n\r\n/**\r\n*Styles the label to produce the label shake for errors.\r\n*@param{boolean}shouldShake adds shake class if true,\r\n*otherwise removes shake class.\r\n*/\r\n\r\n},{\r\n key:'shake',\r\n value:function shake(shouldShake){\r\n var LABEL_SHAKE=MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;\r\n\r\n if(shouldShake){\r\n this.adapter_.addClass(LABEL_SHAKE);\r\n}else{\r\n this.adapter_.removeClass(LABEL_SHAKE);\r\n}\r\n}\r\n\r\n/**\r\n*Styles the label to float or dock.\r\n*@param{boolean}shouldFloat adds float class if true,otherwise remove\r\n*float and shake class to dock label.\r\n*/\r\n\r\n},{\r\n key:'float',\r\n value:function float(shouldFloat){\r\n var _MDCFloatingLabelFoun=MDCFloatingLabelFoundation.cssClasses,\r\n LABEL_FLOAT_ABOVE=_MDCFloatingLabelFoun.LABEL_FLOAT_ABOVE,\r\n LABEL_SHAKE=_MDCFloatingLabelFoun.LABEL_SHAKE;\r\n\r\n if(shouldFloat){\r\n this.adapter_.addClass(LABEL_FLOAT_ABOVE);\r\n}else{\r\n this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\r\n this.adapter_.removeClass(LABEL_SHAKE);\r\n}\r\n}\r\n\r\n/**\r\n*Handles an interaction event on the root element.\r\n*/\r\n\r\n},{\r\n key:'handleShakeAnimationEnd_',\r\n value:function handleShakeAnimationEnd_(){\r\n var LABEL_SHAKE=MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;\r\n\r\n this.adapter_.removeClass(LABEL_SHAKE);\r\n}\r\n}]);\r\n\r\n return MDCFloatingLabelFoundation;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\"/*default*/]);\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCFloatingLabelFoundation);\r\n\r\n/***/}),\r\n\r\n/***/27:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"a\",function(){return cssClasses;});\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**@enum{string}*/\r\nvar cssClasses={\r\n LABEL_FLOAT_ABOVE:'mdc-floating-label--float-above',\r\n LABEL_SHAKE:'mdc-floating-label--shake',\r\n ROOT:'mdc-floating-label'\r\n};\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/3:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/*eslint no-unused-vars:[2,{\"args\":\"none\"}]*/\r\n\r\n/**\r\n*Adapter for MDC Ripple.Provides an interface for managing\r\n*-classes\r\n*-dom\r\n*-CSS variables\r\n*-position\r\n*-dimensions\r\n*-scroll position\r\n*-event handlers\r\n*-unbounded,active and disabled states\r\n*\r\n*Additionally,provides type information for the adapter to the Closure\r\n*compiler.\r\n*\r\n*Implement this adapter for your framework of choice to delegate updates to\r\n*the component in your framework of choice.See architecture documentation\r\n*for more details.\r\n*https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\r\n*\r\n*@record\r\n*/\r\nvar MDCRippleAdapter=function(){\r\n function MDCRippleAdapter(){\r\n _classCallCheck(this,MDCRippleAdapter);\r\n}\r\n\r\n _createClass(MDCRippleAdapter,[{\r\n key:\"browserSupportsCssVars\",\r\n\r\n/**@return{boolean}*/\r\n value:function browserSupportsCssVars(){}\r\n\r\n/**@return{boolean}*/\r\n\r\n},{\r\n key:\"isUnbounded\",\r\n value:function isUnbounded(){}\r\n\r\n/**@return{boolean}*/\r\n\r\n},{\r\n key:\"isSurfaceActive\",\r\n value:function isSurfaceActive(){}\r\n\r\n/**@return{boolean}*/\r\n\r\n},{\r\n key:\"isSurfaceDisabled\",\r\n value:function isSurfaceDisabled(){}\r\n\r\n/**@param{string}className*/\r\n\r\n},{\r\n key:\"addClass\",\r\n value:function addClass(className){}\r\n\r\n/**@param{string}className*/\r\n\r\n},{\r\n key:\"removeClass\",\r\n value:function removeClass(className){}\r\n\r\n/**@param{!EventTarget}target*/\r\n\r\n},{\r\n key:\"containsEventTarget\",\r\n value:function containsEventTarget(target){}\r\n\r\n/**\r\n*@param{string}evtType\r\n*@param{!Function}handler\r\n*/\r\n\r\n},{\r\n key:\"registerInteractionHandler\",\r\n value:function registerInteractionHandler(evtType,handler){}\r\n\r\n/**\r\n*@param{string}evtType\r\n*@param{!Function}handler\r\n*/\r\n\r\n},{\r\n key:\"deregisterInteractionHandler\",\r\n value:function deregisterInteractionHandler(evtType,handler){}\r\n\r\n/**\r\n*@param{string}evtType\r\n*@param{!Function}handler\r\n*/\r\n\r\n},{\r\n key:\"registerDocumentInteractionHandler\",\r\n value:function registerDocumentInteractionHandler(evtType,handler){}\r\n\r\n/**\r\n*@param{string}evtType\r\n*@param{!Function}handler\r\n*/\r\n\r\n},{\r\n key:\"deregisterDocumentInteractionHandler\",\r\n value:function deregisterDocumentInteractionHandler(evtType,handler){}\r\n\r\n/**\r\n*@param{!Function}handler\r\n*/\r\n\r\n},{\r\n key:\"registerResizeHandler\",\r\n value:function registerResizeHandler(handler){}\r\n\r\n/**\r\n*@param{!Function}handler\r\n*/\r\n\r\n},{\r\n key:\"deregisterResizeHandler\",\r\n value:function deregisterResizeHandler(handler){}\r\n\r\n/**\r\n*@param{string}varName\r\n*@param{?number|string}value\r\n*/\r\n\r\n},{\r\n key:\"updateCssVariable\",\r\n value:function updateCssVariable(varName,value){}\r\n\r\n/**@return{!ClientRect}*/\r\n\r\n},{\r\n key:\"computeBoundingRect\",\r\n value:function computeBoundingRect(){}\r\n\r\n/**@return{{x:number,y:number}}*/\r\n\r\n},{\r\n key:\"getWindowPageOffset\",\r\n value:function getWindowPageOffset(){}\r\n}]);\r\n\r\n return MDCRippleAdapter;\r\n}();\r\n\r\n/*unused harmony default export*/var _unused_webpack_default_export=(MDCRippleAdapter);\r\n\r\n/***/}),\r\n\r\n/***/30:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nObject.defineProperty(__webpack_exports__,\"__esModule\",{value:true});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCLineRipple\",function(){return MDCLineRipple;});\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_component__=__webpack_require__(1);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(20);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__foundation__=__webpack_require__(31);\r\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCLineRippleFoundation\",function(){return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"];});\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2018 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCComponent<!MDCLineRippleFoundation>}\r\n*@final\r\n*/\r\n\r\nvar MDCLineRipple=function(_MDCComponent){\r\n _inherits(MDCLineRipple,_MDCComponent);\r\n\r\n function MDCLineRipple(){\r\n _classCallCheck(this,MDCLineRipple);\r\n\r\n return _possibleConstructorReturn(this,(MDCLineRipple.__proto__||Object.getPrototypeOf(MDCLineRipple)).apply(this,arguments));\r\n}\r\n\r\n _createClass(MDCLineRipple,[{\r\n key:'activate',\r\n\r\n\r\n/**\r\n*Activates the line ripple\r\n*/\r\n value:function activate(){\r\n this.foundation_.activate();\r\n}\r\n\r\n/**\r\n*Deactivates the line ripple\r\n*/\r\n\r\n},{\r\n key:'deactivate',\r\n value:function deactivate(){\r\n this.foundation_.deactivate();\r\n}\r\n\r\n/**\r\n*Sets the transform origin given a user's click location.The`rippleCenter`is the\r\n*x-coordinate of the middle of the ripple.\r\n*@param{number}xCoordinate\r\n*/\r\n\r\n},{\r\n key:'setRippleCenter',\r\n value:function setRippleCenter(xCoordinate){\r\n this.foundation_.setRippleCenter(xCoordinate);\r\n}\r\n\r\n/**\r\n*@return{!MDCLineRippleFoundation}\r\n*/\r\n\r\n},{\r\n key:'getDefaultFoundation',\r\n value:function getDefaultFoundation(){\r\n var _this2=this;\r\n\r\n return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"/*default*/](/**@type{!MDCLineRippleAdapter}*/_extends({\r\n addClass:function addClass(className){\r\n return _this2.root_.classList.add(className);\r\n},\r\n removeClass:function removeClass(className){\r\n return _this2.root_.classList.remove(className);\r\n},\r\n hasClass:function hasClass(className){\r\n return _this2.root_.classList.contains(className);\r\n},\r\n setStyle:function setStyle(propertyName,value){\r\n return _this2.root_.style[propertyName]=value;\r\n},\r\n registerEventHandler:function registerEventHandler(evtType,handler){\r\n return _this2.root_.addEventListener(evtType,handler);\r\n},\r\n deregisterEventHandler:function deregisterEventHandler(evtType,handler){\r\n return _this2.root_.removeEventListener(evtType,handler);\r\n}\r\n}));\r\n}\r\n}],[{\r\n key:'attachTo',\r\n\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCLineRipple}\r\n*/\r\n value:function attachTo(root){\r\n return new MDCLineRipple(root);\r\n}\r\n}]);\r\n\r\n return MDCLineRipple;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\"/*default*/]);\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/31:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__=__webpack_require__(0);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(20);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__constants__=__webpack_require__(32);\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2018 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCFoundation<!MDCLineRippleAdapter>}\r\n*@final\r\n*/\r\n\r\nvar MDCLineRippleFoundation=function(_MDCFoundation){\r\n _inherits(MDCLineRippleFoundation,_MDCFoundation);\r\n\r\n _createClass(MDCLineRippleFoundation,null,[{\r\n key:'cssClasses',\r\n\r\n/**@return enum{string}*/\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/];\r\n}\r\n\r\n/**\r\n*{@see MDCLineRippleAdapter}for typing information on parameters and return\r\n*types.\r\n*@return{!MDCLineRippleAdapter}\r\n*/\r\n\r\n},{\r\n key:'defaultAdapter',\r\n get:function get(){\r\n return(/**@type{!MDCLineRippleAdapter}*/{\r\n addClass:function addClass(){},\r\n removeClass:function removeClass(){},\r\n hasClass:function hasClass(){},\r\n setStyle:function setStyle(){},\r\n registerEventHandler:function registerEventHandler(){},\r\n deregisterEventHandler:function deregisterEventHandler(){}\r\n}\r\n);\r\n}\r\n\r\n/**\r\n*@param{!MDCLineRippleAdapter=}adapter\r\n*/\r\n\r\n}]);\r\n\r\n function MDCLineRippleFoundation(adapter){\r\n _classCallCheck(this,MDCLineRippleFoundation);\r\n\r\n/**@private{function(!Event):undefined}*/\r\n var _this=_possibleConstructorReturn(this,(MDCLineRippleFoundation.__proto__||Object.getPrototypeOf(MDCLineRippleFoundation)).call(this,_extends(MDCLineRippleFoundation.defaultAdapter,adapter)));\r\n\r\n _this.transitionEndHandler_=function(evt){\r\n return _this.handleTransitionEnd(evt);\r\n};\r\n return _this;\r\n}\r\n\r\n _createClass(MDCLineRippleFoundation,[{\r\n key:'init',\r\n value:function init(){\r\n this.adapter_.registerEventHandler('transitionend',this.transitionEndHandler_);\r\n}\r\n},{\r\n key:'destroy',\r\n value:function destroy(){\r\n this.adapter_.deregisterEventHandler('transitionend',this.transitionEndHandler_);\r\n}\r\n\r\n/**\r\n*Activates the line ripple\r\n*/\r\n\r\n},{\r\n key:'activate',\r\n value:function activate(){\r\n this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/].LINE_RIPPLE_DEACTIVATING);\r\n this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/].LINE_RIPPLE_ACTIVE);\r\n}\r\n\r\n/**\r\n*Sets the center of the ripple animation to the given X coordinate.\r\n*@param{number}xCoordinate\r\n*/\r\n\r\n},{\r\n key:'setRippleCenter',\r\n value:function setRippleCenter(xCoordinate){\r\n this.adapter_.setStyle('transform-origin',xCoordinate+'px center');\r\n}\r\n\r\n/**\r\n*Deactivates the line ripple\r\n*/\r\n\r\n},{\r\n key:'deactivate',\r\n value:function deactivate(){\r\n this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/].LINE_RIPPLE_DEACTIVATING);\r\n}\r\n\r\n/**\r\n*Handles a transition end event\r\n*@param{!Event}evt\r\n*/\r\n\r\n},{\r\n key:'handleTransitionEnd',\r\n value:function handleTransitionEnd(evt){\r\n//Wait for the line ripple to be either transparent or opaque\r\n//before emitting the animation end event\r\n var isDeactivating=this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/].LINE_RIPPLE_DEACTIVATING);\r\n\r\n if(evt.propertyName==='opacity'){\r\n if(isDeactivating){\r\n this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/].LINE_RIPPLE_ACTIVE);\r\n this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/].LINE_RIPPLE_DEACTIVATING);\r\n}\r\n}\r\n}\r\n}]);\r\n\r\n return MDCLineRippleFoundation;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\"/*default*/]);\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCLineRippleFoundation);\r\n\r\n/***/}),\r\n\r\n/***/32:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"a\",function(){return cssClasses;});\r\n/**\r\n*@license\r\n*Copyright 2018 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**@enum{string}*/\r\nvar cssClasses={\r\n LINE_RIPPLE_ACTIVE:'mdc-line-ripple--active',\r\n LINE_RIPPLE_DEACTIVATING:'mdc-line-ripple--deactivating'\r\n};\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/35:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nObject.defineProperty(__webpack_exports__,\"__esModule\",{value:true});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCNotchedOutline\",function(){return MDCNotchedOutline;});\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_component__=__webpack_require__(1);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(22);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__foundation__=__webpack_require__(36);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_3__material_floating_label_index__=__webpack_require__(16);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_4__constants__=__webpack_require__(23);\r\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCNotchedOutlineFoundation\",function(){return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"];});\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCComponent<!MDCNotchedOutlineFoundation>}\r\n*@final\r\n*/\r\n\r\nvar MDCNotchedOutline=function(_MDCComponent){\r\n _inherits(MDCNotchedOutline,_MDCComponent);\r\n\r\n _createClass(MDCNotchedOutline,null,[{\r\n key:'attachTo',\r\n\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCNotchedOutline}\r\n*/\r\n value:function attachTo(root){\r\n return new MDCNotchedOutline(root);\r\n}\r\n/**@param{...?}args*/\r\n\r\n}]);\r\n\r\n function MDCNotchedOutline(){\r\n var _ref;\r\n\r\n _classCallCheck(this,MDCNotchedOutline);\r\n\r\n for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){\r\n args[_key]=arguments[_key];\r\n}\r\n\r\n/**@private{Element}*/\r\n var _this=_possibleConstructorReturn(this,(_ref=MDCNotchedOutline.__proto__||Object.getPrototypeOf(MDCNotchedOutline)).call.apply(_ref,[this].concat(args)));\r\n\r\n _this.notchElement_;\r\n return _this;\r\n}\r\n\r\n _createClass(MDCNotchedOutline,[{\r\n key:'initialSyncWithDOM',\r\n value:function initialSyncWithDOM(){\r\n var label=this.root_.querySelector('.'+__WEBPACK_IMPORTED_MODULE_3__material_floating_label_index__[\"MDCFloatingLabelFoundation\"].cssClasses.ROOT);\r\n this.notchElement_=this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__[\"c\"/*strings*/].NOTCH_ELEMENT_SELECTOR);\r\n\r\n if(label){\r\n label.style.transitionDuration='0s';\r\n this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_4__constants__[\"a\"/*cssClasses*/].OUTLINE_UPGRADED);\r\n requestAnimationFrame(function(){\r\n label.style.transitionDuration='';\r\n});\r\n}else{\r\n this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_4__constants__[\"a\"/*cssClasses*/].NO_LABEL);\r\n}\r\n}\r\n\r\n/**\r\n*Updates classes and styles to open the notch to the specified width.\r\n*@param{number}notchWidth The notch width in the outline.\r\n*/\r\n\r\n},{\r\n key:'notch',\r\n value:function notch(notchWidth){\r\n this.foundation_.notch(notchWidth);\r\n}\r\n\r\n/**\r\n*Updates classes and styles to close the notch.\r\n*/\r\n\r\n},{\r\n key:'closeNotch',\r\n value:function closeNotch(){\r\n this.foundation_.closeNotch();\r\n}\r\n\r\n/**\r\n*@return{!MDCNotchedOutlineFoundation}\r\n*/\r\n\r\n},{\r\n key:'getDefaultFoundation',\r\n value:function getDefaultFoundation(){\r\n var _this2=this;\r\n\r\n return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"/*default*/](\r\n/**@type{!MDCNotchedOutlineAdapter}*/_extends({\r\n addClass:function addClass(className){\r\n return _this2.root_.classList.add(className);\r\n},\r\n removeClass:function removeClass(className){\r\n return _this2.root_.classList.remove(className);\r\n},\r\n setNotchWidthProperty:function setNotchWidthProperty(width){\r\n return _this2.notchElement_.style.setProperty('width',width+'px');\r\n},\r\n removeNotchWidthProperty:function removeNotchWidthProperty(){\r\n return _this2.notchElement_.style.removeProperty('width');\r\n}\r\n}));\r\n}\r\n}]);\r\n\r\n return MDCNotchedOutline;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\"/*default*/]);\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/36:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__=__webpack_require__(0);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(22);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__constants__=__webpack_require__(23);\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCFoundation<!MDCNotchedOutlineAdapter>}\r\n*@final\r\n*/\r\n\r\nvar MDCNotchedOutlineFoundation=function(_MDCFoundation){\r\n _inherits(MDCNotchedOutlineFoundation,_MDCFoundation);\r\n\r\n _createClass(MDCNotchedOutlineFoundation,null,[{\r\n key:'strings',\r\n\r\n/**@return enum{string}*/\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"c\"/*strings*/];\r\n}\r\n\r\n/**@return enum{string}*/\r\n\r\n},{\r\n key:'cssClasses',\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/];\r\n}\r\n\r\n/**@return enum{number}*/\r\n\r\n},{\r\n key:'numbers',\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"/*numbers*/];\r\n}\r\n\r\n/**\r\n*{@see MDCNotchedOutlineAdapter}for typing information on parameters and return\r\n*types.\r\n*@return{!MDCNotchedOutlineAdapter}\r\n*/\r\n\r\n},{\r\n key:'defaultAdapter',\r\n get:function get(){\r\n return(/**@type{!MDCNotchedOutlineAdapter}*/{\r\n addClass:function addClass(){},\r\n removeClass:function removeClass(){},\r\n setNotchWidthProperty:function setNotchWidthProperty(){},\r\n removeNotchWidthProperty:function removeNotchWidthProperty(){}\r\n}\r\n);\r\n}\r\n\r\n/**\r\n*@param{!MDCNotchedOutlineAdapter}adapter\r\n*/\r\n\r\n}]);\r\n\r\n function MDCNotchedOutlineFoundation(adapter){\r\n _classCallCheck(this,MDCNotchedOutlineFoundation);\r\n\r\n return _possibleConstructorReturn(this,(MDCNotchedOutlineFoundation.__proto__||Object.getPrototypeOf(MDCNotchedOutlineFoundation)).call(this,_extends(MDCNotchedOutlineFoundation.defaultAdapter,adapter)));\r\n}\r\n\r\n/**\r\n*Adds the outline notched selector and updates the notch width\r\n*calculated based off of notchWidth.\r\n*@param{number}notchWidth\r\n*/\r\n\r\n\r\n _createClass(MDCNotchedOutlineFoundation,[{\r\n key:'notch',\r\n value:function notch(notchWidth){\r\n var OUTLINE_NOTCHED=MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;\r\n\r\n\r\n if(notchWidth>0){\r\n notchWidth+=__WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"/*numbers*/].NOTCH_ELEMENT_PADDING;//Add padding from left/right.\r\n}\r\n\r\n this.adapter_.setNotchWidthProperty(notchWidth);\r\n this.adapter_.addClass(OUTLINE_NOTCHED);\r\n}\r\n\r\n/**\r\n*Removes notched outline selector to close the notch in the outline.\r\n*/\r\n\r\n},{\r\n key:'closeNotch',\r\n value:function closeNotch(){\r\n var OUTLINE_NOTCHED=MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;\r\n\r\n this.adapter_.removeClass(OUTLINE_NOTCHED);\r\n this.adapter_.removeNotchWidthProperty();\r\n}\r\n}]);\r\n\r\n return MDCNotchedOutlineFoundation;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\"/*default*/]);\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCNotchedOutlineFoundation);\r\n\r\n/***/}),\r\n\r\n/***/4:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nObject.defineProperty(__webpack_exports__,\"__esModule\",{value:true});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCRipple\",function(){return MDCRipple;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"RippleCapableSurface\",function(){return RippleCapableSurface;});\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_component__=__webpack_require__(1);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(3);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__foundation__=__webpack_require__(5);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_3__util__=__webpack_require__(2);\r\n/*harmony reexport(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCRippleFoundation\",function(){return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"];});\r\n/*harmony reexport(module object)*/__webpack_require__.d(__webpack_exports__,\"util\",function(){return __WEBPACK_IMPORTED_MODULE_3__util__;});\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends MDCComponent<!MDCRippleFoundation>\r\n*/\r\n\r\nvar MDCRipple=function(_MDCComponent){\r\n _inherits(MDCRipple,_MDCComponent);\r\n\r\n/**@param{...?}args*/\r\n function MDCRipple(){\r\n var _ref;\r\n\r\n _classCallCheck(this,MDCRipple);\r\n\r\n for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){\r\n args[_key]=arguments[_key];\r\n}\r\n\r\n/**@type{boolean}*/\r\n var _this=_possibleConstructorReturn(this,(_ref=MDCRipple.__proto__||Object.getPrototypeOf(MDCRipple)).call.apply(_ref,[this].concat(args)));\r\n\r\n _this.disabled=false;\r\n\r\n/**@private{boolean}*/\r\n _this.unbounded_;\r\n return _this;\r\n}\r\n\r\n/**\r\n*@param{!Element}root\r\n*@param{{isUnbounded:(boolean|undefined)}=}options\r\n*@return{!MDCRipple}\r\n*/\r\n\r\n\r\n _createClass(MDCRipple,[{\r\n key:'setUnbounded_',\r\n\r\n\r\n/**\r\n*Closure Compiler throws an access control error when directly accessing a\r\n*protected or private property inside a getter/setter,like unbounded above.\r\n*By accessing the protected property inside a method,we solve that problem.\r\n*That's why this function exists.\r\n*@private\r\n*/\r\n value:function setUnbounded_(){\r\n this.foundation_.setUnbounded(this.unbounded_);\r\n}\r\n},{\r\n key:'activate',\r\n value:function activate(){\r\n this.foundation_.activate();\r\n}\r\n},{\r\n key:'deactivate',\r\n value:function deactivate(){\r\n this.foundation_.deactivate();\r\n}\r\n},{\r\n key:'layout',\r\n value:function layout(){\r\n this.foundation_.layout();\r\n}\r\n\r\n/**\r\n*@return{!MDCRippleFoundation}\r\n*@override\r\n*/\r\n\r\n},{\r\n key:'getDefaultFoundation',\r\n value:function getDefaultFoundation(){\r\n return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"/*default*/](MDCRipple.createAdapter(this));\r\n}\r\n\r\n/**@override*/\r\n\r\n},{\r\n key:'initialSyncWithDOM',\r\n value:function initialSyncWithDOM(){\r\n this.unbounded='mdcRippleIsUnbounded'in this.root_.dataset;\r\n}\r\n},{\r\n key:'unbounded',\r\n\r\n\r\n/**@return{boolean}*/\r\n get:function get(){\r\n return this.unbounded_;\r\n}\r\n\r\n/**@param{boolean}unbounded*/\r\n,\r\n set:function set(unbounded){\r\n this.unbounded_=Boolean(unbounded);\r\n this.setUnbounded_();\r\n}\r\n}],[{\r\n key:'attachTo',\r\n value:function attachTo(root){\r\n var _ref2=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},\r\n _ref2$isUnbounded=_ref2.isUnbounded,\r\n isUnbounded=_ref2$isUnbounded===undefined?undefined:_ref2$isUnbounded;\r\n\r\n var ripple=new MDCRipple(root);\r\n//Only override unbounded behavior if option is explicitly specified\r\n if(isUnbounded!==undefined){\r\n ripple.unbounded=/**@type{boolean}*/isUnbounded;\r\n}\r\n return ripple;\r\n}\r\n\r\n/**\r\n*@param{!RippleCapableSurface}instance\r\n*@return{!MDCRippleAdapter}\r\n*/\r\n\r\n},{\r\n key:'createAdapter',\r\n value:function createAdapter(instance){\r\n var MATCHES=__WEBPACK_IMPORTED_MODULE_3__util__[\"getMatchesProperty\"](HTMLElement.prototype);\r\n\r\n return{\r\n browserSupportsCssVars:function browserSupportsCssVars(){\r\n return __WEBPACK_IMPORTED_MODULE_3__util__[\"supportsCssVariables\"](window);\r\n},\r\n isUnbounded:function isUnbounded(){\r\n return instance.unbounded;\r\n},\r\n isSurfaceActive:function isSurfaceActive(){\r\n return instance.root_[MATCHES](':active');\r\n},\r\n isSurfaceDisabled:function isSurfaceDisabled(){\r\n return instance.disabled;\r\n},\r\n addClass:function addClass(className){\r\n return instance.root_.classList.add(className);\r\n},\r\n removeClass:function removeClass(className){\r\n return instance.root_.classList.remove(className);\r\n},\r\n containsEventTarget:function containsEventTarget(target){\r\n return instance.root_.contains(target);\r\n},\r\n registerInteractionHandler:function registerInteractionHandler(evtType,handler){\r\n return instance.root_.addEventListener(evtType,handler,__WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\r\n},\r\n deregisterInteractionHandler:function deregisterInteractionHandler(evtType,handler){\r\n return instance.root_.removeEventListener(evtType,handler,__WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\r\n},\r\n registerDocumentInteractionHandler:function registerDocumentInteractionHandler(evtType,handler){\r\n return document.documentElement.addEventListener(evtType,handler,__WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\r\n},\r\n deregisterDocumentInteractionHandler:function deregisterDocumentInteractionHandler(evtType,handler){\r\n return document.documentElement.removeEventListener(evtType,handler,__WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\r\n},\r\n registerResizeHandler:function registerResizeHandler(handler){\r\n return window.addEventListener('resize',handler);\r\n},\r\n deregisterResizeHandler:function deregisterResizeHandler(handler){\r\n return window.removeEventListener('resize',handler);\r\n},\r\n updateCssVariable:function updateCssVariable(varName,value){\r\n return instance.root_.style.setProperty(varName,value);\r\n},\r\n computeBoundingRect:function computeBoundingRect(){\r\n return instance.root_.getBoundingClientRect();\r\n},\r\n getWindowPageOffset:function getWindowPageOffset(){\r\n return{x:window.pageXOffset,y:window.pageYOffset};\r\n}\r\n};\r\n}\r\n}]);\r\n\r\n return MDCRipple;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\"/*default*/]);\r\n\r\n/**\r\n*See Material Design spec for more details on when to use ripples.\r\n*https://material.io/guidelines/motion/choreography.html#choreography-creation\r\n*@record\r\n*/\r\n\r\n\r\nvar RippleCapableSurface=function RippleCapableSurface(){\r\n _classCallCheck(this,RippleCapableSurface);\r\n};\r\n\r\n/**@protected{!Element}*/\r\n\r\n\r\nRippleCapableSurface.prototype.root_;\r\n\r\n/**\r\n*Whether or not the ripple bleeds out of the bounds of the element.\r\n*@type{boolean|undefined}\r\n*/\r\nRippleCapableSurface.prototype.unbounded;\r\n\r\n/**\r\n*Whether or not the ripple is attached to a disabled component.\r\n*@type{boolean|undefined}\r\n*/\r\nRippleCapableSurface.prototype.disabled;\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/5:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__=__webpack_require__(0);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(3);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__constants__=__webpack_require__(6);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_3__util__=__webpack_require__(2);\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@typedef{{\r\n*isActivated:(boolean|undefined),\r\n*hasDeactivationUXRun:(boolean|undefined),\r\n*wasActivatedByPointer:(boolean|undefined),\r\n*wasElementMadeActive:(boolean|undefined),\r\n*activationEvent:(!Event|undefined),\r\n*isProgrammatic:(boolean|undefined)\r\n*}}\r\n*/\r\nvar ActivationStateType=void 0;\r\n\r\n/**\r\n*@typedef{{\r\n*activate:(string|undefined),\r\n*deactivate:(string|undefined),\r\n*focus:(string|undefined),\r\n*blur:(string|undefined)\r\n*}}\r\n*/\r\nvar ListenerInfoType=void 0;\r\n\r\n/**\r\n*@typedef{{\r\n*activate:function(!Event),\r\n*deactivate:function(!Event=),\r\n*focus:function(),\r\n*blur:function()\r\n*}}\r\n*/\r\nvar ListenersType=void 0;\r\n\r\n/**\r\n*@typedef{{\r\n*x:number,\r\n*y:number\r\n*}}\r\n*/\r\nvar PointType=void 0;\r\n\r\n//Activation events registered on the root element of each instance for activation\r\nvar ACTIVATION_EVENT_TYPES=['touchstart','pointerdown','mousedown','keydown'];\r\n\r\n//Deactivation events registered on documentElement when a pointer-related down event occurs\r\nvar POINTER_DEACTIVATION_EVENT_TYPES=['touchend','pointerup','mouseup','contextmenu'];\r\n\r\n//Tracks activations that have occurred on the current frame,to avoid simultaneous nested activations\r\n/**@type{!Array<!EventTarget>}*/\r\nvar activatedTargets=[];\r\n\r\n/**\r\n*@extends{MDCFoundation<!MDCRippleAdapter>}\r\n*/\r\n\r\nvar MDCRippleFoundation=function(_MDCFoundation){\r\n _inherits(MDCRippleFoundation,_MDCFoundation);\r\n\r\n _createClass(MDCRippleFoundation,null,[{\r\n key:'cssClasses',\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/];\r\n}\r\n},{\r\n key:'strings',\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"c\"/*strings*/];\r\n}\r\n},{\r\n key:'numbers',\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"/*numbers*/];\r\n}\r\n},{\r\n key:'defaultAdapter',\r\n get:function get(){\r\n return{\r\n browserSupportsCssVars:function browserSupportsCssVars()/*boolean-cached*/{},\r\n isUnbounded:function isUnbounded()/*boolean*/{},\r\n isSurfaceActive:function isSurfaceActive()/*boolean*/{},\r\n isSurfaceDisabled:function isSurfaceDisabled()/*boolean*/{},\r\n addClass:function addClass()/*className:string*/{},\r\n removeClass:function removeClass()/*className:string*/{},\r\n containsEventTarget:function containsEventTarget()/*target:!EventTarget*/{},\r\n registerInteractionHandler:function registerInteractionHandler()/*evtType:string,handler:EventListener*/{},\r\n deregisterInteractionHandler:function deregisterInteractionHandler()/*evtType:string,handler:EventListener*/{},\r\n registerDocumentInteractionHandler:function registerDocumentInteractionHandler()/*evtType:string,handler:EventListener*/{},\r\n deregisterDocumentInteractionHandler:function deregisterDocumentInteractionHandler()/*evtType:string,handler:EventListener*/{},\r\n registerResizeHandler:function registerResizeHandler()/*handler:EventListener*/{},\r\n deregisterResizeHandler:function deregisterResizeHandler()/*handler:EventListener*/{},\r\n updateCssVariable:function updateCssVariable()/*varName:string,value:string*/{},\r\n computeBoundingRect:function computeBoundingRect()/*ClientRect*/{},\r\n getWindowPageOffset:function getWindowPageOffset()/*{x:number,y:number}*/{}\r\n};\r\n}\r\n}]);\r\n\r\n function MDCRippleFoundation(adapter){\r\n _classCallCheck(this,MDCRippleFoundation);\r\n\r\n/**@private{number}*/\r\n var _this=_possibleConstructorReturn(this,(MDCRippleFoundation.__proto__||Object.getPrototypeOf(MDCRippleFoundation)).call(this,_extends(MDCRippleFoundation.defaultAdapter,adapter)));\r\n\r\n _this.layoutFrame_=0;\r\n\r\n/**@private{!ClientRect}*/\r\n _this.frame_=/**@type{!ClientRect}*/{width:0,height:0};\r\n\r\n/**@private{!ActivationStateType}*/\r\n _this.activationState_=_this.defaultActivationState_();\r\n\r\n/**@private{number}*/\r\n _this.initialSize_=0;\r\n\r\n/**@private{number}*/\r\n _this.maxRadius_=0;\r\n\r\n/**@private{function(!Event)}*/\r\n _this.activateHandler_=function(e){\r\n return _this.activate_(e);\r\n};\r\n\r\n/**@private{function(!Event=)}*/\r\n _this.deactivateHandler_=function(){\r\n return _this.deactivate_();\r\n};\r\n\r\n/**@private{function(!Event=)}*/\r\n _this.focusHandler_=function(){\r\n return _this.handleFocus();\r\n};\r\n\r\n/**@private{function(!Event=)}*/\r\n _this.blurHandler_=function(){\r\n return _this.handleBlur();\r\n};\r\n\r\n/**@private{!Function}*/\r\n _this.resizeHandler_=function(){\r\n return _this.layout();\r\n};\r\n\r\n/**@private{{left:number,top:number}}*/\r\n _this.unboundedCoords_={\r\n left:0,\r\n top:0\r\n};\r\n\r\n/**@private{number}*/\r\n _this.fgScale_=0;\r\n\r\n/**@private{number}*/\r\n _this.activationTimer_=0;\r\n\r\n/**@private{number}*/\r\n _this.fgDeactivationRemovalTimer_=0;\r\n\r\n/**@private{boolean}*/\r\n _this.activationAnimationHasEnded_=false;\r\n\r\n/**@private{!Function}*/\r\n _this.activationTimerCallback_=function(){\r\n _this.activationAnimationHasEnded_=true;\r\n _this.runDeactivationUXLogicIfReady_();\r\n};\r\n\r\n/**@private{!Event|undefined}*/\r\n _this.previousActivationEvent_;\r\n return _this;\r\n}\r\n\r\n/**\r\n*We compute this property so that we are not querying information about the client\r\n*until the point in time where the foundation requests it.This prevents scenarios where\r\n*client-side feature-detection may happen too early,such as when components are rendered on the server\r\n*and then initialized at mount time on the client.\r\n*@return{boolean}\r\n*@private\r\n*/\r\n\r\n\r\n _createClass(MDCRippleFoundation,[{\r\n key:'supportsPressRipple_',\r\n value:function supportsPressRipple_(){\r\n return this.adapter_.browserSupportsCssVars();\r\n}\r\n\r\n/**\r\n*@return{!ActivationStateType}\r\n*/\r\n\r\n},{\r\n key:'defaultActivationState_',\r\n value:function defaultActivationState_(){\r\n return{\r\n isActivated:false,\r\n hasDeactivationUXRun:false,\r\n wasActivatedByPointer:false,\r\n wasElementMadeActive:false,\r\n activationEvent:undefined,\r\n isProgrammatic:false\r\n};\r\n}\r\n\r\n/**@override*/\r\n\r\n},{\r\n key:'init',\r\n value:function init(){\r\n var _this2=this;\r\n\r\n var supportsPressRipple=this.supportsPressRipple_();\r\n\r\n this.registerRootHandlers_(supportsPressRipple);\r\n\r\n if(supportsPressRipple){\r\n var _MDCRippleFoundation$=MDCRippleFoundation.cssClasses,\r\n ROOT=_MDCRippleFoundation$.ROOT,\r\n UNBOUNDED=_MDCRippleFoundation$.UNBOUNDED;\r\n\r\n requestAnimationFrame(function(){\r\n _this2.adapter_.addClass(ROOT);\r\n if(_this2.adapter_.isUnbounded()){\r\n _this2.adapter_.addClass(UNBOUNDED);\r\n//Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\r\n _this2.layoutInternal_();\r\n}\r\n});\r\n}\r\n}\r\n\r\n/**@override*/\r\n\r\n},{\r\n key:'destroy',\r\n value:function destroy(){\r\n var _this3=this;\r\n\r\n if(this.supportsPressRipple_()){\r\n if(this.activationTimer_){\r\n clearTimeout(this.activationTimer_);\r\n this.activationTimer_=0;\r\n this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\r\n}\r\n\r\n if(this.fgDeactivationRemovalTimer_){\r\n clearTimeout(this.fgDeactivationRemovalTimer_);\r\n this.fgDeactivationRemovalTimer_=0;\r\n this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\r\n}\r\n\r\n var _MDCRippleFoundation$2=MDCRippleFoundation.cssClasses,\r\n ROOT=_MDCRippleFoundation$2.ROOT,\r\n UNBOUNDED=_MDCRippleFoundation$2.UNBOUNDED;\r\n\r\n requestAnimationFrame(function(){\r\n _this3.adapter_.removeClass(ROOT);\r\n _this3.adapter_.removeClass(UNBOUNDED);\r\n _this3.removeCssVars_();\r\n});\r\n}\r\n\r\n this.deregisterRootHandlers_();\r\n this.deregisterDeactivationHandlers_();\r\n}\r\n\r\n/**\r\n*@param{boolean}supportsPressRipple Passed from init to save a redundant function call\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'registerRootHandlers_',\r\n value:function registerRootHandlers_(supportsPressRipple){\r\n var _this4=this;\r\n\r\n if(supportsPressRipple){\r\n ACTIVATION_EVENT_TYPES.forEach(function(type){\r\n _this4.adapter_.registerInteractionHandler(type,_this4.activateHandler_);\r\n});\r\n if(this.adapter_.isUnbounded()){\r\n this.adapter_.registerResizeHandler(this.resizeHandler_);\r\n}\r\n}\r\n\r\n this.adapter_.registerInteractionHandler('focus',this.focusHandler_);\r\n this.adapter_.registerInteractionHandler('blur',this.blurHandler_);\r\n}\r\n\r\n/**\r\n*@param{!Event}e\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'registerDeactivationHandlers_',\r\n value:function registerDeactivationHandlers_(e){\r\n var _this5=this;\r\n\r\n if(e.type==='keydown'){\r\n this.adapter_.registerInteractionHandler('keyup',this.deactivateHandler_);\r\n}else{\r\n POINTER_DEACTIVATION_EVENT_TYPES.forEach(function(type){\r\n _this5.adapter_.registerDocumentInteractionHandler(type,_this5.deactivateHandler_);\r\n});\r\n}\r\n}\r\n\r\n/**@private*/\r\n\r\n},{\r\n key:'deregisterRootHandlers_',\r\n value:function deregisterRootHandlers_(){\r\n var _this6=this;\r\n\r\n ACTIVATION_EVENT_TYPES.forEach(function(type){\r\n _this6.adapter_.deregisterInteractionHandler(type,_this6.activateHandler_);\r\n});\r\n this.adapter_.deregisterInteractionHandler('focus',this.focusHandler_);\r\n this.adapter_.deregisterInteractionHandler('blur',this.blurHandler_);\r\n\r\n if(this.adapter_.isUnbounded()){\r\n this.adapter_.deregisterResizeHandler(this.resizeHandler_);\r\n}\r\n}\r\n\r\n/**@private*/\r\n\r\n},{\r\n key:'deregisterDeactivationHandlers_',\r\n value:function deregisterDeactivationHandlers_(){\r\n var _this7=this;\r\n\r\n this.adapter_.deregisterInteractionHandler('keyup',this.deactivateHandler_);\r\n POINTER_DEACTIVATION_EVENT_TYPES.forEach(function(type){\r\n _this7.adapter_.deregisterDocumentInteractionHandler(type,_this7.deactivateHandler_);\r\n});\r\n}\r\n\r\n/**@private*/\r\n\r\n},{\r\n key:'removeCssVars_',\r\n value:function removeCssVars_(){\r\n var _this8=this;\r\n\r\n var strings=MDCRippleFoundation.strings;\r\n\r\n Object.keys(strings).forEach(function(k){\r\n if(k.indexOf('VAR_')===0){\r\n _this8.adapter_.updateCssVariable(strings[k],null);\r\n}\r\n});\r\n}\r\n\r\n/**\r\n*@param{!Event=}e\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'activate_',\r\n value:function activate_(e){\r\n var _this9=this;\r\n\r\n if(this.adapter_.isSurfaceDisabled()){\r\n return;\r\n}\r\n\r\n var activationState=this.activationState_;\r\n if(activationState.isActivated){\r\n return;\r\n}\r\n\r\n//Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\r\n var previousActivationEvent=this.previousActivationEvent_;\r\n var isSameInteraction=previousActivationEvent&&e!==undefined&&previousActivationEvent.type!==e.type;\r\n if(isSameInteraction){\r\n return;\r\n}\r\n\r\n activationState.isActivated=true;\r\n activationState.isProgrammatic=e===undefined;\r\n activationState.activationEvent=e;\r\n activationState.wasActivatedByPointer=activationState.isProgrammatic?false:e!==undefined&&(e.type==='mousedown'||e.type==='touchstart'||e.type==='pointerdown');\r\n\r\n var hasActivatedChild=e!==undefined&&activatedTargets.length>0&&activatedTargets.some(function(target){\r\n return _this9.adapter_.containsEventTarget(target);\r\n});\r\n if(hasActivatedChild){\r\n//Immediately reset activation state,while preserving logic that prevents touch follow-on events\r\n this.resetActivationState_();\r\n return;\r\n}\r\n\r\n if(e!==undefined){\r\n activatedTargets.push(/**@type{!EventTarget}*/e.target);\r\n this.registerDeactivationHandlers_(e);\r\n}\r\n\r\n activationState.wasElementMadeActive=this.checkElementMadeActive_(e);\r\n if(activationState.wasElementMadeActive){\r\n this.animateActivation_();\r\n}\r\n\r\n requestAnimationFrame(function(){\r\n//Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\r\n activatedTargets=[];\r\n\r\n if(!activationState.wasElementMadeActive&&e!==undefined&&(e.key===''||e.keyCode===32)){\r\n//If space was pressed,try again within an rAF call to detect:active,because different UAs report\r\n//active states inconsistently when they're called within event handling code:\r\n//-https://bugs.chromium.org/p/chromium/issues/detail?id=635971\r\n//-https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\r\n//We try first outside rAF to support Edge,which does not exhibit this problem,but will crash if a CSS\r\n//variable is set within a rAF callback for a submit button interaction(#2241).\r\n activationState.wasElementMadeActive=_this9.checkElementMadeActive_(e);\r\n if(activationState.wasElementMadeActive){\r\n _this9.animateActivation_();\r\n}\r\n}\r\n\r\n if(!activationState.wasElementMadeActive){\r\n//Reset activation state immediately if element was not made active.\r\n _this9.activationState_=_this9.defaultActivationState_();\r\n}\r\n});\r\n}\r\n\r\n/**\r\n*@param{!Event=}e\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'checkElementMadeActive_',\r\n value:function checkElementMadeActive_(e){\r\n return e!==undefined&&e.type==='keydown'?this.adapter_.isSurfaceActive():true;\r\n}\r\n\r\n/**\r\n*@param{!Event=}event Optional event containing position information.\r\n*/\r\n\r\n},{\r\n key:'activate',\r\n value:function activate(event){\r\n this.activate_(event);\r\n}\r\n\r\n/**@private*/\r\n\r\n},{\r\n key:'animateActivation_',\r\n value:function animateActivation_(){\r\n var _this10=this;\r\n\r\n var _MDCRippleFoundation$3=MDCRippleFoundation.strings,\r\n VAR_FG_TRANSLATE_START=_MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,\r\n VAR_FG_TRANSLATE_END=_MDCRippleFoundation$3.VAR_FG_TRANSLATE_END;\r\n var _MDCRippleFoundation$4=MDCRippleFoundation.cssClasses,\r\n FG_DEACTIVATION=_MDCRippleFoundation$4.FG_DEACTIVATION,\r\n FG_ACTIVATION=_MDCRippleFoundation$4.FG_ACTIVATION;\r\n var DEACTIVATION_TIMEOUT_MS=MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;\r\n\r\n\r\n this.layoutInternal_();\r\n\r\n var translateStart='';\r\n var translateEnd='';\r\n\r\n if(!this.adapter_.isUnbounded()){\r\n var _getFgTranslationCoor=this.getFgTranslationCoordinates_(),\r\n startPoint=_getFgTranslationCoor.startPoint,\r\n endPoint=_getFgTranslationCoor.endPoint;\r\n\r\n translateStart=startPoint.x+'px,'+startPoint.y+'px';\r\n translateEnd=endPoint.x+'px,'+endPoint.y+'px';\r\n}\r\n\r\n this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START,translateStart);\r\n this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END,translateEnd);\r\n//Cancel any ongoing activation/deactivation animations\r\n clearTimeout(this.activationTimer_);\r\n clearTimeout(this.fgDeactivationRemovalTimer_);\r\n this.rmBoundedActivationClasses_();\r\n this.adapter_.removeClass(FG_DEACTIVATION);\r\n\r\n//Force layout in order to re-trigger the animation.\r\n this.adapter_.computeBoundingRect();\r\n this.adapter_.addClass(FG_ACTIVATION);\r\n this.activationTimer_=setTimeout(function(){\r\n return _this10.activationTimerCallback_();\r\n},DEACTIVATION_TIMEOUT_MS);\r\n}\r\n\r\n/**\r\n*@private\r\n*@return{{startPoint:PointType,endPoint:PointType}}\r\n*/\r\n\r\n},{\r\n key:'getFgTranslationCoordinates_',\r\n value:function getFgTranslationCoordinates_(){\r\n var _activationState_=this.activationState_,\r\n activationEvent=_activationState_.activationEvent,\r\n wasActivatedByPointer=_activationState_.wasActivatedByPointer;\r\n\r\n\r\n var startPoint=void 0;\r\n if(wasActivatedByPointer){\r\n startPoint=Object(__WEBPACK_IMPORTED_MODULE_3__util__[\"getNormalizedEventCoords\"])(\r\n/**@type{!Event}*/activationEvent,this.adapter_.getWindowPageOffset(),this.adapter_.computeBoundingRect());\r\n}else{\r\n startPoint={\r\n x:this.frame_.width/2,\r\n y:this.frame_.height/2\r\n};\r\n}\r\n//Center the element around the start point.\r\n startPoint={\r\n x:startPoint.x-this.initialSize_/2,\r\n y:startPoint.y-this.initialSize_/2\r\n};\r\n\r\n var endPoint={\r\n x:this.frame_.width/2-this.initialSize_/2,\r\n y:this.frame_.height/2-this.initialSize_/2\r\n};\r\n\r\n return{startPoint:startPoint,endPoint:endPoint};\r\n}\r\n\r\n/**@private*/\r\n\r\n},{\r\n key:'runDeactivationUXLogicIfReady_',\r\n value:function runDeactivationUXLogicIfReady_(){\r\n var _this11=this;\r\n\r\n//This method is called both when a pointing device is released,and when the activation animation ends.\r\n//The deactivation animation should only run after both of those occur.\r\n var FG_DEACTIVATION=MDCRippleFoundation.cssClasses.FG_DEACTIVATION;\r\n var _activationState_2=this.activationState_,\r\n hasDeactivationUXRun=_activationState_2.hasDeactivationUXRun,\r\n isActivated=_activationState_2.isActivated;\r\n\r\n var activationHasEnded=hasDeactivationUXRun||!isActivated;\r\n\r\n if(activationHasEnded&&this.activationAnimationHasEnded_){\r\n this.rmBoundedActivationClasses_();\r\n this.adapter_.addClass(FG_DEACTIVATION);\r\n this.fgDeactivationRemovalTimer_=setTimeout(function(){\r\n _this11.adapter_.removeClass(FG_DEACTIVATION);\r\n},__WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"/*numbers*/].FG_DEACTIVATION_MS);\r\n}\r\n}\r\n\r\n/**@private*/\r\n\r\n},{\r\n key:'rmBoundedActivationClasses_',\r\n value:function rmBoundedActivationClasses_(){\r\n var FG_ACTIVATION=MDCRippleFoundation.cssClasses.FG_ACTIVATION;\r\n\r\n this.adapter_.removeClass(FG_ACTIVATION);\r\n this.activationAnimationHasEnded_=false;\r\n this.adapter_.computeBoundingRect();\r\n}\r\n},{\r\n key:'resetActivationState_',\r\n value:function resetActivationState_(){\r\n var _this12=this;\r\n\r\n this.previousActivationEvent_=this.activationState_.activationEvent;\r\n this.activationState_=this.defaultActivationState_();\r\n//Touch devices may fire additional events for the same interaction within a short time.\r\n//Store the previous event until it's safe to assume that subsequent events are for new interactions.\r\n setTimeout(function(){\r\n return _this12.previousActivationEvent_=undefined;\r\n},MDCRippleFoundation.numbers.TAP_DELAY_MS);\r\n}\r\n\r\n/**\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'deactivate_',\r\n value:function deactivate_(){\r\n var _this13=this;\r\n\r\n var activationState=this.activationState_;\r\n//This can happen in scenarios such as when you have a keyup event that blurs the element.\r\n if(!activationState.isActivated){\r\n return;\r\n}\r\n\r\n var state=/**@type{!ActivationStateType}*/_extends({},activationState);\r\n\r\n if(activationState.isProgrammatic){\r\n requestAnimationFrame(function(){\r\n return _this13.animateDeactivation_(state);\r\n});\r\n this.resetActivationState_();\r\n}else{\r\n this.deregisterDeactivationHandlers_();\r\n requestAnimationFrame(function(){\r\n _this13.activationState_.hasDeactivationUXRun=true;\r\n _this13.animateDeactivation_(state);\r\n _this13.resetActivationState_();\r\n});\r\n}\r\n}\r\n},{\r\n key:'deactivate',\r\n value:function deactivate(){\r\n this.deactivate_();\r\n}\r\n\r\n/**\r\n*@param{!ActivationStateType}options\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'animateDeactivation_',\r\n value:function animateDeactivation_(_ref){\r\n var wasActivatedByPointer=_ref.wasActivatedByPointer,\r\n wasElementMadeActive=_ref.wasElementMadeActive;\r\n\r\n if(wasActivatedByPointer||wasElementMadeActive){\r\n this.runDeactivationUXLogicIfReady_();\r\n}\r\n}\r\n},{\r\n key:'layout',\r\n value:function layout(){\r\n var _this14=this;\r\n\r\n if(this.layoutFrame_){\r\n cancelAnimationFrame(this.layoutFrame_);\r\n}\r\n this.layoutFrame_=requestAnimationFrame(function(){\r\n _this14.layoutInternal_();\r\n _this14.layoutFrame_=0;\r\n});\r\n}\r\n\r\n/**@private*/\r\n\r\n},{\r\n key:'layoutInternal_',\r\n value:function layoutInternal_(){\r\n var _this15=this;\r\n\r\n this.frame_=this.adapter_.computeBoundingRect();\r\n var maxDim=Math.max(this.frame_.height,this.frame_.width);\r\n\r\n//Surface diameter is treated differently for unbounded vs.bounded ripples.\r\n//Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\r\n//to extend the hitbox,and the ripple is expected to meet the edges of the padded hitbox(which is typically\r\n//square).Bounded ripples,on the other hand,are fully expected to expand beyond the surface's longest diameter\r\n//(calculated based on the diagonal plus a constant padding),and are clipped at the surface's border via\r\n//`overflow:hidden`.\r\n var getBoundedRadius=function getBoundedRadius(){\r\n var hypotenuse=Math.sqrt(Math.pow(_this15.frame_.width,2)+Math.pow(_this15.frame_.height,2));\r\n return hypotenuse+MDCRippleFoundation.numbers.PADDING;\r\n};\r\n\r\n this.maxRadius_=this.adapter_.isUnbounded()?maxDim:getBoundedRadius();\r\n\r\n//Ripple is sized as a fraction of the largest dimension of the surface,then scales up using a CSS scale transform\r\n this.initialSize_=Math.floor(maxDim*MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\r\n this.fgScale_=this.maxRadius_/this.initialSize_;\r\n\r\n this.updateLayoutCssVars_();\r\n}\r\n\r\n/**@private*/\r\n\r\n},{\r\n key:'updateLayoutCssVars_',\r\n value:function updateLayoutCssVars_(){\r\n var _MDCRippleFoundation$5=MDCRippleFoundation.strings,\r\n VAR_FG_SIZE=_MDCRippleFoundation$5.VAR_FG_SIZE,\r\n VAR_LEFT=_MDCRippleFoundation$5.VAR_LEFT,\r\n VAR_TOP=_MDCRippleFoundation$5.VAR_TOP,\r\n VAR_FG_SCALE=_MDCRippleFoundation$5.VAR_FG_SCALE;\r\n\r\n\r\n this.adapter_.updateCssVariable(VAR_FG_SIZE,this.initialSize_+'px');\r\n this.adapter_.updateCssVariable(VAR_FG_SCALE,this.fgScale_);\r\n\r\n if(this.adapter_.isUnbounded()){\r\n this.unboundedCoords_={\r\n left:Math.round(this.frame_.width/2-this.initialSize_/2),\r\n top:Math.round(this.frame_.height/2-this.initialSize_/2)\r\n};\r\n\r\n this.adapter_.updateCssVariable(VAR_LEFT,this.unboundedCoords_.left+'px');\r\n this.adapter_.updateCssVariable(VAR_TOP,this.unboundedCoords_.top+'px');\r\n}\r\n}\r\n\r\n/**@param{boolean}unbounded*/\r\n\r\n},{\r\n key:'setUnbounded',\r\n value:function setUnbounded(unbounded){\r\n var UNBOUNDED=MDCRippleFoundation.cssClasses.UNBOUNDED;\r\n\r\n if(unbounded){\r\n this.adapter_.addClass(UNBOUNDED);\r\n}else{\r\n this.adapter_.removeClass(UNBOUNDED);\r\n}\r\n}\r\n},{\r\n key:'handleFocus',\r\n value:function handleFocus(){\r\n var _this16=this;\r\n\r\n requestAnimationFrame(function(){\r\n return _this16.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);\r\n});\r\n}\r\n},{\r\n key:'handleBlur',\r\n value:function handleBlur(){\r\n var _this17=this;\r\n\r\n requestAnimationFrame(function(){\r\n return _this17.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);\r\n});\r\n}\r\n}]);\r\n\r\n return MDCRippleFoundation;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\"/*default*/]);\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCRippleFoundation);\r\n\r\n/***/}),\r\n\r\n/***/6:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"a\",function(){return cssClasses;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"c\",function(){return strings;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"b\",function(){return numbers;});\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\nvar cssClasses={\r\n//Ripple is a special case where the\"root\"component is really a\"mixin\"of sorts,\r\n//given that it's an'upgrade'to an existing component.That being said it is the root\r\n//CSS class that all other CSS classes derive from.\r\n ROOT:'mdc-ripple-upgraded',\r\n UNBOUNDED:'mdc-ripple-upgraded--unbounded',\r\n BG_FOCUSED:'mdc-ripple-upgraded--background-focused',\r\n FG_ACTIVATION:'mdc-ripple-upgraded--foreground-activation',\r\n FG_DEACTIVATION:'mdc-ripple-upgraded--foreground-deactivation'\r\n};\r\n\r\nvar strings={\r\n VAR_LEFT:'--mdc-ripple-left',\r\n VAR_TOP:'--mdc-ripple-top',\r\n VAR_FG_SIZE:'--mdc-ripple-fg-size',\r\n VAR_FG_SCALE:'--mdc-ripple-fg-scale',\r\n VAR_FG_TRANSLATE_START:'--mdc-ripple-fg-translate-start',\r\n VAR_FG_TRANSLATE_END:'--mdc-ripple-fg-translate-end'\r\n};\r\n\r\nvar numbers={\r\n PADDING:10,\r\n INITIAL_ORIGIN_SCALE:0.6,\r\n DEACTIVATION_TIMEOUT_MS:225,//Corresponds to $mdc-ripple-translate-duration(i.e.activation animation duration)\r\n FG_DEACTIVATION_MS:150,//Corresponds to $mdc-ripple-fade-out-duration(i.e.deactivation animation duration)\r\n TAP_DELAY_MS:300};\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/61:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__=__webpack_require__(0);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(84);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__constants__=__webpack_require__(158);\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCFoundation<!MDCTextFieldHelperTextAdapter>}\r\n*@final\r\n*/\r\n\r\nvar MDCTextFieldHelperTextFoundation=function(_MDCFoundation){\r\n _inherits(MDCTextFieldHelperTextFoundation,_MDCFoundation);\r\n\r\n _createClass(MDCTextFieldHelperTextFoundation,null,[{\r\n key:'cssClasses',\r\n\r\n/**@return enum{string}*/\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/];\r\n}\r\n\r\n/**@return enum{string}*/\r\n\r\n},{\r\n key:'strings',\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"/*strings*/];\r\n}\r\n\r\n/**\r\n*{@see MDCTextFieldHelperTextAdapter}for typing information on parameters and return\r\n*types.\r\n*@return{!MDCTextFieldHelperTextAdapter}\r\n*/\r\n\r\n},{\r\n key:'defaultAdapter',\r\n get:function get(){\r\n return(/**@type{!MDCTextFieldHelperTextAdapter}*/{\r\n addClass:function addClass(){},\r\n removeClass:function removeClass(){},\r\n hasClass:function hasClass(){},\r\n setAttr:function setAttr(){},\r\n removeAttr:function removeAttr(){},\r\n setContent:function setContent(){}\r\n}\r\n);\r\n}\r\n\r\n/**\r\n*@param{!MDCTextFieldHelperTextAdapter}adapter\r\n*/\r\n\r\n}]);\r\n\r\n function MDCTextFieldHelperTextFoundation(adapter){\r\n _classCallCheck(this,MDCTextFieldHelperTextFoundation);\r\n\r\n return _possibleConstructorReturn(this,(MDCTextFieldHelperTextFoundation.__proto__||Object.getPrototypeOf(MDCTextFieldHelperTextFoundation)).call(this,_extends(MDCTextFieldHelperTextFoundation.defaultAdapter,adapter)));\r\n}\r\n\r\n/**\r\n*Sets the content of the helper text field.\r\n*@param{string}content\r\n*/\r\n\r\n\r\n _createClass(MDCTextFieldHelperTextFoundation,[{\r\n key:'setContent',\r\n value:function setContent(content){\r\n this.adapter_.setContent(content);\r\n}\r\n\r\n/**@param{boolean}isPersistent Sets the persistency of the helper text.*/\r\n\r\n},{\r\n key:'setPersistent',\r\n value:function setPersistent(isPersistent){\r\n if(isPersistent){\r\n this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/].HELPER_TEXT_PERSISTENT);\r\n}else{\r\n this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/].HELPER_TEXT_PERSISTENT);\r\n}\r\n}\r\n\r\n/**\r\n*@param{boolean}isValidation True to make the helper text act as an\r\n*error validation message.\r\n*/\r\n\r\n},{\r\n key:'setValidation',\r\n value:function setValidation(isValidation){\r\n if(isValidation){\r\n this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/].HELPER_TEXT_VALIDATION_MSG);\r\n}else{\r\n this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/].HELPER_TEXT_VALIDATION_MSG);\r\n}\r\n}\r\n\r\n/**Makes the helper text visible to the screen reader.*/\r\n\r\n},{\r\n key:'showToScreenReader',\r\n value:function showToScreenReader(){\r\n this.adapter_.removeAttr(__WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"/*strings*/].ARIA_HIDDEN);\r\n}\r\n\r\n/**\r\n*Sets the validity of the helper text based on the input validity.\r\n*@param{boolean}inputIsValid\r\n*/\r\n\r\n},{\r\n key:'setValidity',\r\n value:function setValidity(inputIsValid){\r\n var helperTextIsPersistent=this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/].HELPER_TEXT_PERSISTENT);\r\n var helperTextIsValidationMsg=this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*cssClasses*/].HELPER_TEXT_VALIDATION_MSG);\r\n var validationMsgNeedsDisplay=helperTextIsValidationMsg&&!inputIsValid;\r\n\r\n if(validationMsgNeedsDisplay){\r\n this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"/*strings*/].ROLE,'alert');\r\n}else{\r\n this.adapter_.removeAttr(__WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"/*strings*/].ROLE);\r\n}\r\n\r\n if(!helperTextIsPersistent&&!validationMsgNeedsDisplay){\r\n this.hide_();\r\n}\r\n}\r\n\r\n/**\r\n*Hides the help text from screen readers.\r\n*@private\r\n*/\r\n\r\n},{\r\n key:'hide_',\r\n value:function hide_(){\r\n this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__[\"b\"/*strings*/].ARIA_HIDDEN,'true');\r\n}\r\n}]);\r\n\r\n return MDCTextFieldHelperTextFoundation;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\"/*default*/]);\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCTextFieldHelperTextFoundation);\r\n\r\n/***/}),\r\n\r\n/***/62:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__=__webpack_require__(0);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__adapter__=__webpack_require__(85);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_2__constants__=__webpack_require__(159);\r\nvar _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\r\n\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\nfunction _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised-super()hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}\r\n\r\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function,not\"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCFoundation<!MDCTextFieldIconAdapter>}\r\n*@final\r\n*/\r\n\r\nvar MDCTextFieldIconFoundation=function(_MDCFoundation){\r\n _inherits(MDCTextFieldIconFoundation,_MDCFoundation);\r\n\r\n _createClass(MDCTextFieldIconFoundation,null,[{\r\n key:'strings',\r\n\r\n/**@return enum{string}*/\r\n get:function get(){\r\n return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*strings*/];\r\n}\r\n\r\n/**\r\n*{@see MDCTextFieldIconAdapter}for typing information on parameters and return\r\n*types.\r\n*@return{!MDCTextFieldIconAdapter}\r\n*/\r\n\r\n},{\r\n key:'defaultAdapter',\r\n get:function get(){\r\n return(/**@type{!MDCTextFieldIconAdapter}*/{\r\n getAttr:function getAttr(){},\r\n setAttr:function setAttr(){},\r\n removeAttr:function removeAttr(){},\r\n setContent:function setContent(){},\r\n registerInteractionHandler:function registerInteractionHandler(){},\r\n deregisterInteractionHandler:function deregisterInteractionHandler(){},\r\n notifyIconAction:function notifyIconAction(){}\r\n}\r\n);\r\n}\r\n\r\n/**\r\n*@param{!MDCTextFieldIconAdapter}adapter\r\n*/\r\n\r\n}]);\r\n\r\n function MDCTextFieldIconFoundation(adapter){\r\n _classCallCheck(this,MDCTextFieldIconFoundation);\r\n\r\n/**@private{string?}*/\r\n var _this=_possibleConstructorReturn(this,(MDCTextFieldIconFoundation.__proto__||Object.getPrototypeOf(MDCTextFieldIconFoundation)).call(this,_extends(MDCTextFieldIconFoundation.defaultAdapter,adapter)));\r\n\r\n _this.savedTabIndex_=null;\r\n\r\n/**@private{function(!Event):undefined}*/\r\n _this.interactionHandler_=function(evt){\r\n return _this.handleInteraction(evt);\r\n};\r\n return _this;\r\n}\r\n\r\n _createClass(MDCTextFieldIconFoundation,[{\r\n key:'init',\r\n value:function init(){\r\n var _this2=this;\r\n\r\n this.savedTabIndex_=this.adapter_.getAttr('tabindex');\r\n\r\n['click','keydown'].forEach(function(evtType){\r\n _this2.adapter_.registerInteractionHandler(evtType,_this2.interactionHandler_);\r\n});\r\n}\r\n},{\r\n key:'destroy',\r\n value:function destroy(){\r\n var _this3=this;\r\n\r\n['click','keydown'].forEach(function(evtType){\r\n _this3.adapter_.deregisterInteractionHandler(evtType,_this3.interactionHandler_);\r\n});\r\n}\r\n\r\n/**@param{boolean}disabled*/\r\n\r\n},{\r\n key:'setDisabled',\r\n value:function setDisabled(disabled){\r\n if(!this.savedTabIndex_){\r\n return;\r\n}\r\n\r\n if(disabled){\r\n this.adapter_.setAttr('tabindex','-1');\r\n this.adapter_.removeAttr('role');\r\n}else{\r\n this.adapter_.setAttr('tabindex',this.savedTabIndex_);\r\n this.adapter_.setAttr('role',__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"/*strings*/].ICON_ROLE);\r\n}\r\n}\r\n\r\n/**@param{string}label*/\r\n\r\n},{\r\n key:'setAriaLabel',\r\n value:function setAriaLabel(label){\r\n this.adapter_.setAttr('aria-label',label);\r\n}\r\n\r\n/**@param{string}content*/\r\n\r\n},{\r\n key:'setContent',\r\n value:function setContent(content){\r\n this.adapter_.setContent(content);\r\n}\r\n\r\n/**\r\n*Handles an interaction event\r\n*@param{!Event}evt\r\n*/\r\n\r\n},{\r\n key:'handleInteraction',\r\n value:function handleInteraction(evt){\r\n if(evt.type==='click'||evt.key==='Enter'||evt.keyCode===13){\r\n this.adapter_.notifyIconAction();\r\n}\r\n}\r\n}]);\r\n\r\n return MDCTextFieldIconFoundation;\r\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\"/*default*/]);\r\n\r\n/*harmony default export*/__webpack_exports__[\"a\"]=(MDCTextFieldIconFoundation);\r\n\r\n/***/}),\r\n\r\n/***/82:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"c\",function(){return cssClasses;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"e\",function(){return strings;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"d\",function(){return numbers;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"b\",function(){return VALIDATION_ATTR_WHITELIST;});\r\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"a\",function(){return ALWAYS_FLOAT_TYPES;});\r\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**@enum{string}*/\r\nvar strings={\r\n ARIA_CONTROLS:'aria-controls',\r\n INPUT_SELECTOR:'.mdc-text-field__input',\r\n LABEL_SELECTOR:'.mdc-floating-label',\r\n ICON_SELECTOR:'.mdc-text-field__icon',\r\n OUTLINE_SELECTOR:'.mdc-notched-outline',\r\n LINE_RIPPLE_SELECTOR:'.mdc-line-ripple'\r\n};\r\n\r\n/**@enum{string}*/\r\nvar cssClasses={\r\n ROOT:'mdc-text-field',\r\n DISABLED:'mdc-text-field--disabled',\r\n DENSE:'mdc-text-field--dense',\r\n FOCUSED:'mdc-text-field--focused',\r\n INVALID:'mdc-text-field--invalid',\r\n TEXTAREA:'mdc-text-field--textarea',\r\n OUTLINED:'mdc-text-field--outlined',\r\n WITH_LEADING_ICON:'mdc-text-field--with-leading-icon'\r\n};\r\n\r\n/**@enum{number}*/\r\nvar numbers={\r\n LABEL_SCALE:0.75,\r\n DENSE_LABEL_SCALE:0.923\r\n};\r\n\r\n//whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\r\n//under section:`Validation-related attributes`\r\nvar VALIDATION_ATTR_WHITELIST=['pattern','min','max','required','step','minlength','maxlength'];\r\n\r\n//Label should always float for these types as they show some UI even if value is empty.\r\nvar ALWAYS_FLOAT_TYPES=['color','date','datetime-local','month','range','time','week'];\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/83:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\n/*unused harmony export MDCTextFieldAdapter*/\r\n/*unused harmony export NativeInputType*/\r\n/*unused harmony export FoundationMapType*/\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_0__helper_text_foundation__=__webpack_require__(61);\r\n/*harmony import*/var __WEBPACK_IMPORTED_MODULE_1__icon_foundation__=__webpack_require__(62);\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/*eslint-disable no-unused-vars*/\r\n\r\n\r\n\r\n/*eslint no-unused-vars:[2,{\"args\":\"none\"}]*/\r\n\r\n/**\r\n*@typedef{{\r\n*value:string,\r\n*disabled:boolean,\r\n*badInput:boolean,\r\n*validity:{\r\n*badInput:boolean,\r\n*valid:boolean,\r\n*},\r\n*}}\r\n*/\r\nvar NativeInputType=void 0;\r\n\r\n/**\r\n*@typedef{{\r\n*helperText:(!MDCTextFieldHelperTextFoundation|undefined),\r\n*leadingIcon:(!MDCTextFieldIconFoundation|undefined),\r\n*trailingIcon:(!MDCTextFieldIconFoundation|undefined),\r\n*}}\r\n*/\r\nvar FoundationMapType=void 0;\r\n\r\n/**\r\n*Adapter for MDC Text Field.\r\n*\r\n*Defines the shape of the adapter expected by the foundation.Implement this\r\n*adapter to integrate the Text Field into your framework.See\r\n*https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\r\n*for more information.\r\n*\r\n*@record\r\n*/\r\n\r\nvar MDCTextFieldAdapter=function(){\r\n function MDCTextFieldAdapter(){\r\n _classCallCheck(this,MDCTextFieldAdapter);\r\n}\r\n\r\n _createClass(MDCTextFieldAdapter,[{\r\n key:'addClass',\r\n\r\n/**\r\n*Adds a class to the root Element.\r\n*@param{string}className\r\n*/\r\n value:function addClass(className){}\r\n\r\n/**\r\n*Removes a class from the root Element.\r\n*@param{string}className\r\n*/\r\n\r\n},{\r\n key:'removeClass',\r\n value:function removeClass(className){}\r\n\r\n/**\r\n*Returns true if the root element contains the given class name.\r\n*@param{string}className\r\n*@return{boolean}\r\n*/\r\n\r\n},{\r\n key:'hasClass',\r\n value:function hasClass(className){}\r\n\r\n/**\r\n*Registers an event handler on the root element for a given event.\r\n*@param{string}type\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:'registerTextFieldInteractionHandler',\r\n value:function registerTextFieldInteractionHandler(type,handler){}\r\n\r\n/**\r\n*Deregisters an event handler on the root element for a given event.\r\n*@param{string}type\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:'deregisterTextFieldInteractionHandler',\r\n value:function deregisterTextFieldInteractionHandler(type,handler){}\r\n\r\n/**\r\n*Registers an event listener on the native input element for a given event.\r\n*@param{string}evtType\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:'registerInputInteractionHandler',\r\n value:function registerInputInteractionHandler(evtType,handler){}\r\n\r\n/**\r\n*Deregisters an event listener on the native input element for a given event.\r\n*@param{string}evtType\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:'deregisterInputInteractionHandler',\r\n value:function deregisterInputInteractionHandler(evtType,handler){}\r\n\r\n/**\r\n*Registers a validation attribute change listener on the input element.\r\n*Handler accepts list of attribute names.\r\n*@param{function(!Array<string>):undefined}handler\r\n*@return{!MutationObserver}\r\n*/\r\n\r\n},{\r\n key:'registerValidationAttributeChangeHandler',\r\n value:function registerValidationAttributeChangeHandler(handler){}\r\n\r\n/**\r\n*Disconnects a validation attribute observer on the input element.\r\n*@param{!MutationObserver}observer\r\n*/\r\n\r\n},{\r\n key:'deregisterValidationAttributeChangeHandler',\r\n value:function deregisterValidationAttributeChangeHandler(observer){}\r\n\r\n/**\r\n*Returns an object representing the native text input element,with a\r\n*similar API shape.The object returned should include the value,disabled\r\n*and badInput properties,as well as the checkValidity()function.We never\r\n*alter the value within our code,however we do update the disabled\r\n*property,so if you choose to duck-type the return value for this method\r\n*in your implementation it's important to keep this in mind.Also note that\r\n*this method can return null,which the foundation will handle gracefully.\r\n*@return{?Element|?NativeInputType}\r\n*/\r\n\r\n},{\r\n key:'getNativeInput',\r\n value:function getNativeInput(){}\r\n\r\n/**\r\n*Returns true if the textfield is focused.\r\n*We achieve this via`document.activeElement===this.root_`.\r\n*@return{boolean}\r\n*/\r\n\r\n},{\r\n key:'isFocused',\r\n value:function isFocused(){}\r\n\r\n/**\r\n*Activates the line ripple.\r\n*/\r\n\r\n},{\r\n key:'activateLineRipple',\r\n value:function activateLineRipple(){}\r\n\r\n/**\r\n*Deactivates the line ripple.\r\n*/\r\n\r\n},{\r\n key:'deactivateLineRipple',\r\n value:function deactivateLineRipple(){}\r\n\r\n/**\r\n*Sets the transform origin of the line ripple.\r\n*@param{number}normalizedX\r\n*/\r\n\r\n},{\r\n key:'setLineRippleTransformOrigin',\r\n value:function setLineRippleTransformOrigin(normalizedX){}\r\n\r\n/**\r\n*Only implement if label exists.\r\n*Shakes label if shouldShake is true.\r\n*@param{boolean}shouldShake\r\n*/\r\n\r\n},{\r\n key:'shakeLabel',\r\n value:function shakeLabel(shouldShake){}\r\n\r\n/**\r\n*Only implement if label exists.\r\n*Floats the label above the input element if shouldFloat is true.\r\n*@param{boolean}shouldFloat\r\n*/\r\n\r\n},{\r\n key:'floatLabel',\r\n value:function floatLabel(shouldFloat){}\r\n\r\n/**\r\n*Returns true if label element exists,false if it doesn't.\r\n*@return{boolean}\r\n*/\r\n\r\n},{\r\n key:'hasLabel',\r\n value:function hasLabel(){}\r\n\r\n/**\r\n*Only implement if label exists.\r\n*Returns width of label in pixels.\r\n*@return{number}\r\n*/\r\n\r\n},{\r\n key:'getLabelWidth',\r\n value:function getLabelWidth(){}\r\n\r\n/**\r\n*Returns true if outline element exists,false if it doesn't.\r\n*@return{boolean}\r\n*/\r\n\r\n},{\r\n key:'hasOutline',\r\n value:function hasOutline(){}\r\n\r\n/**\r\n*Only implement if outline element exists.\r\n*@param{number}labelWidth\r\n*/\r\n\r\n},{\r\n key:'notchOutline',\r\n value:function notchOutline(labelWidth){}\r\n\r\n/**\r\n*Only implement if outline element exists.\r\n*Closes notch in outline element.\r\n*/\r\n\r\n},{\r\n key:'closeOutline',\r\n value:function closeOutline(){}\r\n}]);\r\n\r\n return MDCTextFieldAdapter;\r\n}();\r\n\r\n\r\n\r\n/***/}),\r\n\r\n/***/84:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/*eslint no-unused-vars:[2,{\"args\":\"none\"}]*/\r\n\r\n/**\r\n*Adapter for MDC Text Field Helper Text.\r\n*\r\n*Defines the shape of the adapter expected by the foundation.Implement this\r\n*adapter to integrate the TextField helper text into your framework.See\r\n*https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\r\n*for more information.\r\n*\r\n*@record\r\n*/\r\nvar MDCTextFieldHelperTextAdapter=function(){\r\n function MDCTextFieldHelperTextAdapter(){\r\n _classCallCheck(this,MDCTextFieldHelperTextAdapter);\r\n}\r\n\r\n _createClass(MDCTextFieldHelperTextAdapter,[{\r\n key:\"addClass\",\r\n\r\n/**\r\n*Adds a class to the helper text element.\r\n*@param{string}className\r\n*/\r\n value:function addClass(className){}\r\n\r\n/**\r\n*Removes a class from the helper text element.\r\n*@param{string}className\r\n*/\r\n\r\n},{\r\n key:\"removeClass\",\r\n value:function removeClass(className){}\r\n\r\n/**\r\n*Returns whether or not the helper text element contains the given class.\r\n*@param{string}className\r\n*@return{boolean}\r\n*/\r\n\r\n},{\r\n key:\"hasClass\",\r\n value:function hasClass(className){}\r\n\r\n/**\r\n*Sets an attribute with a given value on the helper text element.\r\n*@param{string}attr\r\n*@param{string}value\r\n*/\r\n\r\n},{\r\n key:\"setAttr\",\r\n value:function setAttr(attr,value){}\r\n\r\n/**\r\n*Removes an attribute from the helper text element.\r\n*@param{string}attr\r\n*/\r\n\r\n},{\r\n key:\"removeAttr\",\r\n value:function removeAttr(attr){}\r\n\r\n/**\r\n*Sets the text content for the helper text element.\r\n*@param{string}content\r\n*/\r\n\r\n},{\r\n key:\"setContent\",\r\n value:function setContent(content){}\r\n}]);\r\n\r\n return MDCTextFieldHelperTextAdapter;\r\n}();\r\n\r\n/*unused harmony default export*/var _unused_webpack_default_export=(MDCTextFieldHelperTextAdapter);\r\n\r\n/***/}),\r\n\r\n/***/85:\r\n/***/(function(module,__webpack_exports__,__webpack_require__){\r\n\r\n\"use strict\";\r\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();\r\n\r\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\r\n\r\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/*eslint no-unused-vars:[2,{\"args\":\"none\"}]*/\r\n\r\n/**\r\n*Adapter for MDC Text Field Icon.\r\n*\r\n*Defines the shape of the adapter expected by the foundation.Implement this\r\n*adapter to integrate the text field icon into your framework.See\r\n*https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\r\n*for more information.\r\n*\r\n*@record\r\n*/\r\nvar MDCTextFieldIconAdapter=function(){\r\n function MDCTextFieldIconAdapter(){\r\n _classCallCheck(this,MDCTextFieldIconAdapter);\r\n}\r\n\r\n _createClass(MDCTextFieldIconAdapter,[{\r\n key:\"getAttr\",\r\n\r\n/**\r\n*Gets the value of an attribute on the icon element.\r\n*@param{string}attr\r\n*@return{string}\r\n*/\r\n value:function getAttr(attr){}\r\n\r\n/**\r\n*Sets an attribute on the icon element.\r\n*@param{string}attr\r\n*@param{string}value\r\n*/\r\n\r\n},{\r\n key:\"setAttr\",\r\n value:function setAttr(attr,value){}\r\n\r\n/**\r\n*Removes an attribute from the icon element.\r\n*@param{string}attr\r\n*/\r\n\r\n},{\r\n key:\"removeAttr\",\r\n value:function removeAttr(attr){}\r\n\r\n/**\r\n*Sets the text content of the icon element.\r\n*@param{string}content\r\n*/\r\n\r\n},{\r\n key:\"setContent\",\r\n value:function setContent(content){}\r\n\r\n/**\r\n*Registers an event listener on the icon element for a given event.\r\n*@param{string}evtType\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"registerInteractionHandler\",\r\n value:function registerInteractionHandler(evtType,handler){}\r\n\r\n/**\r\n*Deregisters an event listener on the icon element for a given event.\r\n*@param{string}evtType\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n\r\n},{\r\n key:\"deregisterInteractionHandler\",\r\n value:function deregisterInteractionHandler(evtType,handler){}\r\n\r\n/**\r\n*Emits a custom event\"MDCTextField:icon\"denoting a user has clicked the icon.\r\n*/\r\n\r\n},{\r\n key:\"notifyIconAction\",\r\n value:function notifyIconAction(){}\r\n}]);\r\n\r\n return MDCTextFieldIconAdapter;\r\n}();\r\n\r\n/*unused harmony default export*/var _unused_webpack_default_export=(MDCTextFieldIconAdapter);\r\n\r\n/***/})\r\n\r\n/******/});\r\n});\r\n//#sourceMappingURL=mdc.textfield.js.map//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,\n//#sourceURL=webpack-internal:///./node_modules/@material/textfield/dist/mdc.textfield.js\n");/***/}),/***/"./node_modules/@material/textfield/helper-text/adapter.js":/*!*****************************************************************!*\;!***./node_modules/@material/textfield/helper-text/adapter.js***!;\*****************************************************************//*!exports provided:default*//***/(function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/*eslint no-unused-vars:[2,{\"args\":\"none\"}]*/\r\n\r\n/**\r\n*Adapter for MDC Text Field Helper Text.\r\n*\r\n*Defines the shape of the adapter expected by the foundation.Implement this\r\n*adapter to integrate the TextField helper text into your framework.See\r\n*https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\r\n*for more information.\r\n*\r\n*@record\r\n*/\r\nclass MDCTextFieldHelperTextAdapter{\r\n/**\r\n*Adds a class to the helper text element.\r\n*@param{string}className\r\n*/\r\n addClass(className){}\r\n\r\n/**\r\n*Removes a class from the helper text element.\r\n*@param{string}className\r\n*/\r\n removeClass(className){}\r\n\r\n/**\r\n*Returns whether or not the helper text element contains the given class.\r\n*@param{string}className\r\n*@return{boolean}\r\n*/\r\n hasClass(className){}\r\n\r\n/**\r\n*Sets an attribute with a given value on the helper text element.\r\n*@param{string}attr\r\n*@param{string}value\r\n*/\r\n setAttr(attr,value){}\r\n\r\n/**\r\n*Removes an attribute from the helper text element.\r\n*@param{string}attr\r\n*/\r\n removeAttr(attr){}\r\n\r\n/**\r\n*Sets the text content for the helper text element.\r\n*@param{string}content\r\n*/\r\n setContent(content){}\r\n}\r\n\r\n/*harmony default export*/__webpack_exports__[\"default\"]=(MDCTextFieldHelperTextAdapter);\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RleHRmaWVsZC9oZWxwZXItdGV4dC9hZGFwdGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC90ZXh0ZmllbGQvaGVscGVyLXRleHQvYWRhcHRlci5qcz9jYjdkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLlxyXG4gKlxyXG4gKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XHJcbiAqIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcclxuICogaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xyXG4gKiB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXHJcbiAqIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xyXG4gKiBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxyXG4gKlxyXG4gKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxyXG4gKiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cclxuICpcclxuICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxyXG4gKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcclxuICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXHJcbiAqIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcclxuICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcclxuICogT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxyXG4gKiBUSEUgU09GVFdBUkUuXHJcbiAqL1xyXG5cclxuLyogZXNsaW50IG5vLXVudXNlZC12YXJzOiBbMiwge1wiYXJnc1wiOiBcIm5vbmVcIn1dICovXHJcblxyXG4vKipcclxuICogQWRhcHRlciBmb3IgTURDIFRleHQgRmllbGQgSGVscGVyIFRleHQuXHJcbiAqXHJcbiAqIERlZmluZXMgdGhlIHNoYXBlIG9mIHRoZSBhZGFwdGVyIGV4cGVjdGVkIGJ5IHRoZSBmb3VuZGF0aW9uLiBJbXBsZW1lbnQgdGhpc1xyXG4gKiBhZGFwdGVyIHRvIGludGVncmF0ZSB0aGUgVGV4dEZpZWxkIGhlbHBlciB0ZXh0IGludG8geW91ciBmcmFtZXdvcmsuIFNlZVxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbWF0ZXJpYWwtY29tcG9uZW50cy9tYXRlcmlhbC1jb21wb25lbnRzLXdlYi9ibG9iL21hc3Rlci9kb2NzL2F1dGhvcmluZy1jb21wb25lbnRzLm1kXHJcbiAqIGZvciBtb3JlIGluZm9ybWF0aW9uLlxyXG4gKlxyXG4gKiBAcmVjb3JkXHJcbiAqL1xyXG5jbGFzcyBNRENUZXh0RmllbGRIZWxwZXJUZXh0QWRhcHRlciB7XHJcbiAgLyoqXHJcbiAgICogQWRkcyBhIGNsYXNzIHRvIHRoZSBoZWxwZXIgdGV4dCBlbGVtZW50LlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWVcclxuICAgKi9cclxuICBhZGRDbGFzcyhjbGFzc05hbWUpIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJlbW92ZXMgYSBjbGFzcyBmcm9tIHRoZSBoZWxwZXIgdGV4dCBlbGVtZW50LlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWVcclxuICAgKi9cclxuICByZW1vdmVDbGFzcyhjbGFzc05hbWUpIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJldHVybnMgd2hldGhlciBvciBub3QgdGhlIGhlbHBlciB0ZXh0IGVsZW1lbnQgY29udGFpbnMgdGhlIGdpdmVuIGNsYXNzLlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWVcclxuICAgKiBAcmV0dXJuIHtib29sZWFufVxyXG4gICAqL1xyXG4gIGhhc0NsYXNzKGNsYXNzTmFtZSkge31cclxuXHJcbiAgLyoqXHJcbiAgICogU2V0cyBhbiBhdHRyaWJ1dGUgd2l0aCBhIGdpdmVuIHZhbHVlIG9uIHRoZSBoZWxwZXIgdGV4dCBlbGVtZW50LlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBhdHRyXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXHJcbiAgICovXHJcbiAgc2V0QXR0cihhdHRyLCB2YWx1ZSkge31cclxuXHJcbiAgLyoqXHJcbiAgICogUmVtb3ZlcyBhbiBhdHRyaWJ1dGUgZnJvbSB0aGUgaGVscGVyIHRleHQgZWxlbWVudC5cclxuICAgKiBAcGFyYW0ge3N0cmluZ30gYXR0clxyXG4gICAqL1xyXG4gIHJlbW92ZUF0dHIoYXR0cikge31cclxuXHJcbiAgLyoqXHJcbiAgICogU2V0cyB0aGUgdGV4dCBjb250ZW50IGZvciB0aGUgaGVscGVyIHRleHQgZWxlbWVudC5cclxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29udGVudFxyXG4gICAqL1xyXG4gIHNldENvbnRlbnQoY29udGVudCkge31cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTURDVGV4dEZpZWxkSGVscGVyVGV4dEFkYXB0ZXI7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//#sourceURL=webpack-internal:///./node_modules/@material/textfield/helper-text/adapter.js\n");/***/}),/***/"./node_modules/@material/textfield/helper-text/constants.js":/*!*******************************************************************!*\;!***./node_modules/@material/textfield/helper-text/constants.js***!;\*******************************************************************//*!exports provided:strings,cssClasses*//***/(function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"strings\",function(){return strings;});\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"cssClasses\",function(){return cssClasses;});\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**@enum{string}*/\r\nconst strings={\r\n ARIA_HIDDEN:'aria-hidden',\r\n ROLE:'role',\r\n};\r\n\r\n/**@enum{string}*/\r\nconst cssClasses={\r\n HELPER_TEXT_PERSISTENT:'mdc-text-field-helper-text--persistent',\r\n HELPER_TEXT_VALIDATION_MSG:'mdc-text-field-helper-text--validation-msg',\r\n};\r\n\r\n\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RleHRmaWVsZC9oZWxwZXItdGV4dC9jb25zdGFudHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RleHRmaWVsZC9oZWxwZXItdGV4dC9jb25zdGFudHMuanM/Mzc2YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy5cclxuICpcclxuICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxyXG4gKiBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXHJcbiAqIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcclxuICogdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxyXG4gKiBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcclxuICogZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcclxuICpcclxuICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cclxuICogYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXHJcbiAqXHJcbiAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcclxuICogSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXHJcbiAqIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxyXG4gKiBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXHJcbiAqIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXHJcbiAqIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cclxuICogVEhFIFNPRlRXQVJFLlxyXG4gKi9cclxuXHJcbi8qKiBAZW51bSB7c3RyaW5nfSAqL1xyXG5jb25zdCBzdHJpbmdzID0ge1xyXG4gIEFSSUFfSElEREVOOiAnYXJpYS1oaWRkZW4nLFxyXG4gIFJPTEU6ICdyb2xlJyxcclxufTtcclxuXHJcbi8qKiBAZW51bSB7c3RyaW5nfSAqL1xyXG5jb25zdCBjc3NDbGFzc2VzID0ge1xyXG4gIEhFTFBFUl9URVhUX1BFUlNJU1RFTlQ6ICdtZGMtdGV4dC1maWVsZC1oZWxwZXItdGV4dC0tcGVyc2lzdGVudCcsXHJcbiAgSEVMUEVSX1RFWFRfVkFMSURBVElPTl9NU0c6ICdtZGMtdGV4dC1maWVsZC1oZWxwZXItdGV4dC0tdmFsaWRhdGlvbi1tc2cnLFxyXG59O1xyXG5cclxuZXhwb3J0IHtzdHJpbmdzLCBjc3NDbGFzc2VzfTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//#sourceURL=webpack-internal:///./node_modules/@material/textfield/helper-text/constants.js\n");/***/}),/***/"./node_modules/@material/textfield/helper-text/foundation.js":/*!********************************************************************!*\;!***./node_modules/@material/textfield/helper-text/foundation.js***!;\********************************************************************//*!exports provided:default*//***/(function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/*harmony import*/var _material_base_foundation__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(/*!@material/base/foundation*/\"./node_modules/@material/base/foundation.js\");\n/*harmony import*/var _adapter__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(/*!./adapter*/\"./node_modules/@material/textfield/helper-text/adapter.js\");\n/*harmony import*/var _constants__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(/*!./constants*/\"./node_modules/@material/textfield/helper-text/constants.js\");\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCFoundation<!MDCTextFieldHelperTextAdapter>}\r\n*@final\r\n*/\r\nclass MDCTextFieldHelperTextFoundation extends _material_base_foundation__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n/**@return enum{string}*/\r\n static get cssClasses(){\r\n return _constants__WEBPACK_IMPORTED_MODULE_2__[\"cssClasses\"];\r\n}\r\n\r\n/**@return enum{string}*/\r\n static get strings(){\r\n return _constants__WEBPACK_IMPORTED_MODULE_2__[\"strings\"];\r\n}\r\n\r\n/**\r\n*{@see MDCTextFieldHelperTextAdapter}for typing information on parameters and return\r\n*types.\r\n*@return{!MDCTextFieldHelperTextAdapter}\r\n*/\r\n static get defaultAdapter(){\r\n return/**@type{!MDCTextFieldHelperTextAdapter}*/({\r\n addClass:()=>{},\r\n removeClass:()=>{},\r\n hasClass:()=>{},\r\n setAttr:()=>{},\r\n removeAttr:()=>{},\r\n setContent:()=>{},\r\n});\r\n}\r\n\r\n/**\r\n*@param{!MDCTextFieldHelperTextAdapter}adapter\r\n*/\r\n constructor(adapter){\r\n super(Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter,adapter));\r\n}\r\n\r\n/**\r\n*Sets the content of the helper text field.\r\n*@param{string}content\r\n*/\r\n setContent(content){\r\n this.adapter_.setContent(content);\r\n}\r\n\r\n/**@param{boolean}isPersistent Sets the persistency of the helper text.*/\r\n setPersistent(isPersistent){\r\n if(isPersistent){\r\n this.adapter_.addClass(_constants__WEBPACK_IMPORTED_MODULE_2__[\"cssClasses\"].HELPER_TEXT_PERSISTENT);\r\n}else{\r\n this.adapter_.removeClass(_constants__WEBPACK_IMPORTED_MODULE_2__[\"cssClasses\"].HELPER_TEXT_PERSISTENT);\r\n}\r\n}\r\n\r\n/**\r\n*@param{boolean}isValidation True to make the helper text act as an\r\n*error validation message.\r\n*/\r\n setValidation(isValidation){\r\n if(isValidation){\r\n this.adapter_.addClass(_constants__WEBPACK_IMPORTED_MODULE_2__[\"cssClasses\"].HELPER_TEXT_VALIDATION_MSG);\r\n}else{\r\n this.adapter_.removeClass(_constants__WEBPACK_IMPORTED_MODULE_2__[\"cssClasses\"].HELPER_TEXT_VALIDATION_MSG);\r\n}\r\n}\r\n\r\n/**Makes the helper text visible to the screen reader.*/\r\n showToScreenReader(){\r\n this.adapter_.removeAttr(_constants__WEBPACK_IMPORTED_MODULE_2__[\"strings\"].ARIA_HIDDEN);\r\n}\r\n\r\n/**\r\n*Sets the validity of the helper text based on the input validity.\r\n*@param{boolean}inputIsValid\r\n*/\r\n setValidity(inputIsValid){\r\n const helperTextIsPersistent=this.adapter_.hasClass(_constants__WEBPACK_IMPORTED_MODULE_2__[\"cssClasses\"].HELPER_TEXT_PERSISTENT);\r\n const helperTextIsValidationMsg=this.adapter_.hasClass(_constants__WEBPACK_IMPORTED_MODULE_2__[\"cssClasses\"].HELPER_TEXT_VALIDATION_MSG);\r\n const validationMsgNeedsDisplay=helperTextIsValidationMsg&&!inputIsValid;\r\n\r\n if(validationMsgNeedsDisplay){\r\n this.adapter_.setAttr(_constants__WEBPACK_IMPORTED_MODULE_2__[\"strings\"].ROLE,'alert');\r\n}else{\r\n this.adapter_.removeAttr(_constants__WEBPACK_IMPORTED_MODULE_2__[\"strings\"].ROLE);\r\n}\r\n\r\n if(!helperTextIsPersistent&&!validationMsgNeedsDisplay){\r\n this.hide_();\r\n}\r\n}\r\n\r\n/**\r\n*Hides the help text from screen readers.\r\n*@private\r\n*/\r\n hide_(){\r\n this.adapter_.setAttr(_constants__WEBPACK_IMPORTED_MODULE_2__[\"strings\"].ARIA_HIDDEN,'true');\r\n}\r\n}\r\n\r\n/*harmony default export*/__webpack_exports__[\"default\"]=(MDCTextFieldHelperTextFoundation);\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RleHRmaWVsZC9oZWxwZXItdGV4dC9mb3VuZGF0aW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC90ZXh0ZmllbGQvaGVscGVyLXRleHQvZm91bmRhdGlvbi5qcz9hYWM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLlxyXG4gKlxyXG4gKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XHJcbiAqIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcclxuICogaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xyXG4gKiB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXHJcbiAqIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xyXG4gKiBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxyXG4gKlxyXG4gKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxyXG4gKiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cclxuICpcclxuICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxyXG4gKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcclxuICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXHJcbiAqIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcclxuICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcclxuICogT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxyXG4gKiBUSEUgU09GVFdBUkUuXHJcbiAqL1xyXG5cclxuaW1wb3J0IE1EQ0ZvdW5kYXRpb24gZnJvbSAnQG1hdGVyaWFsL2Jhc2UvZm91bmRhdGlvbic7XHJcbmltcG9ydCBNRENUZXh0RmllbGRIZWxwZXJUZXh0QWRhcHRlciBmcm9tICcuL2FkYXB0ZXInO1xyXG5pbXBvcnQge2Nzc0NsYXNzZXMsIHN0cmluZ3N9IGZyb20gJy4vY29uc3RhbnRzJztcclxuXHJcblxyXG4vKipcclxuICogQGV4dGVuZHMge01EQ0ZvdW5kYXRpb248IU1EQ1RleHRGaWVsZEhlbHBlclRleHRBZGFwdGVyPn1cclxuICogQGZpbmFsXHJcbiAqL1xyXG5jbGFzcyBNRENUZXh0RmllbGRIZWxwZXJUZXh0Rm91bmRhdGlvbiBleHRlbmRzIE1EQ0ZvdW5kYXRpb24ge1xyXG4gIC8qKiBAcmV0dXJuIGVudW0ge3N0cmluZ30gKi9cclxuICBzdGF0aWMgZ2V0IGNzc0NsYXNzZXMoKSB7XHJcbiAgICByZXR1cm4gY3NzQ2xhc3NlcztcclxuICB9XHJcblxyXG4gIC8qKiBAcmV0dXJuIGVudW0ge3N0cmluZ30gKi9cclxuICBzdGF0aWMgZ2V0IHN0cmluZ3MoKSB7XHJcbiAgICByZXR1cm4gc3RyaW5ncztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIHtAc2VlIE1EQ1RleHRGaWVsZEhlbHBlclRleHRBZGFwdGVyfSBmb3IgdHlwaW5nIGluZm9ybWF0aW9uIG9uIHBhcmFtZXRlcnMgYW5kIHJldHVyblxyXG4gICAqIHR5cGVzLlxyXG4gICAqIEByZXR1cm4geyFNRENUZXh0RmllbGRIZWxwZXJUZXh0QWRhcHRlcn1cclxuICAgKi9cclxuICBzdGF0aWMgZ2V0IGRlZmF1bHRBZGFwdGVyKCkge1xyXG4gICAgcmV0dXJuIC8qKiBAdHlwZSB7IU1EQ1RleHRGaWVsZEhlbHBlclRleHRBZGFwdGVyfSAqLyAoe1xyXG4gICAgICBhZGRDbGFzczogKCkgPT4ge30sXHJcbiAgICAgIHJlbW92ZUNsYXNzOiAoKSA9PiB7fSxcclxuICAgICAgaGFzQ2xhc3M6ICgpID0+IHt9LFxyXG4gICAgICBzZXRBdHRyOiAoKSA9PiB7fSxcclxuICAgICAgcmVtb3ZlQXR0cjogKCkgPT4ge30sXHJcbiAgICAgIHNldENvbnRlbnQ6ICgpID0+IHt9LFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0geyFNRENUZXh0RmllbGRIZWxwZXJUZXh0QWRhcHRlcn0gYWRhcHRlclxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKGFkYXB0ZXIpIHtcclxuICAgIHN1cGVyKE9iamVjdC5hc3NpZ24oTURDVGV4dEZpZWxkSGVscGVyVGV4dEZvdW5kYXRpb24uZGVmYXVsdEFkYXB0ZXIsIGFkYXB0ZXIpKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNldHMgdGhlIGNvbnRlbnQgb2YgdGhlIGhlbHBlciB0ZXh0IGZpZWxkLlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb250ZW50XHJcbiAgICovXHJcbiAgc2V0Q29udGVudChjb250ZW50KSB7XHJcbiAgICB0aGlzLmFkYXB0ZXJfLnNldENvbnRlbnQoY29udGVudCk7XHJcbiAgfVxyXG5cclxuICAvKiogQHBhcmFtIHtib29sZWFufSBpc1BlcnNpc3RlbnQgU2V0cyB0aGUgcGVyc2lzdGVuY3kgb2YgdGhlIGhlbHBlciB0ZXh0LiAqL1xyXG4gIHNldFBlcnNpc3RlbnQoaXNQZXJzaXN0ZW50KSB7XHJcbiAgICBpZiAoaXNQZXJzaXN0ZW50KSB7XHJcbiAgICAgIHRoaXMuYWRhcHRlcl8uYWRkQ2xhc3MoY3NzQ2xhc3Nlcy5IRUxQRVJfVEVYVF9QRVJTSVNURU5UKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoY3NzQ2xhc3Nlcy5IRUxQRVJfVEVYVF9QRVJTSVNURU5UKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gaXNWYWxpZGF0aW9uIFRydWUgdG8gbWFrZSB0aGUgaGVscGVyIHRleHQgYWN0IGFzIGFuXHJcbiAgICogICBlcnJvciB2YWxpZGF0aW9uIG1lc3NhZ2UuXHJcbiAgICovXHJcbiAgc2V0VmFsaWRhdGlvbihpc1ZhbGlkYXRpb24pIHtcclxuICAgIGlmIChpc1ZhbGlkYXRpb24pIHtcclxuICAgICAgdGhpcy5hZGFwdGVyXy5hZGRDbGFzcyhjc3NDbGFzc2VzLkhFTFBFUl9URVhUX1ZBTElEQVRJT05fTVNHKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQ2xhc3MoY3NzQ2xhc3Nlcy5IRUxQRVJfVEVYVF9WQUxJREFUSU9OX01TRyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKiogTWFrZXMgdGhlIGhlbHBlciB0ZXh0IHZpc2libGUgdG8gdGhlIHNjcmVlbiByZWFkZXIuICovXHJcbiAgc2hvd1RvU2NyZWVuUmVhZGVyKCkge1xyXG4gICAgdGhpcy5hZGFwdGVyXy5yZW1vdmVBdHRyKHN0cmluZ3MuQVJJQV9ISURERU4pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2V0cyB0aGUgdmFsaWRpdHkgb2YgdGhlIGhlbHBlciB0ZXh0IGJhc2VkIG9uIHRoZSBpbnB1dCB2YWxpZGl0eS5cclxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGlucHV0SXNWYWxpZFxyXG4gICAqL1xyXG4gIHNldFZhbGlkaXR5KGlucHV0SXNWYWxpZCkge1xyXG4gICAgY29uc3QgaGVscGVyVGV4dElzUGVyc2lzdGVudCA9IHRoaXMuYWRhcHRlcl8uaGFzQ2xhc3MoY3NzQ2xhc3Nlcy5IRUxQRVJfVEVYVF9QRVJTSVNURU5UKTtcclxuICAgIGNvbnN0IGhlbHBlclRleHRJc1ZhbGlkYXRpb25Nc2cgPSB0aGlzLmFkYXB0ZXJfLmhhc0NsYXNzKGNzc0NsYXNzZXMuSEVMUEVSX1RFWFRfVkFMSURBVElPTl9NU0cpO1xyXG4gICAgY29uc3QgdmFsaWRhdGlvbk1zZ05lZWRzRGlzcGxheSA9IGhlbHBlclRleHRJc1ZhbGlkYXRpb25Nc2cgJiYgIWlucHV0SXNWYWxpZDtcclxuXHJcbiAgICBpZiAodmFsaWRhdGlvbk1zZ05lZWRzRGlzcGxheSkge1xyXG4gICAgICB0aGlzLmFkYXB0ZXJfLnNldEF0dHIoc3RyaW5ncy5ST0xFLCAnYWxlcnQnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuYWRhcHRlcl8ucmVtb3ZlQXR0cihzdHJpbmdzLlJPTEUpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICghaGVscGVyVGV4dElzUGVyc2lzdGVudCAmJiAhdmFsaWRhdGlvbk1zZ05lZWRzRGlzcGxheSkge1xyXG4gICAgICB0aGlzLmhpZGVfKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBIaWRlcyB0aGUgaGVscCB0ZXh0IGZyb20gc2NyZWVuIHJlYWRlcnMuXHJcbiAgICogQHByaXZhdGVcclxuICAgKi9cclxuICBoaWRlXygpIHtcclxuICAgIHRoaXMuYWRhcHRlcl8uc2V0QXR0cihzdHJpbmdzLkFSSUFfSElEREVOLCAndHJ1ZScpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTURDVGV4dEZpZWxkSGVscGVyVGV4dEZvdW5kYXRpb247XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//#sourceURL=webpack-internal:///./node_modules/@material/textfield/helper-text/foundation.js\n");/***/}),/***/"./node_modules/@material/textfield/helper-text/index.js":/*!***************************************************************!*\;!***./node_modules/@material/textfield/helper-text/index.js***!;\***************************************************************//*!exports provided:MDCTextFieldHelperText,MDCTextFieldHelperTextFoundation*//***/(function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCTextFieldHelperText\",function(){return MDCTextFieldHelperText;});\n/*harmony import*/var _material_base_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(/*!@material/base/component*/\"./node_modules/@material/base/component.js\");\n/*harmony import*/var _adapter__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(/*!./adapter*/\"./node_modules/@material/textfield/helper-text/adapter.js\");\n/*harmony import*/var _foundation__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(/*!./foundation*/\"./node_modules/@material/textfield/helper-text/foundation.js\");\n/*harmony reexport(safe)*/__webpack_require__.d(__webpack_exports__,\"MDCTextFieldHelperTextFoundation\",function(){return _foundation__WEBPACK_IMPORTED_MODULE_2__[\"default\"];});\n\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCComponent<!MDCTextFieldHelperTextFoundation>}\r\n*@final\r\n*/\r\nclass MDCTextFieldHelperText extends _material_base_component__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCTextFieldHelperText}\r\n*/\r\n static attachTo(root){\r\n return new MDCTextFieldHelperText(root);\r\n}\r\n\r\n/**\r\n*@return{!MDCTextFieldHelperTextFoundation}\r\n*/\r\n get foundation(){\r\n return this.foundation_;\r\n}\r\n\r\n/**\r\n*@return{!MDCTextFieldHelperTextFoundation}\r\n*/\r\n getDefaultFoundation(){\r\n return new _foundation__WEBPACK_IMPORTED_MODULE_2__[\"default\"](/**@type{!MDCTextFieldHelperTextAdapter}*/(Object.assign({\r\n addClass:(className)=>this.root_.classList.add(className),\r\n removeClass:(className)=>this.root_.classList.remove(className),\r\n hasClass:(className)=>this.root_.classList.contains(className),\r\n setAttr:(attr,value)=>this.root_.setAttribute(attr,value),\r\n removeAttr:(attr)=>this.root_.removeAttribute(attr),\r\n setContent:(content)=>{\r\n this.root_.textContent=content;\r\n},\r\n})));\r\n}\r\n}\r\n\r\n\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RleHRmaWVsZC9oZWxwZXItdGV4dC9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvdGV4dGZpZWxkL2hlbHBlci10ZXh0L2luZGV4LmpzPzRiNDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuXHJcbiAqXHJcbiAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcclxuICogb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxyXG4gKiBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXHJcbiAqIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcclxuICogY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXHJcbiAqIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XHJcbiAqXHJcbiAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXHJcbiAqIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxyXG4gKlxyXG4gKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXHJcbiAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxyXG4gKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcclxuICogQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxyXG4gKiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxyXG4gKiBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXHJcbiAqIFRIRSBTT0ZUV0FSRS5cclxuICovXHJcblxyXG5pbXBvcnQgTURDQ29tcG9uZW50IGZyb20gJ0BtYXRlcmlhbC9iYXNlL2NvbXBvbmVudCc7XHJcblxyXG5pbXBvcnQgTURDVGV4dEZpZWxkSGVscGVyVGV4dEFkYXB0ZXIgZnJvbSAnLi9hZGFwdGVyJztcclxuaW1wb3J0IE1EQ1RleHRGaWVsZEhlbHBlclRleHRGb3VuZGF0aW9uIGZyb20gJy4vZm91bmRhdGlvbic7XHJcblxyXG4vKipcclxuICogQGV4dGVuZHMge01EQ0NvbXBvbmVudDwhTURDVGV4dEZpZWxkSGVscGVyVGV4dEZvdW5kYXRpb24+fVxyXG4gKiBAZmluYWxcclxuICovXHJcbmNsYXNzIE1EQ1RleHRGaWVsZEhlbHBlclRleHQgZXh0ZW5kcyBNRENDb21wb25lbnQge1xyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7IUVsZW1lbnR9IHJvb3RcclxuICAgKiBAcmV0dXJuIHshTURDVGV4dEZpZWxkSGVscGVyVGV4dH1cclxuICAgKi9cclxuICBzdGF0aWMgYXR0YWNoVG8ocm9vdCkge1xyXG4gICAgcmV0dXJuIG5ldyBNRENUZXh0RmllbGRIZWxwZXJUZXh0KHJvb3QpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybiB7IU1EQ1RleHRGaWVsZEhlbHBlclRleHRGb3VuZGF0aW9ufVxyXG4gICAqL1xyXG4gIGdldCBmb3VuZGF0aW9uKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZm91bmRhdGlvbl87XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcmV0dXJuIHshTURDVGV4dEZpZWxkSGVscGVyVGV4dEZvdW5kYXRpb259XHJcbiAgICovXHJcbiAgZ2V0RGVmYXVsdEZvdW5kYXRpb24oKSB7XHJcbiAgICByZXR1cm4gbmV3IE1EQ1RleHRGaWVsZEhlbHBlclRleHRGb3VuZGF0aW9uKC8qKiBAdHlwZSB7IU1EQ1RleHRGaWVsZEhlbHBlclRleHRBZGFwdGVyfSAqLyAoT2JqZWN0LmFzc2lnbih7XHJcbiAgICAgIGFkZENsYXNzOiAoY2xhc3NOYW1lKSA9PiB0aGlzLnJvb3RfLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKSxcclxuICAgICAgcmVtb3ZlQ2xhc3M6IChjbGFzc05hbWUpID0+IHRoaXMucm9vdF8uY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpLFxyXG4gICAgICBoYXNDbGFzczogKGNsYXNzTmFtZSkgPT4gdGhpcy5yb290Xy5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKSxcclxuICAgICAgc2V0QXR0cjogKGF0dHIsIHZhbHVlKSA9PiB0aGlzLnJvb3RfLnNldEF0dHJpYnV0ZShhdHRyLCB2YWx1ZSksXHJcbiAgICAgIHJlbW92ZUF0dHI6IChhdHRyKSA9PiB0aGlzLnJvb3RfLnJlbW92ZUF0dHJpYnV0ZShhdHRyKSxcclxuICAgICAgc2V0Q29udGVudDogKGNvbnRlbnQpID0+IHtcclxuICAgICAgICB0aGlzLnJvb3RfLnRleHRDb250ZW50ID0gY29udGVudDtcclxuICAgICAgfSxcclxuICAgIH0pKSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQge01EQ1RleHRGaWVsZEhlbHBlclRleHQsIE1EQ1RleHRGaWVsZEhlbHBlclRleHRGb3VuZGF0aW9ufTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//#sourceURL=webpack-internal:///./node_modules/@material/textfield/helper-text/index.js\n");/***/}),/***/"./node_modules/@material/textfield/icon/adapter.js":/*!**********************************************************!*\;!***./node_modules/@material/textfield/icon/adapter.js***!;\**********************************************************//*!exports provided:default*//***/(function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/*eslint no-unused-vars:[2,{\"args\":\"none\"}]*/\r\n\r\n/**\r\n*Adapter for MDC Text Field Icon.\r\n*\r\n*Defines the shape of the adapter expected by the foundation.Implement this\r\n*adapter to integrate the text field icon into your framework.See\r\n*https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\r\n*for more information.\r\n*\r\n*@record\r\n*/\r\nclass MDCTextFieldIconAdapter{\r\n/**\r\n*Gets the value of an attribute on the icon element.\r\n*@param{string}attr\r\n*@return{string}\r\n*/\r\n getAttr(attr){}\r\n\r\n/**\r\n*Sets an attribute on the icon element.\r\n*@param{string}attr\r\n*@param{string}value\r\n*/\r\n setAttr(attr,value){}\r\n\r\n/**\r\n*Removes an attribute from the icon element.\r\n*@param{string}attr\r\n*/\r\n removeAttr(attr){}\r\n\r\n/**\r\n*Sets the text content of the icon element.\r\n*@param{string}content\r\n*/\r\n setContent(content){}\r\n\r\n/**\r\n*Registers an event listener on the icon element for a given event.\r\n*@param{string}evtType\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n registerInteractionHandler(evtType,handler){}\r\n\r\n/**\r\n*Deregisters an event listener on the icon element for a given event.\r\n*@param{string}evtType\r\n*@param{function(!Event):undefined}handler\r\n*/\r\n deregisterInteractionHandler(evtType,handler){}\r\n\r\n/**\r\n*Emits a custom event\"MDCTextField:icon\"denoting a user has clicked the icon.\r\n*/\r\n notifyIconAction(){}\r\n}\r\n\r\n/*harmony default export*/__webpack_exports__[\"default\"]=(MDCTextFieldIconAdapter);\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RleHRmaWVsZC9pY29uL2FkYXB0ZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RleHRmaWVsZC9pY29uL2FkYXB0ZXIuanM/NTdlZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy5cclxuICpcclxuICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxyXG4gKiBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXHJcbiAqIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcclxuICogdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxyXG4gKiBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcclxuICogZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcclxuICpcclxuICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cclxuICogYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXHJcbiAqXHJcbiAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcclxuICogSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXHJcbiAqIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxyXG4gKiBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXHJcbiAqIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXHJcbiAqIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cclxuICogVEhFIFNPRlRXQVJFLlxyXG4gKi9cclxuXHJcbi8qIGVzbGludCBuby11bnVzZWQtdmFyczogWzIsIHtcImFyZ3NcIjogXCJub25lXCJ9XSAqL1xyXG5cclxuLyoqXHJcbiAqIEFkYXB0ZXIgZm9yIE1EQyBUZXh0IEZpZWxkIEljb24uXHJcbiAqXHJcbiAqIERlZmluZXMgdGhlIHNoYXBlIG9mIHRoZSBhZGFwdGVyIGV4cGVjdGVkIGJ5IHRoZSBmb3VuZGF0aW9uLiBJbXBsZW1lbnQgdGhpc1xyXG4gKiBhZGFwdGVyIHRvIGludGVncmF0ZSB0aGUgdGV4dCBmaWVsZCBpY29uIGludG8geW91ciBmcmFtZXdvcmsuIFNlZVxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbWF0ZXJpYWwtY29tcG9uZW50cy9tYXRlcmlhbC1jb21wb25lbnRzLXdlYi9ibG9iL21hc3Rlci9kb2NzL2F1dGhvcmluZy1jb21wb25lbnRzLm1kXHJcbiAqIGZvciBtb3JlIGluZm9ybWF0aW9uLlxyXG4gKlxyXG4gKiBAcmVjb3JkXHJcbiAqL1xyXG5jbGFzcyBNRENUZXh0RmllbGRJY29uQWRhcHRlciB7XHJcbiAgLyoqXHJcbiAgICogR2V0cyB0aGUgdmFsdWUgb2YgYW4gYXR0cmlidXRlIG9uIHRoZSBpY29uIGVsZW1lbnQuXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGF0dHJcclxuICAgKiBAcmV0dXJuIHtzdHJpbmd9XHJcbiAgICovXHJcbiAgZ2V0QXR0cihhdHRyKSB7fVxyXG5cclxuICAvKipcclxuICAgKiBTZXRzIGFuIGF0dHJpYnV0ZSBvbiB0aGUgaWNvbiBlbGVtZW50LlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBhdHRyXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXHJcbiAgICovXHJcbiAgc2V0QXR0cihhdHRyLCB2YWx1ZSkge31cclxuXHJcbiAgLyoqXHJcbiAgICogUmVtb3ZlcyBhbiBhdHRyaWJ1dGUgZnJvbSB0aGUgaWNvbiBlbGVtZW50LlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBhdHRyXHJcbiAgICovXHJcbiAgcmVtb3ZlQXR0cihhdHRyKSB7fVxyXG5cclxuICAvKipcclxuICAgKiBTZXRzIHRoZSB0ZXh0IGNvbnRlbnQgb2YgdGhlIGljb24gZWxlbWVudC5cclxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29udGVudFxyXG4gICAqL1xyXG4gIHNldENvbnRlbnQoY29udGVudCkge31cclxuXHJcbiAgLyoqXHJcbiAgICogUmVnaXN0ZXJzIGFuIGV2ZW50IGxpc3RlbmVyIG9uIHRoZSBpY29uIGVsZW1lbnQgZm9yIGEgZ2l2ZW4gZXZlbnQuXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2dFR5cGVcclxuICAgKiBAcGFyYW0ge2Z1bmN0aW9uKCFFdmVudCk6IHVuZGVmaW5lZH0gaGFuZGxlclxyXG4gICAqL1xyXG4gIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyKGV2dFR5cGUsIGhhbmRsZXIpIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqIERlcmVnaXN0ZXJzIGFuIGV2ZW50IGxpc3RlbmVyIG9uIHRoZSBpY29uIGVsZW1lbnQgZm9yIGEgZ2l2ZW4gZXZlbnQuXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2dFR5cGVcclxuICAgKiBAcGFyYW0ge2Z1bmN0aW9uKCFFdmVudCk6IHVuZGVmaW5lZH0gaGFuZGxlclxyXG4gICAqL1xyXG4gIGRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoZXZ0VHlwZSwgaGFuZGxlcikge31cclxuXHJcbiAgLyoqXHJcbiAgICogRW1pdHMgYSBjdXN0b20gZXZlbnQgXCJNRENUZXh0RmllbGQ6aWNvblwiIGRlbm90aW5nIGEgdXNlciBoYXMgY2xpY2tlZCB0aGUgaWNvbi5cclxuICAgKi9cclxuICBub3RpZnlJY29uQWN0aW9uKCkge31cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTURDVGV4dEZpZWxkSWNvbkFkYXB0ZXI7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//#sourceURL=webpack-internal:///./node_modules/@material/textfield/icon/adapter.js\n");/***/}),/***/"./node_modules/@material/textfield/icon/constants.js":/*!************************************************************!*\;!***./node_modules/@material/textfield/icon/constants.js***!;\************************************************************//*!exports provided:strings*//***/(function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"strings\",function(){return strings;});\n/**\r\n*@license\r\n*Copyright 2016 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n/**@enum{string}*/\r\nconst strings={\r\n ICON_EVENT:'MDCTextField:icon',\r\n ICON_ROLE:'button',\r\n};\r\n\r\n\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RleHRmaWVsZC9pY29uL2NvbnN0YW50cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwvdGV4dGZpZWxkL2ljb24vY29uc3RhbnRzLmpzPzBjMGIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE2IEdvb2dsZSBJbmMuXHJcbiAqXHJcbiAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcclxuICogb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxyXG4gKiBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXHJcbiAqIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcclxuICogY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXHJcbiAqIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XHJcbiAqXHJcbiAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXHJcbiAqIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxyXG4gKlxyXG4gKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXHJcbiAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxyXG4gKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcclxuICogQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxyXG4gKiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxyXG4gKiBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXHJcbiAqIFRIRSBTT0ZUV0FSRS5cclxuICovXHJcblxyXG4vKiogQGVudW0ge3N0cmluZ30gKi9cclxuY29uc3Qgc3RyaW5ncyA9IHtcclxuICBJQ09OX0VWRU5UOiAnTURDVGV4dEZpZWxkOmljb24nLFxyXG4gIElDT05fUk9MRTogJ2J1dHRvbicsXHJcbn07XHJcblxyXG5leHBvcnQge3N0cmluZ3N9O1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//#sourceURL=webpack-internal:///./node_modules/@material/textfield/icon/constants.js\n");/***/}),/***/"./node_modules/@material/textfield/icon/foundation.js":/*!*************************************************************!*\;!***./node_modules/@material/textfield/icon/foundation.js***!;\*************************************************************//*!exports provided:default*//***/(function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/*harmony import*/var _material_base_foundation__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(/*!@material/base/foundation*/\"./node_modules/@material/base/foundation.js\");\n/*harmony import*/var _adapter__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(/*!./adapter*/\"./node_modules/@material/textfield/icon/adapter.js\");\n/*harmony import*/var _constants__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(/*!./constants*/\"./node_modules/@material/textfield/icon/constants.js\");\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCFoundation<!MDCTextFieldIconAdapter>}\r\n*@final\r\n*/\r\nclass MDCTextFieldIconFoundation extends _material_base_foundation__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n/**@return enum{string}*/\r\n static get strings(){\r\n return _constants__WEBPACK_IMPORTED_MODULE_2__[\"strings\"];\r\n}\r\n\r\n/**\r\n*{@see MDCTextFieldIconAdapter}for typing information on parameters and return\r\n*types.\r\n*@return{!MDCTextFieldIconAdapter}\r\n*/\r\n static get defaultAdapter(){\r\n return/**@type{!MDCTextFieldIconAdapter}*/({\r\n getAttr:()=>{},\r\n setAttr:()=>{},\r\n removeAttr:()=>{},\r\n setContent:()=>{},\r\n registerInteractionHandler:()=>{},\r\n deregisterInteractionHandler:()=>{},\r\n notifyIconAction:()=>{},\r\n});\r\n}\r\n\r\n/**\r\n*@param{!MDCTextFieldIconAdapter}adapter\r\n*/\r\n constructor(adapter){\r\n super(Object.assign(MDCTextFieldIconFoundation.defaultAdapter,adapter));\r\n\r\n/**@private{string?}*/\r\n this.savedTabIndex_=null;\r\n\r\n/**@private{function(!Event):undefined}*/\r\n this.interactionHandler_=(evt)=>this.handleInteraction(evt);\r\n}\r\n\r\n init(){\r\n this.savedTabIndex_=this.adapter_.getAttr('tabindex');\r\n\r\n['click','keydown'].forEach((evtType)=>{\r\n this.adapter_.registerInteractionHandler(evtType,this.interactionHandler_);\r\n});\r\n}\r\n\r\n destroy(){\r\n['click','keydown'].forEach((evtType)=>{\r\n this.adapter_.deregisterInteractionHandler(evtType,this.interactionHandler_);\r\n});\r\n}\r\n\r\n/**@param{boolean}disabled*/\r\n setDisabled(disabled){\r\n if(!this.savedTabIndex_){\r\n return;\r\n}\r\n\r\n if(disabled){\r\n this.adapter_.setAttr('tabindex','-1');\r\n this.adapter_.removeAttr('role');\r\n}else{\r\n this.adapter_.setAttr('tabindex',this.savedTabIndex_);\r\n this.adapter_.setAttr('role',_constants__WEBPACK_IMPORTED_MODULE_2__[\"strings\"].ICON_ROLE);\r\n}\r\n}\r\n\r\n/**@param{string}label*/\r\n setAriaLabel(label){\r\n this.adapter_.setAttr('aria-label',label);\r\n}\r\n\r\n/**@param{string}content*/\r\n setContent(content){\r\n this.adapter_.setContent(content);\r\n}\r\n\r\n/**\r\n*Handles an interaction event\r\n*@param{!Event}evt\r\n*/\r\n handleInteraction(evt){\r\n if(evt.type==='click'||evt.key==='Enter'||evt.keyCode===13){\r\n this.adapter_.notifyIconAction();\r\n}\r\n}\r\n}\r\n\r\n/*harmony default export*/__webpack_exports__[\"default\"]=(MDCTextFieldIconFoundation);\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RleHRmaWVsZC9pY29uL2ZvdW5kYXRpb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RleHRmaWVsZC9pY29uL2ZvdW5kYXRpb24uanM/MTg4YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy5cclxuICpcclxuICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxyXG4gKiBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXHJcbiAqIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcclxuICogdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxyXG4gKiBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcclxuICogZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcclxuICpcclxuICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cclxuICogYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXHJcbiAqXHJcbiAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcclxuICogSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXHJcbiAqIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxyXG4gKiBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXHJcbiAqIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXHJcbiAqIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cclxuICogVEhFIFNPRlRXQVJFLlxyXG4gKi9cclxuXHJcbmltcG9ydCBNRENGb3VuZGF0aW9uIGZyb20gJ0BtYXRlcmlhbC9iYXNlL2ZvdW5kYXRpb24nO1xyXG5pbXBvcnQgTURDVGV4dEZpZWxkSWNvbkFkYXB0ZXIgZnJvbSAnLi9hZGFwdGVyJztcclxuaW1wb3J0IHtzdHJpbmdzfSBmcm9tICcuL2NvbnN0YW50cyc7XHJcblxyXG5cclxuLyoqXHJcbiAqIEBleHRlbmRzIHtNRENGb3VuZGF0aW9uPCFNRENUZXh0RmllbGRJY29uQWRhcHRlcj59XHJcbiAqIEBmaW5hbFxyXG4gKi9cclxuY2xhc3MgTURDVGV4dEZpZWxkSWNvbkZvdW5kYXRpb24gZXh0ZW5kcyBNRENGb3VuZGF0aW9uIHtcclxuICAvKiogQHJldHVybiBlbnVtIHtzdHJpbmd9ICovXHJcbiAgc3RhdGljIGdldCBzdHJpbmdzKCkge1xyXG4gICAgcmV0dXJuIHN0cmluZ3M7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiB7QHNlZSBNRENUZXh0RmllbGRJY29uQWRhcHRlcn0gZm9yIHR5cGluZyBpbmZvcm1hdGlvbiBvbiBwYXJhbWV0ZXJzIGFuZCByZXR1cm5cclxuICAgKiB0eXBlcy5cclxuICAgKiBAcmV0dXJuIHshTURDVGV4dEZpZWxkSWNvbkFkYXB0ZXJ9XHJcbiAgICovXHJcbiAgc3RhdGljIGdldCBkZWZhdWx0QWRhcHRlcigpIHtcclxuICAgIHJldHVybiAvKiogQHR5cGUgeyFNRENUZXh0RmllbGRJY29uQWRhcHRlcn0gKi8gKHtcclxuICAgICAgZ2V0QXR0cjogKCkgPT4ge30sXHJcbiAgICAgIHNldEF0dHI6ICgpID0+IHt9LFxyXG4gICAgICByZW1vdmVBdHRyOiAoKSA9PiB7fSxcclxuICAgICAgc2V0Q29udGVudDogKCkgPT4ge30sXHJcbiAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoKSA9PiB7fSxcclxuICAgICAgZGVyZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcjogKCkgPT4ge30sXHJcbiAgICAgIG5vdGlmeUljb25BY3Rpb246ICgpID0+IHt9LFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0geyFNRENUZXh0RmllbGRJY29uQWRhcHRlcn0gYWRhcHRlclxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKGFkYXB0ZXIpIHtcclxuICAgIHN1cGVyKE9iamVjdC5hc3NpZ24oTURDVGV4dEZpZWxkSWNvbkZvdW5kYXRpb24uZGVmYXVsdEFkYXB0ZXIsIGFkYXB0ZXIpKTtcclxuXHJcbiAgICAvKiogQHByaXZhdGUge3N0cmluZz99ICovXHJcbiAgICB0aGlzLnNhdmVkVGFiSW5kZXhfID0gbnVsbDtcclxuXHJcbiAgICAvKiogQHByaXZhdGUge2Z1bmN0aW9uKCFFdmVudCk6IHVuZGVmaW5lZH0gKi9cclxuICAgIHRoaXMuaW50ZXJhY3Rpb25IYW5kbGVyXyA9IChldnQpID0+IHRoaXMuaGFuZGxlSW50ZXJhY3Rpb24oZXZ0KTtcclxuICB9XHJcblxyXG4gIGluaXQoKSB7XHJcbiAgICB0aGlzLnNhdmVkVGFiSW5kZXhfID0gdGhpcy5hZGFwdGVyXy5nZXRBdHRyKCd0YWJpbmRleCcpO1xyXG5cclxuICAgIFsnY2xpY2snLCAna2V5ZG93biddLmZvckVhY2goKGV2dFR5cGUpID0+IHtcclxuICAgICAgdGhpcy5hZGFwdGVyXy5yZWdpc3RlckludGVyYWN0aW9uSGFuZGxlcihldnRUeXBlLCB0aGlzLmludGVyYWN0aW9uSGFuZGxlcl8pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBkZXN0cm95KCkge1xyXG4gICAgWydjbGljaycsICdrZXlkb3duJ10uZm9yRWFjaCgoZXZ0VHlwZSkgPT4ge1xyXG4gICAgICB0aGlzLmFkYXB0ZXJfLmRlcmVnaXN0ZXJJbnRlcmFjdGlvbkhhbmRsZXIoZXZ0VHlwZSwgdGhpcy5pbnRlcmFjdGlvbkhhbmRsZXJfKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqIEBwYXJhbSB7Ym9vbGVhbn0gZGlzYWJsZWQgKi9cclxuICBzZXREaXNhYmxlZChkaXNhYmxlZCkge1xyXG4gICAgaWYgKCF0aGlzLnNhdmVkVGFiSW5kZXhfKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZGlzYWJsZWQpIHtcclxuICAgICAgdGhpcy5hZGFwdGVyXy5zZXRBdHRyKCd0YWJpbmRleCcsICctMScpO1xyXG4gICAgICB0aGlzLmFkYXB0ZXJfLnJlbW92ZUF0dHIoJ3JvbGUnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuYWRhcHRlcl8uc2V0QXR0cigndGFiaW5kZXgnLCB0aGlzLnNhdmVkVGFiSW5kZXhfKTtcclxuICAgICAgdGhpcy5hZGFwdGVyXy5zZXRBdHRyKCdyb2xlJywgc3RyaW5ncy5JQ09OX1JPTEUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqIEBwYXJhbSB7c3RyaW5nfSBsYWJlbCAqL1xyXG4gIHNldEFyaWFMYWJlbChsYWJlbCkge1xyXG4gICAgdGhpcy5hZGFwdGVyXy5zZXRBdHRyKCdhcmlhLWxhYmVsJywgbGFiZWwpO1xyXG4gIH1cclxuXHJcbiAgLyoqIEBwYXJhbSB7c3RyaW5nfSBjb250ZW50ICovXHJcbiAgc2V0Q29udGVudChjb250ZW50KSB7XHJcbiAgICB0aGlzLmFkYXB0ZXJfLnNldENvbnRlbnQoY29udGVudCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBIYW5kbGVzIGFuIGludGVyYWN0aW9uIGV2ZW50XHJcbiAgICogQHBhcmFtIHshRXZlbnR9IGV2dFxyXG4gICAqL1xyXG4gIGhhbmRsZUludGVyYWN0aW9uKGV2dCkge1xyXG4gICAgaWYgKGV2dC50eXBlID09PSAnY2xpY2snIHx8IGV2dC5rZXkgPT09ICdFbnRlcicgfHwgZXZ0LmtleUNvZGUgPT09IDEzKSB7XHJcbiAgICAgIHRoaXMuYWRhcHRlcl8ubm90aWZ5SWNvbkFjdGlvbigpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTURDVGV4dEZpZWxkSWNvbkZvdW5kYXRpb247XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//#sourceURL=webpack-internal:///./node_modules/@material/textfield/icon/foundation.js\n");/***/}),/***/"./node_modules/@material/textfield/icon/index.js":/*!********************************************************!*\;!***./node_modules/@material/textfield/icon/index.js***!;\********************************************************//*!exports provided:MDCTextFieldIcon,MDCTextFieldIconFoundation*//***/(function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/*harmony export(binding)*/__webpack_require__.d(__webpack_exports__,\"MDCTextFieldIcon\",function(){return MDCTextFieldIcon;});\n/*harmony import*/var _material_base_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(/*!@material/base/component*/\"./node_modules/@material/base/component.js\");\n/*harmony import*/var _adapter__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(/*!./adapter*/\"./node_modules/@material/textfield/icon/adapter.js\");\n/*harmony import*/var _foundation__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(/*!./foundation*/\"./node_modules/@material/textfield/icon/foundation.js\");\n/*harmony reexport(safe)*/__webpack_require__.d(__webpack_exports__,\"MDCTextFieldIconFoundation\",function(){return _foundation__WEBPACK_IMPORTED_MODULE_2__[\"default\"];});\n\n/**\r\n*@license\r\n*Copyright 2017 Google Inc.\r\n*\r\n*Permission is hereby granted,free of charge,to any person obtaining a copy\r\n*of this software and associated documentation files(the\"Software\"),to deal\r\n*in the Software without restriction,including without limitation the rights\r\n*to use,copy,modify,merge,publish,distribute,sublicense,and/or sell\r\n*copies of the Software,and to permit persons to whom the Software is\r\n*furnished to do so,subject to the following conditions:\r\n*\r\n*The above copyright notice and this permission notice shall be included in\r\n*all copies or substantial portions of the Software.\r\n*\r\n*THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR\r\n*IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\r\n*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER\r\n*LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,\r\n*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*THE SOFTWARE.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n*@extends{MDCComponent<!MDCTextFieldIconFoundation>}\r\n*@final\r\n*/\r\nclass MDCTextFieldIcon extends _material_base_component__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n/**\r\n*@param{!Element}root\r\n*@return{!MDCTextFieldIcon}\r\n*/\r\n static attachTo(root){\r\n return new MDCTextFieldIcon(root);\r\n}\r\n\r\n/**\r\n*@return{!MDCTextFieldIconFoundation}\r\n*/\r\n get foundation(){\r\n return this.foundation_;\r\n}\r\n\r\n/**\r\n*@return{!MDCTextFieldIconFoundation}\r\n*/\r\n getDefaultFoundation(){\r\n return new _foundation__WEBPACK_IMPORTED_MODULE_2__[\"default\"](/**@type{!MDCTextFieldIconAdapter}*/(Object.assign({\r\n getAttr:(attr)=>this.root_.getAttribute(attr),\r\n setAttr:(attr,value)=>this.root_.setAttribute(attr,value),\r\n removeAttr:(attr)=>this.root_.removeAttribute(attr),\r\n setContent:(content)=>{\r\n this.root_.textContent=content;\r\n},\r\n registerInteractionHandler:(evtType,handler)=>this.root_.addEventListener(evtType,handler),\r\n deregisterInteractionHandler:(evtType,handler)=>this.root_.removeEventListener(evtType,handler),\r\n notifyIconAction:()=>this.emit(\r\n _foundation__WEBPACK_IMPORTED_MODULE_2__[\"default\"].strings.ICON_EVENT,{}/*evtData*/,true/*shouldBubble*/),\r\n})));\r\n}\r\n}\r\n\r\n\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL3RleHRmaWVsZC9pY29uL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC90ZXh0ZmllbGQvaWNvbi9pbmRleC5qcz9hYzY5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLlxyXG4gKlxyXG4gKiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XHJcbiAqIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcclxuICogaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xyXG4gKiB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXHJcbiAqIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xyXG4gKiBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxyXG4gKlxyXG4gKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxyXG4gKiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cclxuICpcclxuICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxyXG4gKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcclxuICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXHJcbiAqIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcclxuICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcclxuICogT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxyXG4gKiBUSEUgU09GVFdBUkUuXHJcbiAqL1xyXG5cclxuaW1wb3J0IE1EQ0NvbXBvbmVudCBmcm9tICdAbWF0ZXJpYWwvYmFzZS9jb21wb25lbnQnO1xyXG5cclxuaW1wb3J0IE1EQ1RleHRGaWVsZEljb25BZGFwdGVyIGZyb20gJy4vYWRhcHRlcic7XHJcbmltcG9ydCBNRENUZXh0RmllbGRJY29uRm91bmRhdGlvbiBmcm9tICcuL2ZvdW5kYXRpb24nO1xyXG5cclxuLyoqXHJcbiAqIEBleHRlbmRzIHtNRENDb21wb25lbnQ8IU1EQ1RleHRGaWVsZEljb25Gb3VuZGF0aW9uPn1cclxuICogQGZpbmFsXHJcbiAqL1xyXG5jbGFzcyBNRENUZXh0RmllbGRJY29uIGV4dGVuZHMgTURDQ29tcG9uZW50IHtcclxuICAvKipcclxuICAgKiBAcGFyYW0geyFFbGVtZW50fSByb290XHJcbiAgICogQHJldHVybiB7IU1EQ1RleHRGaWVsZEljb259XHJcbiAgICovXHJcbiAgc3RhdGljIGF0dGFjaFRvKHJvb3QpIHtcclxuICAgIHJldHVybiBuZXcgTURDVGV4dEZpZWxkSWNvbihyb290KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEByZXR1cm4geyFNRENUZXh0RmllbGRJY29uRm91bmRhdGlvbn1cclxuICAgKi9cclxuICBnZXQgZm91bmRhdGlvbigpIHtcclxuICAgIHJldHVybiB0aGlzLmZvdW5kYXRpb25fO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybiB7IU1EQ1RleHRGaWVsZEljb25Gb3VuZGF0aW9ufVxyXG4gICAqL1xyXG4gIGdldERlZmF1bHRGb3VuZGF0aW9uKCkge1xyXG4gICAgcmV0dXJuIG5ldyBNRENUZXh0RmllbGRJY29uRm91bmRhdGlvbigvKiogQHR5cGUgeyFNRENUZXh0RmllbGRJY29uQWRhcHRlcn0gKi8gKE9iamVjdC5hc3NpZ24oe1xyXG4gICAgICBnZXRBdHRyOiAoYXR0cikgPT4gdGhpcy5yb290Xy5nZXRBdHRyaWJ1dGUoYXR0ciksXHJcbiAgICAgIHNldEF0dHI6IChhdHRyLCB2YWx1ZSkgPT4gdGhpcy5yb290Xy5zZXRBdHRyaWJ1dGUoYXR0ciwgdmFsdWUpLFxyXG4gICAgICByZW1vdmVBdHRyOiAoYXR0cikgPT4gdGhpcy5yb290Xy5yZW1vdmVBdHRyaWJ1dGUoYXR0ciksXHJcbiAgICAgIHNldENvbnRlbnQ6IChjb250ZW50KSA9PiB7XHJcbiAgICAgICAgdGhpcy5yb290Xy50ZXh0Q29udGVudCA9IGNvbnRlbnQ7XHJcbiAgICAgIH0sXHJcbiAgICAgIHJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0VHlwZSwgaGFuZGxlcikgPT4gdGhpcy5yb290Xy5hZGRFdmVudExpc3RlbmVyKGV2dFR5cGUsIGhhbmRsZXIpLFxyXG4gICAgICBkZXJlZ2lzdGVySW50ZXJhY3Rpb25IYW5kbGVyOiAoZXZ0VHlwZSwgaGFuZGxlcikgPT4gdGhpcy5yb290Xy5yZW1vdmVFdmVudExpc3RlbmVyKGV2dFR5cGUsIGhhbmRsZXIpLFxyXG4gICAgICBub3RpZnlJY29uQWN0aW9uOiAoKSA9PiB0aGlzLmVtaXQoXHJcbiAgICAgICAgTURDVGV4dEZpZWxkSWNvbkZvdW5kYXRpb24uc3RyaW5ncy5JQ09OX0VWRU5ULCB7fSAvKiBldnREYXRhICovLCB0cnVlIC8qIHNob3VsZEJ1YmJsZSAqLyksXHJcbiAgICB9KSkpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IHtNRENUZXh0RmllbGRJY29uLCBNRENUZXh0RmllbGRJY29uRm91bmRhdGlvbn07XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//#sourceURL=webpack-internal:///./node_modules/@material/textfield/icon/index.js\n");/***/}),/***/"./node_modules/ansi-html/index.js":/*!*****************************************!*\;!***./node_modules/ansi-html/index.js***!;\*****************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\nmodule.exports=ansiHTML\r\n\r\n//Reference to https://github.com/sindresorhus/ansi-regex\r\nvar _regANSI=/(?:(?:\\u001b\\[)|\\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\\u001b[A-M]/\r\n\r\nvar _defColors={\r\n reset:['fff','000'],//[FOREGROUD_COLOR,BACKGROUND_COLOR]\r\n black:'000',\r\n red:'ff0000',\r\n green:'209805',\r\n yellow:'e8bf03',\r\n blue:'0000ff',\r\n magenta:'ff00ff',\r\n cyan:'00ffee',\r\n lightgrey:'f0f0f0',\r\n darkgrey:'888'\r\n}\r\nvar _styles={\r\n 30:'black',\r\n 31:'red',\r\n 32:'green',\r\n 33:'yellow',\r\n 34:'blue',\r\n 35:'magenta',\r\n 36:'cyan',\r\n 37:'lightgrey'\r\n}\r\nvar _openTags={\r\n'1':'font-weight:bold',//bold\r\n'2':'opacity:0.5',//dim\r\n'3':'<i>',//italic\r\n'4':'<u>',//underscore\r\n'8':'display:none',//hidden\r\n'9':'<del>'//delete\r\n}\r\nvar _closeTags={\r\n'23':'</i>',//reset italic\r\n'24':'</u>',//reset underscore\r\n'29':'</del>'//reset delete\r\n}\r\n\r\n;[0,21,22,27,28,39,49].forEach(function(n){\r\n _closeTags[n]='</span>'\r\n})\r\n\r\n/**\r\n*Converts text with ANSI color codes to HTML markup.\r\n*@param{String}text\r\n*@returns{*}\r\n*/\r\nfunction ansiHTML(text){\r\n//Returns the text if the string has no ANSI escape code.\r\n if(!_regANSI.test(text)){\r\n return text\r\n}\r\n\r\n//Cache opened sequence.\r\n var ansiCodes=[]\r\n//Replace with markup.\r\n var ret=text.replace(/\\033\\[(\\d+)*m/g,function(match,seq){\r\n var ot=_openTags[seq]\r\n if(ot){\r\n//If current sequence has been opened,close it.\r\n if(!!~ansiCodes.indexOf(seq)){//eslint-disable-line no-extra-boolean-cast\r\n ansiCodes.pop()\r\n return'</span>'\r\n}\r\n//Open tag.\r\n ansiCodes.push(seq)\r\n return ot[0]==='<'?ot:'<span style=\"'+ot+';\">'\r\n}\r\n\r\n var ct=_closeTags[seq]\r\n if(ct){\r\n//Pop sequence\r\n ansiCodes.pop()\r\n return ct\r\n}\r\n return''\r\n})\r\n\r\n//Make sure tags are closed.\r\n var l=ansiCodes.length\r\n;(l>0)&&(ret+=Array(l+1).join('</span>'))\r\n\r\n return ret\r\n}\r\n\r\n/**\r\n*Customize colors.\r\n*@param{Object}colors reference to _defColors\r\n*/\r\nansiHTML.setColors=function(colors){\r\n if(typeof colors!=='object'){\r\n throw new Error('`colors`parameter must be an Object.')\r\n}\r\n\r\n var _finalColors={}\r\n for(var key in _defColors){\r\n var hex=colors.hasOwnProperty(key)?colors[key]:null\r\n if(!hex){\r\n _finalColors[key]=_defColors[key]\r\n continue\r\n}\r\n if('reset'===key){\r\n if(typeof hex==='string'){\r\n hex=[hex]\r\n}\r\n if(!Array.isArray(hex)||hex.length===0||hex.some(function(h){\r\n return typeof h!=='string'\r\n})){\r\n throw new Error('The value of`'+key+'`property must be an Array and each item could only be a hex string,e.g.:FF0000')\r\n}\r\n var defHexColor=_defColors[key]\r\n if(!hex[0]){\r\n hex[0]=defHexColor[0]\r\n}\r\n if(hex.length===1||!hex[1]){\r\n hex=[hex[0]]\r\n hex.push(defHexColor[1])\r\n}\r\n\r\n hex=hex.slice(0,2)\r\n}else if(typeof hex!=='string'){\r\n throw new Error('The value of`'+key+'`property must be a hex string,e.g.:FF0000')\r\n}\r\n _finalColors[key]=hex\r\n}\r\n _setTags(_finalColors)\r\n}\r\n\r\n/**\r\n*Reset colors.\r\n*/\r\nansiHTML.reset=function(){\r\n _setTags(_defColors)\r\n}\r\n\r\n/**\r\n*Expose tags,including open and close.\r\n*@type{Object}\r\n*/\r\nansiHTML.tags={}\r\n\r\nif(Object.defineProperty){\r\n Object.defineProperty(ansiHTML.tags,'open',{\r\n get:function(){return _openTags}\r\n})\r\n Object.defineProperty(ansiHTML.tags,'close',{\r\n get:function(){return _closeTags}\r\n})\r\n}else{\r\n ansiHTML.tags.open=_openTags\r\n ansiHTML.tags.close=_closeTags\r\n}\r\n\r\nfunction _setTags(colors){\r\n//reset all\r\n _openTags['0']='font-weight:normal;opacity:1;color:#'+colors.reset[0]+';background:#'+colors.reset[1]\r\n//inverse\r\n _openTags['7']='color:#'+colors.reset[1]+';background:#'+colors.reset[0]\r\n//dark grey\r\n _openTags['90']='color:#'+colors.darkgrey\r\n\r\n for(var code in _styles){\r\n var color=_styles[code]\r\n var oriColor=colors[color]||'000'\r\n _openTags[code]='color:#'+oriColor\r\n code=parseInt(code)\r\n _openTags[(code+10).toString()]='background:#'+oriColor\r\n}\r\n}\r\n\r\nansiHTML.reset()\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYW5zaS1odG1sL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Fuc2ktaHRtbC9pbmRleC5qcz80ZTFjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBhbnNpSFRNTFxyXG5cclxuLy8gUmVmZXJlbmNlIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvYW5zaS1yZWdleFxyXG52YXIgX3JlZ0FOU0kgPSAvKD86KD86XFx1MDAxYlxcWyl8XFx1MDA5YikoPzooPzpbMC05XXsxLDN9KT8oPzooPzo7WzAtOV17MCwzfSkqKT9bQS1NfGYtbV0pfFxcdTAwMWJbQS1NXS9cclxuXHJcbnZhciBfZGVmQ29sb3JzID0ge1xyXG4gIHJlc2V0OiBbJ2ZmZicsICcwMDAnXSwgLy8gW0ZPUkVHUk9VRF9DT0xPUiwgQkFDS0dST1VORF9DT0xPUl1cclxuICBibGFjazogJzAwMCcsXHJcbiAgcmVkOiAnZmYwMDAwJyxcclxuICBncmVlbjogJzIwOTgwNScsXHJcbiAgeWVsbG93OiAnZThiZjAzJyxcclxuICBibHVlOiAnMDAwMGZmJyxcclxuICBtYWdlbnRhOiAnZmYwMGZmJyxcclxuICBjeWFuOiAnMDBmZmVlJyxcclxuICBsaWdodGdyZXk6ICdmMGYwZjAnLFxyXG4gIGRhcmtncmV5OiAnODg4J1xyXG59XHJcbnZhciBfc3R5bGVzID0ge1xyXG4gIDMwOiAnYmxhY2snLFxyXG4gIDMxOiAncmVkJyxcclxuICAzMjogJ2dyZWVuJyxcclxuICAzMzogJ3llbGxvdycsXHJcbiAgMzQ6ICdibHVlJyxcclxuICAzNTogJ21hZ2VudGEnLFxyXG4gIDM2OiAnY3lhbicsXHJcbiAgMzc6ICdsaWdodGdyZXknXHJcbn1cclxudmFyIF9vcGVuVGFncyA9IHtcclxuICAnMSc6ICdmb250LXdlaWdodDpib2xkJywgLy8gYm9sZFxyXG4gICcyJzogJ29wYWNpdHk6MC41JywgLy8gZGltXHJcbiAgJzMnOiAnPGk+JywgLy8gaXRhbGljXHJcbiAgJzQnOiAnPHU+JywgLy8gdW5kZXJzY29yZVxyXG4gICc4JzogJ2Rpc3BsYXk6bm9uZScsIC8vIGhpZGRlblxyXG4gICc5JzogJzxkZWw+JyAvLyBkZWxldGVcclxufVxyXG52YXIgX2Nsb3NlVGFncyA9IHtcclxuICAnMjMnOiAnPC9pPicsIC8vIHJlc2V0IGl0YWxpY1xyXG4gICcyNCc6ICc8L3U+JywgLy8gcmVzZXQgdW5kZXJzY29yZVxyXG4gICcyOSc6ICc8L2RlbD4nIC8vIHJlc2V0IGRlbGV0ZVxyXG59XHJcblxyXG47WzAsIDIxLCAyMiwgMjcsIDI4LCAzOSwgNDldLmZvckVhY2goZnVuY3Rpb24gKG4pIHtcclxuICBfY2xvc2VUYWdzW25dID0gJzwvc3Bhbj4nXHJcbn0pXHJcblxyXG4vKipcclxuICogQ29udmVydHMgdGV4dCB3aXRoIEFOU0kgY29sb3IgY29kZXMgdG8gSFRNTCBtYXJrdXAuXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSB0ZXh0XHJcbiAqIEByZXR1cm5zIHsqfVxyXG4gKi9cclxuZnVuY3Rpb24gYW5zaUhUTUwgKHRleHQpIHtcclxuICAvLyBSZXR1cm5zIHRoZSB0ZXh0IGlmIHRoZSBzdHJpbmcgaGFzIG5vIEFOU0kgZXNjYXBlIGNvZGUuXHJcbiAgaWYgKCFfcmVnQU5TSS50ZXN0KHRleHQpKSB7XHJcbiAgICByZXR1cm4gdGV4dFxyXG4gIH1cclxuXHJcbiAgLy8gQ2FjaGUgb3BlbmVkIHNlcXVlbmNlLlxyXG4gIHZhciBhbnNpQ29kZXMgPSBbXVxyXG4gIC8vIFJlcGxhY2Ugd2l0aCBtYXJrdXAuXHJcbiAgdmFyIHJldCA9IHRleHQucmVwbGFjZSgvXFwwMzNcXFsoXFxkKykqbS9nLCBmdW5jdGlvbiAobWF0Y2gsIHNlcSkge1xyXG4gICAgdmFyIG90ID0gX29wZW5UYWdzW3NlcV1cclxuICAgIGlmIChvdCkge1xyXG4gICAgICAvLyBJZiBjdXJyZW50IHNlcXVlbmNlIGhhcyBiZWVuIG9wZW5lZCwgY2xvc2UgaXQuXHJcbiAgICAgIGlmICghIX5hbnNpQ29kZXMuaW5kZXhPZihzZXEpKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZXh0cmEtYm9vbGVhbi1jYXN0XHJcbiAgICAgICAgYW5zaUNvZGVzLnBvcCgpXHJcbiAgICAgICAgcmV0dXJuICc8L3NwYW4+J1xyXG4gICAgICB9XHJcbiAgICAgIC8vIE9wZW4gdGFnLlxyXG4gICAgICBhbnNpQ29kZXMucHVzaChzZXEpXHJcbiAgICAgIHJldHVybiBvdFswXSA9PT0gJzwnID8gb3QgOiAnPHNwYW4gc3R5bGU9XCInICsgb3QgKyAnO1wiPidcclxuICAgIH1cclxuXHJcbiAgICB2YXIgY3QgPSBfY2xvc2VUYWdzW3NlcV1cclxuICAgIGlmIChjdCkge1xyXG4gICAgICAvLyBQb3Agc2VxdWVuY2VcclxuICAgICAgYW5zaUNvZGVzLnBvcCgpXHJcbiAgICAgIHJldHVybiBjdFxyXG4gICAgfVxyXG4gICAgcmV0dXJuICcnXHJcbiAgfSlcclxuXHJcbiAgLy8gTWFrZSBzdXJlIHRhZ3MgYXJlIGNsb3NlZC5cclxuICB2YXIgbCA9IGFuc2lDb2Rlcy5sZW5ndGhcclxuICA7KGwgPiAwKSAmJiAocmV0ICs9IEFycmF5KGwgKyAxKS5qb2luKCc8L3NwYW4+JykpXHJcblxyXG4gIHJldHVybiByZXRcclxufVxyXG5cclxuLyoqXHJcbiAqIEN1c3RvbWl6ZSBjb2xvcnMuXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb2xvcnMgcmVmZXJlbmNlIHRvIF9kZWZDb2xvcnNcclxuICovXHJcbmFuc2lIVE1MLnNldENvbG9ycyA9IGZ1bmN0aW9uIChjb2xvcnMpIHtcclxuICBpZiAodHlwZW9mIGNvbG9ycyAhPT0gJ29iamVjdCcpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignYGNvbG9yc2AgcGFyYW1ldGVyIG11c3QgYmUgYW4gT2JqZWN0LicpXHJcbiAgfVxyXG5cclxuICB2YXIgX2ZpbmFsQ29sb3JzID0ge31cclxuICBmb3IgKHZhciBrZXkgaW4gX2RlZkNvbG9ycykge1xyXG4gICAgdmFyIGhleCA9IGNvbG9ycy5oYXNPd25Qcm9wZXJ0eShrZXkpID8gY29sb3JzW2tleV0gOiBudWxsXHJcbiAgICBpZiAoIWhleCkge1xyXG4gICAgICBfZmluYWxDb2xvcnNba2V5XSA9IF9kZWZDb2xvcnNba2V5XVxyXG4gICAgICBjb250aW51ZVxyXG4gICAgfVxyXG4gICAgaWYgKCdyZXNldCcgPT09IGtleSkge1xyXG4gICAgICBpZiAodHlwZW9mIGhleCA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICBoZXggPSBbaGV4XVxyXG4gICAgICB9XHJcbiAgICAgIGlmICghQXJyYXkuaXNBcnJheShoZXgpIHx8IGhleC5sZW5ndGggPT09IDAgfHwgaGV4LnNvbWUoZnVuY3Rpb24gKGgpIHtcclxuICAgICAgICByZXR1cm4gdHlwZW9mIGggIT09ICdzdHJpbmcnXHJcbiAgICAgIH0pKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgdmFsdWUgb2YgYCcgKyBrZXkgKyAnYCBwcm9wZXJ0eSBtdXN0IGJlIGFuIEFycmF5IGFuZCBlYWNoIGl0ZW0gY291bGQgb25seSBiZSBhIGhleCBzdHJpbmcsIGUuZy46IEZGMDAwMCcpXHJcbiAgICAgIH1cclxuICAgICAgdmFyIGRlZkhleENvbG9yID0gX2RlZkNvbG9yc1trZXldXHJcbiAgICAgIGlmICghaGV4WzBdKSB7XHJcbiAgICAgICAgaGV4WzBdID0gZGVmSGV4Q29sb3JbMF1cclxuICAgICAgfVxyXG4gICAgICBpZiAoaGV4Lmxlbmd0aCA9PT0gMSB8fCAhaGV4WzFdKSB7XHJcbiAgICAgICAgaGV4ID0gW2hleFswXV1cclxuICAgICAgICBoZXgucHVzaChkZWZIZXhDb2xvclsxXSlcclxuICAgICAgfVxyXG5cclxuICAgICAgaGV4ID0gaGV4LnNsaWNlKDAsIDIpXHJcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBoZXggIT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIHZhbHVlIG9mIGAnICsga2V5ICsgJ2AgcHJvcGVydHkgbXVzdCBiZSBhIGhleCBzdHJpbmcsIGUuZy46IEZGMDAwMCcpXHJcbiAgICB9XHJcbiAgICBfZmluYWxDb2xvcnNba2V5XSA9IGhleFxyXG4gIH1cclxuICBfc2V0VGFncyhfZmluYWxDb2xvcnMpXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZXNldCBjb2xvcnMuXHJcbiAqL1xyXG5hbnNpSFRNTC5yZXNldCA9IGZ1bmN0aW9uICgpIHtcclxuICBfc2V0VGFncyhfZGVmQ29sb3JzKVxyXG59XHJcblxyXG4vKipcclxuICogRXhwb3NlIHRhZ3MsIGluY2x1ZGluZyBvcGVuIGFuZCBjbG9zZS5cclxuICogQHR5cGUge09iamVjdH1cclxuICovXHJcbmFuc2lIVE1MLnRhZ3MgPSB7fVxyXG5cclxuaWYgKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSkge1xyXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShhbnNpSFRNTC50YWdzLCAnb3BlbicsIHtcclxuICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX29wZW5UYWdzIH1cclxuICB9KVxyXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShhbnNpSFRNTC50YWdzLCAnY2xvc2UnLCB7XHJcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9jbG9zZVRhZ3MgfVxyXG4gIH0pXHJcbn0gZWxzZSB7XHJcbiAgYW5zaUhUTUwudGFncy5vcGVuID0gX29wZW5UYWdzXHJcbiAgYW5zaUhUTUwudGFncy5jbG9zZSA9IF9jbG9zZVRhZ3NcclxufVxyXG5cclxuZnVuY3Rpb24gX3NldFRhZ3MgKGNvbG9ycykge1xyXG4gIC8vIHJlc2V0IGFsbFxyXG4gIF9vcGVuVGFnc1snMCddID0gJ2ZvbnQtd2VpZ2h0Om5vcm1hbDtvcGFjaXR5OjE7Y29sb3I6IycgKyBjb2xvcnMucmVzZXRbMF0gKyAnO2JhY2tncm91bmQ6IycgKyBjb2xvcnMucmVzZXRbMV1cclxuICAvLyBpbnZlcnNlXHJcbiAgX29wZW5UYWdzWyc3J10gPSAnY29sb3I6IycgKyBjb2xvcnMucmVzZXRbMV0gKyAnO2JhY2tncm91bmQ6IycgKyBjb2xvcnMucmVzZXRbMF1cclxuICAvLyBkYXJrIGdyZXlcclxuICBfb3BlblRhZ3NbJzkwJ10gPSAnY29sb3I6IycgKyBjb2xvcnMuZGFya2dyZXlcclxuXHJcbiAgZm9yICh2YXIgY29kZSBpbiBfc3R5bGVzKSB7XHJcbiAgICB2YXIgY29sb3IgPSBfc3R5bGVzW2NvZGVdXHJcbiAgICB2YXIgb3JpQ29sb3IgPSBjb2xvcnNbY29sb3JdIHx8ICcwMDAnXHJcbiAgICBfb3BlblRhZ3NbY29kZV0gPSAnY29sb3I6IycgKyBvcmlDb2xvclxyXG4gICAgY29kZSA9IHBhcnNlSW50KGNvZGUpXHJcbiAgICBfb3BlblRhZ3NbKGNvZGUgKyAxMCkudG9TdHJpbmcoKV0gPSAnYmFja2dyb3VuZDojJyArIG9yaUNvbG9yXHJcbiAgfVxyXG59XHJcblxyXG5hbnNpSFRNTC5yZXNldCgpXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//#sourceURL=webpack-internal:///./node_modules/ansi-html/index.js\n");/***/}),/***/"./node_modules/ansi-regex/index.js":/*!******************************************!*\;!***./node_modules/ansi-regex/index.js***!;\******************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){"use strict";eval("\r\nmodule.exports=function(){\r\n\treturn/[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g;\r\n};\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYW5zaS1yZWdleC9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hbnNpLXJlZ2V4L2luZGV4LmpzPzllZWUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcclxuXHRyZXR1cm4gL1tcXHUwMDFiXFx1MDA5Yl1bWygpIzs/XSooPzpbMC05XXsxLDR9KD86O1swLTldezAsNH0pKik/WzAtOUEtUFJaY2YtbnFyeT0+PF0vZztcclxufTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//#sourceURL=webpack-internal:///./node_modules/ansi-regex/index.js\n");/***/}),/***/"./node_modules/events/events.js":/*!***************************************!*\;!***./node_modules/events/events.js***!;\***************************************//*!no static exports found*//***/(function(module,exports){eval("//Copyright Joyent,Inc.and other Node contributors.\r\n//\r\n//Permission is hereby granted,free of charge,to any person obtaining a\r\n//copy of this software and associated documentation files(the\r\n//\"Software\"),to deal in the Software without restriction,including\r\n//without limitation the rights to use,copy,modify,merge,publish,\r\n//distribute,sublicense,and/or sell copies of the Software,and to permit\r\n//persons to whom the Software is furnished to do so,subject to the\r\n//following conditions:\r\n//\r\n//The above copyright notice and this permission notice shall be included\r\n//in all copies or substantial portions of the Software.\r\n//\r\n//THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS\r\n//OR IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n//MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN\r\n//NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n//DAMAGES OR OTHER LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR\r\n//OTHERWISE,ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n//USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nfunction EventEmitter(){\r\n this._events=this._events||{};\r\n this._maxListeners=this._maxListeners||undefined;\r\n}\r\nmodule.exports=EventEmitter;\r\n\r\n//Backwards-compat with node 0.10.x\r\nEventEmitter.EventEmitter=EventEmitter;\r\n\r\nEventEmitter.prototype._events=undefined;\r\nEventEmitter.prototype._maxListeners=undefined;\r\n\r\n//By default EventEmitters will print a warning if more than 10 listeners are\r\n//added to it.This is a useful default which helps finding memory leaks.\r\nEventEmitter.defaultMaxListeners=10;\r\n\r\n//Obviously not all Emitters should be limited to 10.This function allows\r\n//that to be increased.Set to zero for unlimited.\r\nEventEmitter.prototype.setMaxListeners=function(n){\r\n if(!isNumber(n)||n<0||isNaN(n))\r\n throw TypeError('n must be a positive number');\r\n this._maxListeners=n;\r\n return this;\r\n};\r\n\r\nEventEmitter.prototype.emit=function(type){\r\n var er,handler,len,args,i,listeners;\r\n\r\n if(!this._events)\r\n this._events={};\r\n\r\n//If there is no'error'event listener then throw.\r\n if(type==='error'){\r\n if(!this._events.error||\r\n(isObject(this._events.error)&&!this._events.error.length)){\r\n er=arguments[1];\r\n if(er instanceof Error){\r\n throw er;//Unhandled'error'event\r\n}else{\r\n//At least give some kind of context to the user\r\n var err=new Error('Uncaught,unspecified\"error\"event.('+er+')');\r\n err.context=er;\r\n throw err;\r\n}\r\n}\r\n}\r\n\r\n handler=this._events[type];\r\n\r\n if(isUndefined(handler))\r\n return false;\r\n\r\n if(isFunction(handler)){\r\n switch(arguments.length){\r\n//fast cases\r\n case 1:\r\n handler.call(this);\r\n break;\r\n case 2:\r\n handler.call(this,arguments[1]);\r\n break;\r\n case 3:\r\n handler.call(this,arguments[1],arguments[2]);\r\n break;\r\n//slower\r\n default:\r\n args=Array.prototype.slice.call(arguments,1);\r\n handler.apply(this,args);\r\n}\r\n}else if(isObject(handler)){\r\n args=Array.prototype.slice.call(arguments,1);\r\n listeners=handler.slice();\r\n len=listeners.length;\r\n for(i=0;i<len;i++)\r\n listeners[i].apply(this,args);\r\n}\r\n\r\n return true;\r\n};\r\n\r\nEventEmitter.prototype.addListener=function(type,listener){\r\n var m;\r\n\r\n if(!isFunction(listener))\r\n throw TypeError('listener must be a function');\r\n\r\n if(!this._events)\r\n this._events={};\r\n\r\n//To avoid recursion in the case that type===\"newListener\"!Before\r\n//adding it to the listeners,first emit\"newListener\".\r\n if(this._events.newListener)\r\n this.emit('newListener',type,\r\n isFunction(listener.listener)?\r\n listener.listener:listener);\r\n\r\n if(!this._events[type])\r\n//Optimize the case of one listener.Don't need the extra array object.\r\n this._events[type]=listener;\r\n else if(isObject(this._events[type]))\r\n//If we've already got an array,just append.\r\n this._events[type].push(listener);\r\n else\r\n//Adding the second element,need to change to array.\r\n this._events[type]=[this._events[type],listener];\r\n\r\n//Check for listener leak\r\n if(isObject(this._events[type])&&!this._events[type].warned){\r\n if(!isUndefined(this._maxListeners)){\r\n m=this._maxListeners;\r\n}else{\r\n m=EventEmitter.defaultMaxListeners;\r\n}\r\n\r\n if(m&&m>0&&this._events[type].length>m){\r\n this._events[type].warned=true;\r\n console.error('(node)warning:possible EventEmitter memory'+\r\n'leak detected.%d listeners added.'+\r\n'Use emitter.setMaxListeners()to increase limit.',\r\n this._events[type].length);\r\n if(typeof console.trace==='function'){\r\n//not supported in IE 10\r\n console.trace();\r\n}\r\n}\r\n}\r\n\r\n return this;\r\n};\r\n\r\nEventEmitter.prototype.on=EventEmitter.prototype.addListener;\r\n\r\nEventEmitter.prototype.once=function(type,listener){\r\n if(!isFunction(listener))\r\n throw TypeError('listener must be a function');\r\n\r\n var fired=false;\r\n\r\n function g(){\r\n this.removeListener(type,g);\r\n\r\n if(!fired){\r\n fired=true;\r\n listener.apply(this,arguments);\r\n}\r\n}\r\n\r\n g.listener=listener;\r\n this.on(type,g);\r\n\r\n return this;\r\n};\r\n\r\n//emits a'removeListener'event iff the listener was removed\r\nEventEmitter.prototype.removeListener=function(type,listener){\r\n var list,position,length,i;\r\n\r\n if(!isFunction(listener))\r\n throw TypeError('listener must be a function');\r\n\r\n if(!this._events||!this._events[type])\r\n return this;\r\n\r\n list=this._events[type];\r\n length=list.length;\r\n position=-1;\r\n\r\n if(list===listener||\r\n(isFunction(list.listener)&&list.listener===listener)){\r\n delete this._events[type];\r\n if(this._events.removeListener)\r\n this.emit('removeListener',type,listener);\r\n\r\n}else if(isObject(list)){\r\n for(i=length;i-->0;){\r\n if(list[i]===listener||\r\n(list[i].listener&&list[i].listener===listener)){\r\n position=i;\r\n break;\r\n}\r\n}\r\n\r\n if(position<0)\r\n return this;\r\n\r\n if(list.length===1){\r\n list.length=0;\r\n delete this._events[type];\r\n}else{\r\n list.splice(position,1);\r\n}\r\n\r\n if(this._events.removeListener)\r\n this.emit('removeListener',type,listener);\r\n}\r\n\r\n return this;\r\n};\r\n\r\nEventEmitter.prototype.removeAllListeners=function(type){\r\n var key,listeners;\r\n\r\n if(!this._events)\r\n return this;\r\n\r\n//not listening for removeListener,no need to emit\r\n if(!this._events.removeListener){\r\n if(arguments.length===0)\r\n this._events={};\r\n else if(this._events[type])\r\n delete this._events[type];\r\n return this;\r\n}\r\n\r\n//emit removeListener for all listeners on all events\r\n if(arguments.length===0){\r\n for(key in this._events){\r\n if(key==='removeListener')continue;\r\n this.removeAllListeners(key);\r\n}\r\n this.removeAllListeners('removeListener');\r\n this._events={};\r\n return this;\r\n}\r\n\r\n listeners=this._events[type];\r\n\r\n if(isFunction(listeners)){\r\n this.removeListener(type,listeners);\r\n}else if(listeners){\r\n//LIFO order\r\n while(listeners.length)\r\n this.removeListener(type,listeners[listeners.length-1]);\r\n}\r\n delete this._events[type];\r\n\r\n return this;\r\n};\r\n\r\nEventEmitter.prototype.listeners=function(type){\r\n var ret;\r\n if(!this._events||!this._events[type])\r\n ret=[];\r\n else if(isFunction(this._events[type]))\r\n ret=[this._events[type]];\r\n else\r\n ret=this._events[type].slice();\r\n return ret;\r\n};\r\n\r\nEventEmitter.prototype.listenerCount=function(type){\r\n if(this._events){\r\n var evlistener=this._events[type];\r\n\r\n if(isFunction(evlistener))\r\n return 1;\r\n else if(evlistener)\r\n return evlistener.length;\r\n}\r\n return 0;\r\n};\r\n\r\nEventEmitter.listenerCount=function(emitter,type){\r\n return emitter.listenerCount(type);\r\n};\r\n\r\nfunction isFunction(arg){\r\n return typeof arg==='function';\r\n}\r\n\r\nfunction isNumber(arg){\r\n return typeof arg==='number';\r\n}\r\n\r\nfunction isObject(arg){\r\n return typeof arg==='object'&&arg!==null;\r\n}\r\n\r\nfunction isUndefined(arg){\r\n return arg===void 0;\r\n}\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,\n//#sourceURL=webpack-internal:///./node_modules/events/events.js\n");/***/}),/***/"./node_modules/html-entities/index.js":/*!*********************************************!*\;!***./node_modules/html-entities/index.js***!;\*********************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){eval("module.exports={\r\n XmlEntities:__webpack_require__(/*!./lib/xml-entities.js*/\"./node_modules/html-entities/lib/xml-entities.js\"),\r\n Html4Entities:__webpack_require__(/*!./lib/html4-entities.js*/\"./node_modules/html-entities/lib/html4-entities.js\"),\r\n Html5Entities:__webpack_require__(/*!./lib/html5-entities.js*/\"./node_modules/html-entities/lib/html5-entities.js\"),\r\n AllHtmlEntities:__webpack_require__(/*!./lib/html5-entities.js*/\"./node_modules/html-entities/lib/html5-entities.js\")\r\n};\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1lbnRpdGllcy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9odG1sLWVudGl0aWVzL2luZGV4LmpzPzgyYzciXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgWG1sRW50aXRpZXM6IHJlcXVpcmUoJy4vbGliL3htbC1lbnRpdGllcy5qcycpLFxyXG4gIEh0bWw0RW50aXRpZXM6IHJlcXVpcmUoJy4vbGliL2h0bWw0LWVudGl0aWVzLmpzJyksXHJcbiAgSHRtbDVFbnRpdGllczogcmVxdWlyZSgnLi9saWIvaHRtbDUtZW50aXRpZXMuanMnKSxcclxuICBBbGxIdG1sRW50aXRpZXM6IHJlcXVpcmUoJy4vbGliL2h0bWw1LWVudGl0aWVzLmpzJylcclxufTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//#sourceURL=webpack-internal:///./node_modules/html-entities/index.js\n");/***/}),/***/"./node_modules/html-entities/lib/html4-entities.js":/*!**********************************************************!*\;!***./node_modules/html-entities/lib/html4-entities.js***!;\**********************************************************//*!no static exports found*//***/(function(module,exports){eval("var HTML_ALPHA=['apos','nbsp','iexcl','cent','pound','curren','yen','brvbar','sect','uml','copy','ordf','laquo','not','shy','reg','macr','deg','plusmn','sup2','sup3','acute','micro','para','middot','cedil','sup1','ordm','raquo','frac14','frac12','frac34','iquest','Agrave','Aacute','Acirc','Atilde','Auml','Aring','Aelig','Ccedil','Egrave','Eacute','Ecirc','Euml','Igrave','Iacute','Icirc','Iuml','ETH','Ntilde','Ograve','Oacute','Ocirc','Otilde','Ouml','times','Oslash','Ugrave','Uacute','Ucirc','Uuml','Yacute','THORN','szlig','agrave','aacute','acirc','atilde','auml','aring','aelig','ccedil','egrave','eacute','ecirc','euml','igrave','iacute','icirc','iuml','eth','ntilde','ograve','oacute','ocirc','otilde','ouml','divide','oslash','ugrave','uacute','ucirc','uuml','yacute','thorn','yuml','quot','amp','lt','gt','OElig','oelig','Scaron','scaron','Yuml','circ','tilde','ensp','emsp','thinsp','zwnj','zwj','lrm','rlm','ndash','mdash','lsquo','rsquo','sbquo','ldquo','rdquo','bdquo','dagger','Dagger','permil','lsaquo','rsaquo','euro','fnof','Alpha','Beta','Gamma','Delta','Epsilon','Zeta','Eta','Theta','Iota','Kappa','Lambda','Mu','Nu','Xi','Omicron','Pi','Rho','Sigma','Tau','Upsilon','Phi','Chi','Psi','Omega','alpha','beta','gamma','delta','epsilon','zeta','eta','theta','iota','kappa','lambda','mu','nu','xi','omicron','pi','rho','sigmaf','sigma','tau','upsilon','phi','chi','psi','omega','thetasym','upsih','piv','bull','hellip','prime','Prime','oline','frasl','weierp','image','real','trade','alefsym','larr','uarr','rarr','darr','harr','crarr','lArr','uArr','rArr','dArr','hArr','forall','part','exist','empty','nabla','isin','notin','ni','prod','sum','minus','lowast','radic','prop','infin','ang','and','or','cap','cup','int','there4','sim','cong','asymp','ne','equiv','le','ge','sub','sup','nsub','sube','supe','oplus','otimes','perp','sdot','lceil','rceil','lfloor','rfloor','lang','rang','loz','spades','clubs','hearts','diams'];\r\nvar HTML_CODES=[39,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,34,38,60,62,338,339,352,353,376,710,732,8194,8195,8201,8204,8205,8206,8207,8211,8212,8216,8217,8218,8220,8221,8222,8224,8225,8240,8249,8250,8364,402,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,977,978,982,8226,8230,8242,8243,8254,8260,8472,8465,8476,8482,8501,8592,8593,8594,8595,8596,8629,8656,8657,8658,8659,8660,8704,8706,8707,8709,8711,8712,8713,8715,8719,8721,8722,8727,8730,8733,8734,8736,8743,8744,8745,8746,8747,8756,8764,8773,8776,8800,8801,8804,8805,8834,8835,8836,8838,8839,8853,8855,8869,8901,8968,8969,8970,8971,9001,9002,9674,9824,9827,9829,9830];\r\n\r\nvar alphaIndex={};\r\nvar numIndex={};\r\n\r\nvar i=0;\r\nvar length=HTML_ALPHA.length;\r\nwhile(i<length){\r\n var a=HTML_ALPHA[i];\r\n var c=HTML_CODES[i];\r\n alphaIndex[a]=String.fromCharCode(c);\r\n numIndex[c]=a;\r\n i++;\r\n}\r\n\r\n/**\r\n*@constructor\r\n*/\r\nfunction Html4Entities(){}\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nHtml4Entities.prototype.decode=function(str){\r\n if(!str||!str.length){\r\n return'';\r\n}\r\n return str.replace(/&(#?[\\w\\d]+);?/g,function(s,entity){\r\n var chr;\r\n if(entity.charAt(0)===\"#\"){\r\n var code=entity.charAt(1).toLowerCase()==='x'?\r\n parseInt(entity.substr(2),16):\r\n parseInt(entity.substr(1));\r\n\r\n if(!(isNaN(code)||code<-32768||code>65535)){\r\n chr=String.fromCharCode(code);\r\n}\r\n}else{\r\n chr=alphaIndex[entity];\r\n}\r\n return chr||s;\r\n});\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nHtml4Entities.decode=function(str){\r\n return new Html4Entities().decode(str);\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nHtml4Entities.prototype.encode=function(str){\r\n if(!str||!str.length){\r\n return'';\r\n}\r\n var strLength=str.length;\r\n var result='';\r\n var i=0;\r\n while(i<strLength){\r\n var alpha=numIndex[str.charCodeAt(i)];\r\n result+=alpha?\"&\"+alpha+\";\":str.charAt(i);\r\n i++;\r\n}\r\n return result;\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nHtml4Entities.encode=function(str){\r\n return new Html4Entities().encode(str);\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nHtml4Entities.prototype.encodeNonUTF=function(str){\r\n if(!str||!str.length){\r\n return'';\r\n}\r\n var strLength=str.length;\r\n var result='';\r\n var i=0;\r\n while(i<strLength){\r\n var cc=str.charCodeAt(i);\r\n var alpha=numIndex[cc];\r\n if(alpha){\r\n result+=\"&\"+alpha+\";\";\r\n}else if(cc<32||cc>126){\r\n result+=\"&#\"+cc+\";\";\r\n}else{\r\n result+=str.charAt(i);\r\n}\r\n i++;\r\n}\r\n return result;\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nHtml4Entities.encodeNonUTF=function(str){\r\n return new Html4Entities().encodeNonUTF(str);\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nHtml4Entities.prototype.encodeNonASCII=function(str){\r\n if(!str||!str.length){\r\n return'';\r\n}\r\n var strLength=str.length;\r\n var result='';\r\n var i=0;\r\n while(i<strLength){\r\n var c=str.charCodeAt(i);\r\n if(c<=255){\r\n result+=str[i++];\r\n continue;\r\n}\r\n result+='&#'+c+';';\r\n i++;\r\n}\r\n return result;\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nHtml4Entities.encodeNonASCII=function(str){\r\n return new Html4Entities().encodeNonASCII(str);\r\n};\r\n\r\nmodule.exports=Html4Entities;\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,\n//#sourceURL=webpack-internal:///./node_modules/html-entities/lib/html4-entities.js\n");/***/}),/***/"./node_modules/html-entities/lib/html5-entities.js":/*!**********************************************************!*\;!***./node_modules/html-entities/lib/html5-entities.js***!;\**********************************************************//*!no static exports found*//***/(function(module,exports){eval("var ENTITIES=[['Aacute',[193]],['aacute',[225]],['Abreve',[258]],['abreve',[259]],['ac',[8766]],['acd',[8767]],['acE',[8766,819]],['Acirc',[194]],['acirc',[226]],['acute',[180]],['Acy',[1040]],['acy',[1072]],['AElig',[198]],['aelig',[230]],['af',[8289]],['Afr',[120068]],['afr',[120094]],['Agrave',[192]],['agrave',[224]],['alefsym',[8501]],['aleph',[8501]],['Alpha',[913]],['alpha',[945]],['Amacr',[256]],['amacr',[257]],['amalg',[10815]],['amp',[38]],['AMP',[38]],['andand',[10837]],['And',[10835]],['and',[8743]],['andd',[10844]],['andslope',[10840]],['andv',[10842]],['ang',[8736]],['ange',[10660]],['angle',[8736]],['angmsdaa',[10664]],['angmsdab',[10665]],['angmsdac',[10666]],['angmsdad',[10667]],['angmsdae',[10668]],['angmsdaf',[10669]],['angmsdag',[10670]],['angmsdah',[10671]],['angmsd',[8737]],['angrt',[8735]],['angrtvb',[8894]],['angrtvbd',[10653]],['angsph',[8738]],['angst',[197]],['angzarr',[9084]],['Aogon',[260]],['aogon',[261]],['Aopf',[120120]],['aopf',[120146]],['apacir',[10863]],['ap',[8776]],['apE',[10864]],['ape',[8778]],['apid',[8779]],['apos',[39]],['ApplyFunction',[8289]],['approx',[8776]],['approxeq',[8778]],['Aring',[197]],['aring',[229]],['Ascr',[119964]],['ascr',[119990]],['Assign',[8788]],['ast',[42]],['asymp',[8776]],['asympeq',[8781]],['Atilde',[195]],['atilde',[227]],['Auml',[196]],['auml',[228]],['awconint',[8755]],['awint',[10769]],['backcong',[8780]],['backepsilon',[1014]],['backprime',[8245]],['backsim',[8765]],['backsimeq',[8909]],['Backslash',[8726]],['Barv',[10983]],['barvee',[8893]],['barwed',[8965]],['Barwed',[8966]],['barwedge',[8965]],['bbrk',[9141]],['bbrktbrk',[9142]],['bcong',[8780]],['Bcy',[1041]],['bcy',[1073]],['bdquo',[8222]],['becaus',[8757]],['because',[8757]],['Because',[8757]],['bemptyv',[10672]],['bepsi',[1014]],['bernou',[8492]],['Bernoullis',[8492]],['Beta',[914]],['beta',[946]],['beth',[8502]],['between',[8812]],['Bfr',[120069]],['bfr',[120095]],['bigcap',[8898]],['bigcirc',[9711]],['bigcup',[8899]],['bigodot',[10752]],['bigoplus',[10753]],['bigotimes',[10754]],['bigsqcup',[10758]],['bigstar',[9733]],['bigtriangledown',[9661]],['bigtriangleup',[9651]],['biguplus',[10756]],['bigvee',[8897]],['bigwedge',[8896]],['bkarow',[10509]],['blacklozenge',[10731]],['blacksquare',[9642]],['blacktriangle',[9652]],['blacktriangledown',[9662]],['blacktriangleleft',[9666]],['blacktriangleright',[9656]],['blank',[9251]],['blk12',[9618]],['blk14',[9617]],['blk34',[9619]],['block',[9608]],['bne',[61,8421]],['bnequiv',[8801,8421]],['bNot',[10989]],['bnot',[8976]],['Bopf',[120121]],['bopf',[120147]],['bot',[8869]],['bottom',[8869]],['bowtie',[8904]],['boxbox',[10697]],['boxdl',[9488]],['boxdL',[9557]],['boxDl',[9558]],['boxDL',[9559]],['boxdr',[9484]],['boxdR',[9554]],['boxDr',[9555]],['boxDR',[9556]],['boxh',[9472]],['boxH',[9552]],['boxhd',[9516]],['boxHd',[9572]],['boxhD',[9573]],['boxHD',[9574]],['boxhu',[9524]],['boxHu',[9575]],['boxhU',[9576]],['boxHU',[9577]],['boxminus',[8863]],['boxplus',[8862]],['boxtimes',[8864]],['boxul',[9496]],['boxuL',[9563]],['boxUl',[9564]],['boxUL',[9565]],['boxur',[9492]],['boxuR',[9560]],['boxUr',[9561]],['boxUR',[9562]],['boxv',[9474]],['boxV',[9553]],['boxvh',[9532]],['boxvH',[9578]],['boxVh',[9579]],['boxVH',[9580]],['boxvl',[9508]],['boxvL',[9569]],['boxVl',[9570]],['boxVL',[9571]],['boxvr',[9500]],['boxvR',[9566]],['boxVr',[9567]],['boxVR',[9568]],['bprime',[8245]],['breve',[728]],['Breve',[728]],['brvbar',[166]],['bscr',[119991]],['Bscr',[8492]],['bsemi',[8271]],['bsim',[8765]],['bsime',[8909]],['bsolb',[10693]],['bsol',[92]],['bsolhsub',[10184]],['bull',[8226]],['bullet',[8226]],['bump',[8782]],['bumpE',[10926]],['bumpe',[8783]],['Bumpeq',[8782]],['bumpeq',[8783]],['Cacute',[262]],['cacute',[263]],['capand',[10820]],['capbrcup',[10825]],['capcap',[10827]],['cap',[8745]],['Cap',[8914]],['capcup',[10823]],['capdot',[10816]],['CapitalDifferentialD',[8517]],['caps',[8745,65024]],['caret',[8257]],['caron',[711]],['Cayleys',[8493]],['ccaps',[10829]],['Ccaron',[268]],['ccaron',[269]],['Ccedil',[199]],['ccedil',[231]],['Ccirc',[264]],['ccirc',[265]],['Cconint',[8752]],['ccups',[10828]],['ccupssm',[10832]],['Cdot',[266]],['cdot',[267]],['cedil',[184]],['Cedilla',[184]],['cemptyv',[10674]],['cent',[162]],['centerdot',[183]],['CenterDot',[183]],['cfr',[120096]],['Cfr',[8493]],['CHcy',[1063]],['chcy',[1095]],['check',[10003]],['checkmark',[10003]],['Chi',[935]],['chi',[967]],['circ',[710]],['circeq',[8791]],['circlearrowleft',[8634]],['circlearrowright',[8635]],['circledast',[8859]],['circledcirc',[8858]],['circleddash',[8861]],['CircleDot',[8857]],['circledR',[174]],['circledS',[9416]],['CircleMinus',[8854]],['CirclePlus',[8853]],['CircleTimes',[8855]],['cir',[9675]],['cirE',[10691]],['cire',[8791]],['cirfnint',[10768]],['cirmid',[10991]],['cirscir',[10690]],['ClockwiseContourIntegral',[8754]],['clubs',[9827]],['clubsuit',[9827]],['colon',[58]],['Colon',[8759]],['Colone',[10868]],['colone',[8788]],['coloneq',[8788]],['comma',[44]],['commat',[64]],['comp',[8705]],['compfn',[8728]],['complement',[8705]],['complexes',[8450]],['cong',[8773]],['congdot',[10861]],['Congruent',[8801]],['conint',[8750]],['Conint',[8751]],['ContourIntegral',[8750]],['copf',[120148]],['Copf',[8450]],['coprod',[8720]],['Coproduct',[8720]],['copy',[169]],['COPY',[169]],['copysr',[8471]],['CounterClockwiseContourIntegral',[8755]],['crarr',[8629]],['cross',[10007]],['Cross',[10799]],['Cscr',[119966]],['cscr',[119992]],['csub',[10959]],['csube',[10961]],['csup',[10960]],['csupe',[10962]],['ctdot',[8943]],['cudarrl',[10552]],['cudarrr',[10549]],['cuepr',[8926]],['cuesc',[8927]],['cularr',[8630]],['cularrp',[10557]],['cupbrcap',[10824]],['cupcap',[10822]],['CupCap',[8781]],['cup',[8746]],['Cup',[8915]],['cupcup',[10826]],['cupdot',[8845]],['cupor',[10821]],['cups',[8746,65024]],['curarr',[8631]],['curarrm',[10556]],['curlyeqprec',[8926]],['curlyeqsucc',[8927]],['curlyvee',[8910]],['curlywedge',[8911]],['curren',[164]],['curvearrowleft',[8630]],['curvearrowright',[8631]],['cuvee',[8910]],['cuwed',[8911]],['cwconint',[8754]],['cwint',[8753]],['cylcty',[9005]],['dagger',[8224]],['Dagger',[8225]],['daleth',[8504]],['darr',[8595]],['Darr',[8609]],['dArr',[8659]],['dash',[8208]],['Dashv',[10980]],['dashv',[8867]],['dbkarow',[10511]],['dblac',[733]],['Dcaron',[270]],['dcaron',[271]],['Dcy',[1044]],['dcy',[1076]],['ddagger',[8225]],['ddarr',[8650]],['DD',[8517]],['dd',[8518]],['DDotrahd',[10513]],['ddotseq',[10871]],['deg',[176]],['Del',[8711]],['Delta',[916]],['delta',[948]],['demptyv',[10673]],['dfisht',[10623]],['Dfr',[120071]],['dfr',[120097]],['dHar',[10597]],['dharl',[8643]],['dharr',[8642]],['DiacriticalAcute',[180]],['DiacriticalDot',[729]],['DiacriticalDoubleAcute',[733]],['DiacriticalGrave',[96]],['DiacriticalTilde',[732]],['diam',[8900]],['diamond',[8900]],['Diamond',[8900]],['diamondsuit',[9830]],['diams',[9830]],['die',[168]],['DifferentialD',[8518]],['digamma',[989]],['disin',[8946]],['div',[247]],['divide',[247]],['divideontimes',[8903]],['divonx',[8903]],['DJcy',[1026]],['djcy',[1106]],['dlcorn',[8990]],['dlcrop',[8973]],['dollar',[36]],['Dopf',[120123]],['dopf',[120149]],['Dot',[168]],['dot',[729]],['DotDot',[8412]],['doteq',[8784]],['doteqdot',[8785]],['DotEqual',[8784]],['dotminus',[8760]],['dotplus',[8724]],['dotsquare',[8865]],['doublebarwedge',[8966]],['DoubleContourIntegral',[8751]],['DoubleDot',[168]],['DoubleDownArrow',[8659]],['DoubleLeftArrow',[8656]],['DoubleLeftRightArrow',[8660]],['DoubleLeftTee',[10980]],['DoubleLongLeftArrow',[10232]],['DoubleLongLeftRightArrow',[10234]],['DoubleLongRightArrow',[10233]],['DoubleRightArrow',[8658]],['DoubleRightTee',[8872]],['DoubleUpArrow',[8657]],['DoubleUpDownArrow',[8661]],['DoubleVerticalBar',[8741]],['DownArrowBar',[10515]],['downarrow',[8595]],['DownArrow',[8595]],['Downarrow',[8659]],['DownArrowUpArrow',[8693]],['DownBreve',[785]],['downdownarrows',[8650]],['downharpoonleft',[8643]],['downharpoonright',[8642]],['DownLeftRightVector',[10576]],['DownLeftTeeVector',[10590]],['DownLeftVectorBar',[10582]],['DownLeftVector',[8637]],['DownRightTeeVector',[10591]],['DownRightVectorBar',[10583]],['DownRightVector',[8641]],['DownTeeArrow',[8615]],['DownTee',[8868]],['drbkarow',[10512]],['drcorn',[8991]],['drcrop',[8972]],['Dscr',[119967]],['dscr',[119993]],['DScy',[1029]],['dscy',[1109]],['dsol',[10742]],['Dstrok',[272]],['dstrok',[273]],['dtdot',[8945]],['dtri',[9663]],['dtrif',[9662]],['duarr',[8693]],['duhar',[10607]],['dwangle',[10662]],['DZcy',[1039]],['dzcy',[1119]],['dzigrarr',[10239]],['Eacute',[201]],['eacute',[233]],['easter',[10862]],['Ecaron',[282]],['ecaron',[283]],['Ecirc',[202]],['ecirc',[234]],['ecir',[8790]],['ecolon',[8789]],['Ecy',[1069]],['ecy',[1101]],['eDDot',[10871]],['Edot',[278]],['edot',[279]],['eDot',[8785]],['ee',[8519]],['efDot',[8786]],['Efr',[120072]],['efr',[120098]],['eg',[10906]],['Egrave',[200]],['egrave',[232]],['egs',[10902]],['egsdot',[10904]],['el',[10905]],['Element',[8712]],['elinters',[9191]],['ell',[8467]],['els',[10901]],['elsdot',[10903]],['Emacr',[274]],['emacr',[275]],['empty',[8709]],['emptyset',[8709]],['EmptySmallSquare',[9723]],['emptyv',[8709]],['EmptyVerySmallSquare',[9643]],['emsp13',[8196]],['emsp14',[8197]],['emsp',[8195]],['ENG',[330]],['eng',[331]],['ensp',[8194]],['Eogon',[280]],['eogon',[281]],['Eopf',[120124]],['eopf',[120150]],['epar',[8917]],['eparsl',[10723]],['eplus',[10865]],['epsi',[949]],['Epsilon',[917]],['epsilon',[949]],['epsiv',[1013]],['eqcirc',[8790]],['eqcolon',[8789]],['eqsim',[8770]],['eqslantgtr',[10902]],['eqslantless',[10901]],['Equal',[10869]],['equals',[61]],['EqualTilde',[8770]],['equest',[8799]],['Equilibrium',[8652]],['equiv',[8801]],['equivDD',[10872]],['eqvparsl',[10725]],['erarr',[10609]],['erDot',[8787]],['escr',[8495]],['Escr',[8496]],['esdot',[8784]],['Esim',[10867]],['esim',[8770]],['Eta',[919]],['eta',[951]],['ETH',[208]],['eth',[240]],['Euml',[203]],['euml',[235]],['euro',[8364]],['excl',[33]],['exist',[8707]],['Exists',[8707]],['expectation',[8496]],['exponentiale',[8519]],['ExponentialE',[8519]],['fallingdotseq',[8786]],['Fcy',[1060]],['fcy',[1092]],['female',[9792]],['ffilig',[64259]],['fflig',[64256]],['ffllig',[64260]],['Ffr',[120073]],['ffr',[120099]],['filig',[64257]],['FilledSmallSquare',[9724]],['FilledVerySmallSquare',[9642]],['fjlig',[102,106]],['flat',[9837]],['fllig',[64258]],['fltns',[9649]],['fnof',[402]],['Fopf',[120125]],['fopf',[120151]],['forall',[8704]],['ForAll',[8704]],['fork',[8916]],['forkv',[10969]],['Fouriertrf',[8497]],['fpartint',[10765]],['frac12',[189]],['frac13',[8531]],['frac14',[188]],['frac15',[8533]],['frac16',[8537]],['frac18',[8539]],['frac23',[8532]],['frac25',[8534]],['frac34',[190]],['frac35',[8535]],['frac38',[8540]],['frac45',[8536]],['frac56',[8538]],['frac58',[8541]],['frac78',[8542]],['frasl',[8260]],['frown',[8994]],['fscr',[119995]],['Fscr',[8497]],['gacute',[501]],['Gamma',[915]],['gamma',[947]],['Gammad',[988]],['gammad',[989]],['gap',[10886]],['Gbreve',[286]],['gbreve',[287]],['Gcedil',[290]],['Gcirc',[284]],['gcirc',[285]],['Gcy',[1043]],['gcy',[1075]],['Gdot',[288]],['gdot',[289]],['ge',[8805]],['gE',[8807]],['gEl',[10892]],['gel',[8923]],['geq',[8805]],['geqq',[8807]],['geqslant',[10878]],['gescc',[10921]],['ges',[10878]],['gesdot',[10880]],['gesdoto',[10882]],['gesdotol',[10884]],['gesl',[8923,65024]],['gesles',[10900]],['Gfr',[120074]],['gfr',[120100]],['gg',[8811]],['Gg',[8921]],['ggg',[8921]],['gimel',[8503]],['GJcy',[1027]],['gjcy',[1107]],['gla',[10917]],['gl',[8823]],['glE',[10898]],['glj',[10916]],['gnap',[10890]],['gnapprox',[10890]],['gne',[10888]],['gnE',[8809]],['gneq',[10888]],['gneqq',[8809]],['gnsim',[8935]],['Gopf',[120126]],['gopf',[120152]],['grave',[96]],['GreaterEqual',[8805]],['GreaterEqualLess',[8923]],['GreaterFullEqual',[8807]],['GreaterGreater',[10914]],['GreaterLess',[8823]],['GreaterSlantEqual',[10878]],['GreaterTilde',[8819]],['Gscr',[119970]],['gscr',[8458]],['gsim',[8819]],['gsime',[10894]],['gsiml',[10896]],['gtcc',[10919]],['gtcir',[10874]],['gt',[62]],['GT',[62]],['Gt',[8811]],['gtdot',[8919]],['gtlPar',[10645]],['gtquest',[10876]],['gtrapprox',[10886]],['gtrarr',[10616]],['gtrdot',[8919]],['gtreqless',[8923]],['gtreqqless',[10892]],['gtrless',[8823]],['gtrsim',[8819]],['gvertneqq',[8809,65024]],['gvnE',[8809,65024]],['Hacek',[711]],['hairsp',[8202]],['half',[189]],['hamilt',[8459]],['HARDcy',[1066]],['hardcy',[1098]],['harrcir',[10568]],['harr',[8596]],['hArr',[8660]],['harrw',[8621]],['Hat',[94]],['hbar',[8463]],['Hcirc',[292]],['hcirc',[293]],['hearts',[9829]],['heartsuit',[9829]],['hellip',[8230]],['hercon',[8889]],['hfr',[120101]],['Hfr',[8460]],['HilbertSpace',[8459]],['hksearow',[10533]],['hkswarow',[10534]],['hoarr',[8703]],['homtht',[8763]],['hookleftarrow',[8617]],['hookrightarrow',[8618]],['hopf',[120153]],['Hopf',[8461]],['horbar',[8213]],['HorizontalLine',[9472]],['hscr',[119997]],['Hscr',[8459]],['hslash',[8463]],['Hstrok',[294]],['hstrok',[295]],['HumpDownHump',[8782]],['HumpEqual',[8783]],['hybull',[8259]],['hyphen',[8208]],['Iacute',[205]],['iacute',[237]],['ic',[8291]],['Icirc',[206]],['icirc',[238]],['Icy',[1048]],['icy',[1080]],['Idot',[304]],['IEcy',[1045]],['iecy',[1077]],['iexcl',[161]],['iff',[8660]],['ifr',[120102]],['Ifr',[8465]],['Igrave',[204]],['igrave',[236]],['ii',[8520]],['iiiint',[10764]],['iiint',[8749]],['iinfin',[10716]],['iiota',[8489]],['IJlig',[306]],['ijlig',[307]],['Imacr',[298]],['imacr',[299]],['image',[8465]],['ImaginaryI',[8520]],['imagline',[8464]],['imagpart',[8465]],['imath',[305]],['Im',[8465]],['imof',[8887]],['imped',[437]],['Implies',[8658]],['incare',[8453]],['in',[8712]],['infin',[8734]],['infintie',[10717]],['inodot',[305]],['intcal',[8890]],['int',[8747]],['Int',[8748]],['integers',[8484]],['Integral',[8747]],['intercal',[8890]],['Intersection',[8898]],['intlarhk',[10775]],['intprod',[10812]],['InvisibleComma',[8291]],['InvisibleTimes',[8290]],['IOcy',[1025]],['iocy',[1105]],['Iogon',[302]],['iogon',[303]],['Iopf',[120128]],['iopf',[120154]],['Iota',[921]],['iota',[953]],['iprod',[10812]],['iquest',[191]],['iscr',[119998]],['Iscr',[8464]],['isin',[8712]],['isindot',[8949]],['isinE',[8953]],['isins',[8948]],['isinsv',[8947]],['isinv',[8712]],['it',[8290]],['Itilde',[296]],['itilde',[297]],['Iukcy',[1030]],['iukcy',[1110]],['Iuml',[207]],['iuml',[239]],['Jcirc',[308]],['jcirc',[309]],['Jcy',[1049]],['jcy',[1081]],['Jfr',[120077]],['jfr',[120103]],['jmath',[567]],['Jopf',[120129]],['jopf',[120155]],['Jscr',[119973]],['jscr',[119999]],['Jsercy',[1032]],['jsercy',[1112]],['Jukcy',[1028]],['jukcy',[1108]],['Kappa',[922]],['kappa',[954]],['kappav',[1008]],['Kcedil',[310]],['kcedil',[311]],['Kcy',[1050]],['kcy',[1082]],['Kfr',[120078]],['kfr',[120104]],['kgreen',[312]],['KHcy',[1061]],['khcy',[1093]],['KJcy',[1036]],['kjcy',[1116]],['Kopf',[120130]],['kopf',[120156]],['Kscr',[119974]],['kscr',[120000]],['lAarr',[8666]],['Lacute',[313]],['lacute',[314]],['laemptyv',[10676]],['lagran',[8466]],['Lambda',[923]],['lambda',[955]],['lang',[10216]],['Lang',[10218]],['langd',[10641]],['langle',[10216]],['lap',[10885]],['Laplacetrf',[8466]],['laquo',[171]],['larrb',[8676]],['larrbfs',[10527]],['larr',[8592]],['Larr',[8606]],['lArr',[8656]],['larrfs',[10525]],['larrhk',[8617]],['larrlp',[8619]],['larrpl',[10553]],['larrsim',[10611]],['larrtl',[8610]],['latail',[10521]],['lAtail',[10523]],['lat',[10923]],['late',[10925]],['lates',[10925,65024]],['lbarr',[10508]],['lBarr',[10510]],['lbbrk',[10098]],['lbrace',[123]],['lbrack',[91]],['lbrke',[10635]],['lbrksld',[10639]],['lbrkslu',[10637]],['Lcaron',[317]],['lcaron',[318]],['Lcedil',[315]],['lcedil',[316]],['lceil',[8968]],['lcub',[123]],['Lcy',[1051]],['lcy',[1083]],['ldca',[10550]],['ldquo',[8220]],['ldquor',[8222]],['ldrdhar',[10599]],['ldrushar',[10571]],['ldsh',[8626]],['le',[8804]],['lE',[8806]],['LeftAngleBracket',[10216]],['LeftArrowBar',[8676]],['leftarrow',[8592]],['LeftArrow',[8592]],['Leftarrow',[8656]],['LeftArrowRightArrow',[8646]],['leftarrowtail',[8610]],['LeftCeiling',[8968]],['LeftDoubleBracket',[10214]],['LeftDownTeeVector',[10593]],['LeftDownVectorBar',[10585]],['LeftDownVector',[8643]],['LeftFloor',[8970]],['leftharpoondown',[8637]],['leftharpoonup',[8636]],['leftleftarrows',[8647]],['leftrightarrow',[8596]],['LeftRightArrow',[8596]],['Leftrightarrow',[8660]],['leftrightarrows',[8646]],['leftrightharpoons',[8651]],['leftrightsquigarrow',[8621]],['LeftRightVector',[10574]],['LeftTeeArrow',[8612]],['LeftTee',[8867]],['LeftTeeVector',[10586]],['leftthreetimes',[8907]],['LeftTriangleBar',[10703]],['LeftTriangle',[8882]],['LeftTriangleEqual',[8884]],['LeftUpDownVector',[10577]],['LeftUpTeeVector',[10592]],['LeftUpVectorBar',[10584]],['LeftUpVector',[8639]],['LeftVectorBar',[10578]],['LeftVector',[8636]],['lEg',[10891]],['leg',[8922]],['leq',[8804]],['leqq',[8806]],['leqslant',[10877]],['lescc',[10920]],['les',[10877]],['lesdot',[10879]],['lesdoto',[10881]],['lesdotor',[10883]],['lesg',[8922,65024]],['lesges',[10899]],['lessapprox',[10885]],['lessdot',[8918]],['lesseqgtr',[8922]],['lesseqqgtr',[10891]],['LessEqualGreater',[8922]],['LessFullEqual',[8806]],['LessGreater',[8822]],['lessgtr',[8822]],['LessLess',[10913]],['lesssim',[8818]],['LessSlantEqual',[10877]],['LessTilde',[8818]],['lfisht',[10620]],['lfloor',[8970]],['Lfr',[120079]],['lfr',[120105]],['lg',[8822]],['lgE',[10897]],['lHar',[10594]],['lhard',[8637]],['lharu',[8636]],['lharul',[10602]],['lhblk',[9604]],['LJcy',[1033]],['ljcy',[1113]],['llarr',[8647]],['ll',[8810]],['Ll',[8920]],['llcorner',[8990]],['Lleftarrow',[8666]],['llhard',[10603]],['lltri',[9722]],['Lmidot',[319]],['lmidot',[320]],['lmoustache',[9136]],['lmoust',[9136]],['lnap',[10889]],['lnapprox',[10889]],['lne',[10887]],['lnE',[8808]],['lneq',[10887]],['lneqq',[8808]],['lnsim',[8934]],['loang',[10220]],['loarr',[8701]],['lobrk',[10214]],['longleftarrow',[10229]],['LongLeftArrow',[10229]],['Longleftarrow',[10232]],['longleftrightarrow',[10231]],['LongLeftRightArrow',[10231]],['Longleftrightarrow',[10234]],['longmapsto',[10236]],['longrightarrow',[10230]],['LongRightArrow',[10230]],['Longrightarrow',[10233]],['looparrowleft',[8619]],['looparrowright',[8620]],['lopar',[10629]],['Lopf',[120131]],['lopf',[120157]],['loplus',[10797]],['lotimes',[10804]],['lowast',[8727]],['lowbar',[95]],['LowerLeftArrow',[8601]],['LowerRightArrow',[8600]],['loz',[9674]],['lozenge',[9674]],['lozf',[10731]],['lpar',[40]],['lparlt',[10643]],['lrarr',[8646]],['lrcorner',[8991]],['lrhar',[8651]],['lrhard',[10605]],['lrm',[8206]],['lrtri',[8895]],['lsaquo',[8249]],['lscr',[120001]],['Lscr',[8466]],['lsh',[8624]],['Lsh',[8624]],['lsim',[8818]],['lsime',[10893]],['lsimg',[10895]],['lsqb',[91]],['lsquo',[8216]],['lsquor',[8218]],['Lstrok',[321]],['lstrok',[322]],['ltcc',[10918]],['ltcir',[10873]],['lt',[60]],['LT',[60]],['Lt',[8810]],['ltdot',[8918]],['lthree',[8907]],['ltimes',[8905]],['ltlarr',[10614]],['ltquest',[10875]],['ltri',[9667]],['ltrie',[8884]],['ltrif',[9666]],['ltrPar',[10646]],['lurdshar',[10570]],['luruhar',[10598]],['lvertneqq',[8808,65024]],['lvnE',[8808,65024]],['macr',[175]],['male',[9794]],['malt',[10016]],['maltese',[10016]],['Map',[10501]],['map',[8614]],['mapsto',[8614]],['mapstodown',[8615]],['mapstoleft',[8612]],['mapstoup',[8613]],['marker',[9646]],['mcomma',[10793]],['Mcy',[1052]],['mcy',[1084]],['mdash',[8212]],['mDDot',[8762]],['measuredangle',[8737]],['MediumSpace',[8287]],['Mellintrf',[8499]],['Mfr',[120080]],['mfr',[120106]],['mho',[8487]],['micro',[181]],['midast',[42]],['midcir',[10992]],['mid',[8739]],['middot',[183]],['minusb',[8863]],['minus',[8722]],['minusd',[8760]],['minusdu',[10794]],['MinusPlus',[8723]],['mlcp',[10971]],['mldr',[8230]],['mnplus',[8723]],['models',[8871]],['Mopf',[120132]],['mopf',[120158]],['mp',[8723]],['mscr',[120002]],['Mscr',[8499]],['mstpos',[8766]],['Mu',[924]],['mu',[956]],['multimap',[8888]],['mumap',[8888]],['nabla',[8711]],['Nacute',[323]],['nacute',[324]],['nang',[8736,8402]],['nap',[8777]],['napE',[10864,824]],['napid',[8779,824]],['napos',[329]],['napprox',[8777]],['natural',[9838]],['naturals',[8469]],['natur',[9838]],['nbsp',[160]],['nbump',[8782,824]],['nbumpe',[8783,824]],['ncap',[10819]],['Ncaron',[327]],['ncaron',[328]],['Ncedil',[325]],['ncedil',[326]],['ncong',[8775]],['ncongdot',[10861,824]],['ncup',[10818]],['Ncy',[1053]],['ncy',[1085]],['ndash',[8211]],['nearhk',[10532]],['nearr',[8599]],['neArr',[8663]],['nearrow',[8599]],['ne',[8800]],['nedot',[8784,824]],['NegativeMediumSpace',[8203]],['NegativeThickSpace',[8203]],['NegativeThinSpace',[8203]],['NegativeVeryThinSpace',[8203]],['nequiv',[8802]],['nesear',[10536]],['nesim',[8770,824]],['NestedGreaterGreater',[8811]],['NestedLessLess',[8810]],['nexist',[8708]],['nexists',[8708]],['Nfr',[120081]],['nfr',[120107]],['ngE',[8807,824]],['nge',[8817]],['ngeq',[8817]],['ngeqq',[8807,824]],['ngeqslant',[10878,824]],['nges',[10878,824]],['nGg',[8921,824]],['ngsim',[8821]],['nGt',[8811,8402]],['ngt',[8815]],['ngtr',[8815]],['nGtv',[8811,824]],['nharr',[8622]],['nhArr',[8654]],['nhpar',[10994]],['ni',[8715]],['nis',[8956]],['nisd',[8954]],['niv',[8715]],['NJcy',[1034]],['njcy',[1114]],['nlarr',[8602]],['nlArr',[8653]],['nldr',[8229]],['nlE',[8806,824]],['nle',[8816]],['nleftarrow',[8602]],['nLeftarrow',[8653]],['nleftrightarrow',[8622]],['nLeftrightarrow',[8654]],['nleq',[8816]],['nleqq',[8806,824]],['nleqslant',[10877,824]],['nles',[10877,824]],['nless',[8814]],['nLl',[8920,824]],['nlsim',[8820]],['nLt',[8810,8402]],['nlt',[8814]],['nltri',[8938]],['nltrie',[8940]],['nLtv',[8810,824]],['nmid',[8740]],['NoBreak',[8288]],['NonBreakingSpace',[160]],['nopf',[120159]],['Nopf',[8469]],['Not',[10988]],['not',[172]],['NotCongruent',[8802]],['NotCupCap',[8813]],['NotDoubleVerticalBar',[8742]],['NotElement',[8713]],['NotEqual',[8800]],['NotEqualTilde',[8770,824]],['NotExists',[8708]],['NotGreater',[8815]],['NotGreaterEqual',[8817]],['NotGreaterFullEqual',[8807,824]],['NotGreaterGreater',[8811,824]],['NotGreaterLess',[8825]],['NotGreaterSlantEqual',[10878,824]],['NotGreaterTilde',[8821]],['NotHumpDownHump',[8782,824]],['NotHumpEqual',[8783,824]],['notin',[8713]],['notindot',[8949,824]],['notinE',[8953,824]],['notinva',[8713]],['notinvb',[8951]],['notinvc',[8950]],['NotLeftTriangleBar',[10703,824]],['NotLeftTriangle',[8938]],['NotLeftTriangleEqual',[8940]],['NotLess',[8814]],['NotLessEqual',[8816]],['NotLessGreater',[8824]],['NotLessLess',[8810,824]],['NotLessSlantEqual',[10877,824]],['NotLessTilde',[8820]],['NotNestedGreaterGreater',[10914,824]],['NotNestedLessLess',[10913,824]],['notni',[8716]],['notniva',[8716]],['notnivb',[8958]],['notnivc',[8957]],['NotPrecedes',[8832]],['NotPrecedesEqual',[10927,824]],['NotPrecedesSlantEqual',[8928]],['NotReverseElement',[8716]],['NotRightTriangleBar',[10704,824]],['NotRightTriangle',[8939]],['NotRightTriangleEqual',[8941]],['NotSquareSubset',[8847,824]],['NotSquareSubsetEqual',[8930]],['NotSquareSuperset',[8848,824]],['NotSquareSupersetEqual',[8931]],['NotSubset',[8834,8402]],['NotSubsetEqual',[8840]],['NotSucceeds',[8833]],['NotSucceedsEqual',[10928,824]],['NotSucceedsSlantEqual',[8929]],['NotSucceedsTilde',[8831,824]],['NotSuperset',[8835,8402]],['NotSupersetEqual',[8841]],['NotTilde',[8769]],['NotTildeEqual',[8772]],['NotTildeFullEqual',[8775]],['NotTildeTilde',[8777]],['NotVerticalBar',[8740]],['nparallel',[8742]],['npar',[8742]],['nparsl',[11005,8421]],['npart',[8706,824]],['npolint',[10772]],['npr',[8832]],['nprcue',[8928]],['nprec',[8832]],['npreceq',[10927,824]],['npre',[10927,824]],['nrarrc',[10547,824]],['nrarr',[8603]],['nrArr',[8655]],['nrarrw',[8605,824]],['nrightarrow',[8603]],['nRightarrow',[8655]],['nrtri',[8939]],['nrtrie',[8941]],['nsc',[8833]],['nsccue',[8929]],['nsce',[10928,824]],['Nscr',[119977]],['nscr',[120003]],['nshortmid',[8740]],['nshortparallel',[8742]],['nsim',[8769]],['nsime',[8772]],['nsimeq',[8772]],['nsmid',[8740]],['nspar',[8742]],['nsqsube',[8930]],['nsqsupe',[8931]],['nsub',[8836]],['nsubE',[10949,824]],['nsube',[8840]],['nsubset',[8834,8402]],['nsubseteq',[8840]],['nsubseteqq',[10949,824]],['nsucc',[8833]],['nsucceq',[10928,824]],['nsup',[8837]],['nsupE',[10950,824]],['nsupe',[8841]],['nsupset',[8835,8402]],['nsupseteq',[8841]],['nsupseteqq',[10950,824]],['ntgl',[8825]],['Ntilde',[209]],['ntilde',[241]],['ntlg',[8824]],['ntriangleleft',[8938]],['ntrianglelefteq',[8940]],['ntriangleright',[8939]],['ntrianglerighteq',[8941]],['Nu',[925]],['nu',[957]],['num',[35]],['numero',[8470]],['numsp',[8199]],['nvap',[8781,8402]],['nvdash',[8876]],['nvDash',[8877]],['nVdash',[8878]],['nVDash',[8879]],['nvge',[8805,8402]],['nvgt',[62,8402]],['nvHarr',[10500]],['nvinfin',[10718]],['nvlArr',[10498]],['nvle',[8804,8402]],['nvlt',[60,8402]],['nvltrie',[8884,8402]],['nvrArr',[10499]],['nvrtrie',[8885,8402]],['nvsim',[8764,8402]],['nwarhk',[10531]],['nwarr',[8598]],['nwArr',[8662]],['nwarrow',[8598]],['nwnear',[10535]],['Oacute',[211]],['oacute',[243]],['oast',[8859]],['Ocirc',[212]],['ocirc',[244]],['ocir',[8858]],['Ocy',[1054]],['ocy',[1086]],['odash',[8861]],['Odblac',[336]],['odblac',[337]],['odiv',[10808]],['odot',[8857]],['odsold',[10684]],['OElig',[338]],['oelig',[339]],['ofcir',[10687]],['Ofr',[120082]],['ofr',[120108]],['ogon',[731]],['Ograve',[210]],['ograve',[242]],['ogt',[10689]],['ohbar',[10677]],['ohm',[937]],['oint',[8750]],['olarr',[8634]],['olcir',[10686]],['olcross',[10683]],['oline',[8254]],['olt',[10688]],['Omacr',[332]],['omacr',[333]],['Omega',[937]],['omega',[969]],['Omicron',[927]],['omicron',[959]],['omid',[10678]],['ominus',[8854]],['Oopf',[120134]],['oopf',[120160]],['opar',[10679]],['OpenCurlyDoubleQuote',[8220]],['OpenCurlyQuote',[8216]],['operp',[10681]],['oplus',[8853]],['orarr',[8635]],['Or',[10836]],['or',[8744]],['ord',[10845]],['order',[8500]],['orderof',[8500]],['ordf',[170]],['ordm',[186]],['origof',[8886]],['oror',[10838]],['orslope',[10839]],['orv',[10843]],['oS',[9416]],['Oscr',[119978]],['oscr',[8500]],['Oslash',[216]],['oslash',[248]],['osol',[8856]],['Otilde',[213]],['otilde',[245]],['otimesas',[10806]],['Otimes',[10807]],['otimes',[8855]],['Ouml',[214]],['ouml',[246]],['ovbar',[9021]],['OverBar',[8254]],['OverBrace',[9182]],['OverBracket',[9140]],['OverParenthesis',[9180]],['para',[182]],['parallel',[8741]],['par',[8741]],['parsim',[10995]],['parsl',[11005]],['part',[8706]],['PartialD',[8706]],['Pcy',[1055]],['pcy',[1087]],['percnt',[37]],['period',[46]],['permil',[8240]],['perp',[8869]],['pertenk',[8241]],['Pfr',[120083]],['pfr',[120109]],['Phi',[934]],['phi',[966]],['phiv',[981]],['phmmat',[8499]],['phone',[9742]],['Pi',[928]],['pi',[960]],['pitchfork',[8916]],['piv',[982]],['planck',[8463]],['planckh',[8462]],['plankv',[8463]],['plusacir',[10787]],['plusb',[8862]],['pluscir',[10786]],['plus',[43]],['plusdo',[8724]],['plusdu',[10789]],['pluse',[10866]],['PlusMinus',[177]],['plusmn',[177]],['plussim',[10790]],['plustwo',[10791]],['pm',[177]],['Poincareplane',[8460]],['pointint',[10773]],['popf',[120161]],['Popf',[8473]],['pound',[163]],['prap',[10935]],['Pr',[10939]],['pr',[8826]],['prcue',[8828]],['precapprox',[10935]],['prec',[8826]],['preccurlyeq',[8828]],['Precedes',[8826]],['PrecedesEqual',[10927]],['PrecedesSlantEqual',[8828]],['PrecedesTilde',[8830]],['preceq',[10927]],['precnapprox',[10937]],['precneqq',[10933]],['precnsim',[8936]],['pre',[10927]],['prE',[10931]],['precsim',[8830]],['prime',[8242]],['Prime',[8243]],['primes',[8473]],['prnap',[10937]],['prnE',[10933]],['prnsim',[8936]],['prod',[8719]],['Product',[8719]],['profalar',[9006]],['profline',[8978]],['profsurf',[8979]],['prop',[8733]],['Proportional',[8733]],['Proportion',[8759]],['propto',[8733]],['prsim',[8830]],['prurel',[8880]],['Pscr',[119979]],['pscr',[120005]],['Psi',[936]],['psi',[968]],['puncsp',[8200]],['Qfr',[120084]],['qfr',[120110]],['qint',[10764]],['qopf',[120162]],['Qopf',[8474]],['qprime',[8279]],['Qscr',[119980]],['qscr',[120006]],['quaternions',[8461]],['quatint',[10774]],['quest',[63]],['questeq',[8799]],['quot',[34]],['QUOT',[34]],['rAarr',[8667]],['race',[8765,817]],['Racute',[340]],['racute',[341]],['radic',[8730]],['raemptyv',[10675]],['rang',[10217]],['Rang',[10219]],['rangd',[10642]],['range',[10661]],['rangle',[10217]],['raquo',[187]],['rarrap',[10613]],['rarrb',[8677]],['rarrbfs',[10528]],['rarrc',[10547]],['rarr',[8594]],['Rarr',[8608]],['rArr',[8658]],['rarrfs',[10526]],['rarrhk',[8618]],['rarrlp',[8620]],['rarrpl',[10565]],['rarrsim',[10612]],['Rarrtl',[10518]],['rarrtl',[8611]],['rarrw',[8605]],['ratail',[10522]],['rAtail',[10524]],['ratio',[8758]],['rationals',[8474]],['rbarr',[10509]],['rBarr',[10511]],['RBarr',[10512]],['rbbrk',[10099]],['rbrace',[125]],['rbrack',[93]],['rbrke',[10636]],['rbrksld',[10638]],['rbrkslu',[10640]],['Rcaron',[344]],['rcaron',[345]],['Rcedil',[342]],['rcedil',[343]],['rceil',[8969]],['rcub',[125]],['Rcy',[1056]],['rcy',[1088]],['rdca',[10551]],['rdldhar',[10601]],['rdquo',[8221]],['rdquor',[8221]],['CloseCurlyDoubleQuote',[8221]],['rdsh',[8627]],['real',[8476]],['realine',[8475]],['realpart',[8476]],['reals',[8477]],['Re',[8476]],['rect',[9645]],['reg',[174]],['REG',[174]],['ReverseElement',[8715]],['ReverseEquilibrium',[8651]],['ReverseUpEquilibrium',[10607]],['rfisht',[10621]],['rfloor',[8971]],['rfr',[120111]],['Rfr',[8476]],['rHar',[10596]],['rhard',[8641]],['rharu',[8640]],['rharul',[10604]],['Rho',[929]],['rho',[961]],['rhov',[1009]],['RightAngleBracket',[10217]],['RightArrowBar',[8677]],['rightarrow',[8594]],['RightArrow',[8594]],['Rightarrow',[8658]],['RightArrowLeftArrow',[8644]],['rightarrowtail',[8611]],['RightCeiling',[8969]],['RightDoubleBracket',[10215]],['RightDownTeeVector',[10589]],['RightDownVectorBar',[10581]],['RightDownVector',[8642]],['RightFloor',[8971]],['rightharpoondown',[8641]],['rightharpoonup',[8640]],['rightleftarrows',[8644]],['rightleftharpoons',[8652]],['rightrightarrows',[8649]],['rightsquigarrow',[8605]],['RightTeeArrow',[8614]],['RightTee',[8866]],['RightTeeVector',[10587]],['rightthreetimes',[8908]],['RightTriangleBar',[10704]],['RightTriangle',[8883]],['RightTriangleEqual',[8885]],['RightUpDownVector',[10575]],['RightUpTeeVector',[10588]],['RightUpVectorBar',[10580]],['RightUpVector',[8638]],['RightVectorBar',[10579]],['RightVector',[8640]],['ring',[730]],['risingdotseq',[8787]],['rlarr',[8644]],['rlhar',[8652]],['rlm',[8207]],['rmoustache',[9137]],['rmoust',[9137]],['rnmid',[10990]],['roang',[10221]],['roarr',[8702]],['robrk',[10215]],['ropar',[10630]],['ropf',[120163]],['Ropf',[8477]],['roplus',[10798]],['rotimes',[10805]],['RoundImplies',[10608]],['rpar',[41]],['rpargt',[10644]],['rppolint',[10770]],['rrarr',[8649]],['Rrightarrow',[8667]],['rsaquo',[8250]],['rscr',[120007]],['Rscr',[8475]],['rsh',[8625]],['Rsh',[8625]],['rsqb',[93]],['rsquo',[8217]],['rsquor',[8217]],['CloseCurlyQuote',[8217]],['rthree',[8908]],['rtimes',[8906]],['rtri',[9657]],['rtrie',[8885]],['rtrif',[9656]],['rtriltri',[10702]],['RuleDelayed',[10740]],['ruluhar',[10600]],['rx',[8478]],['Sacute',[346]],['sacute',[347]],['sbquo',[8218]],['scap',[10936]],['Scaron',[352]],['scaron',[353]],['Sc',[10940]],['sc',[8827]],['sccue',[8829]],['sce',[10928]],['scE',[10932]],['Scedil',[350]],['scedil',[351]],['Scirc',[348]],['scirc',[349]],['scnap',[10938]],['scnE',[10934]],['scnsim',[8937]],['scpolint',[10771]],['scsim',[8831]],['Scy',[1057]],['scy',[1089]],['sdotb',[8865]],['sdot',[8901]],['sdote',[10854]],['searhk',[10533]],['searr',[8600]],['seArr',[8664]],['searrow',[8600]],['sect',[167]],['semi',[59]],['seswar',[10537]],['setminus',[8726]],['setmn',[8726]],['sext',[10038]],['Sfr',[120086]],['sfr',[120112]],['sfrown',[8994]],['sharp',[9839]],['SHCHcy',[1065]],['shchcy',[1097]],['SHcy',[1064]],['shcy',[1096]],['ShortDownArrow',[8595]],['ShortLeftArrow',[8592]],['shortmid',[8739]],['shortparallel',[8741]],['ShortRightArrow',[8594]],['ShortUpArrow',[8593]],['shy',[173]],['Sigma',[931]],['sigma',[963]],['sigmaf',[962]],['sigmav',[962]],['sim',[8764]],['simdot',[10858]],['sime',[8771]],['simeq',[8771]],['simg',[10910]],['simgE',[10912]],['siml',[10909]],['simlE',[10911]],['simne',[8774]],['simplus',[10788]],['simrarr',[10610]],['slarr',[8592]],['SmallCircle',[8728]],['smallsetminus',[8726]],['smashp',[10803]],['smeparsl',[10724]],['smid',[8739]],['smile',[8995]],['smt',[10922]],['smte',[10924]],['smtes',[10924,65024]],['SOFTcy',[1068]],['softcy',[1100]],['solbar',[9023]],['solb',[10692]],['sol',[47]],['Sopf',[120138]],['sopf',[120164]],['spades',[9824]],['spadesuit',[9824]],['spar',[8741]],['sqcap',[8851]],['sqcaps',[8851,65024]],['sqcup',[8852]],['sqcups',[8852,65024]],['Sqrt',[8730]],['sqsub',[8847]],['sqsube',[8849]],['sqsubset',[8847]],['sqsubseteq',[8849]],['sqsup',[8848]],['sqsupe',[8850]],['sqsupset',[8848]],['sqsupseteq',[8850]],['square',[9633]],['Square',[9633]],['SquareIntersection',[8851]],['SquareSubset',[8847]],['SquareSubsetEqual',[8849]],['SquareSuperset',[8848]],['SquareSupersetEqual',[8850]],['SquareUnion',[8852]],['squarf',[9642]],['squ',[9633]],['squf',[9642]],['srarr',[8594]],['Sscr',[119982]],['sscr',[120008]],['ssetmn',[8726]],['ssmile',[8995]],['sstarf',[8902]],['Star',[8902]],['star',[9734]],['starf',[9733]],['straightepsilon',[1013]],['straightphi',[981]],['strns',[175]],['sub',[8834]],['Sub',[8912]],['subdot',[10941]],['subE',[10949]],['sube',[8838]],['subedot',[10947]],['submult',[10945]],['subnE',[10955]],['subne',[8842]],['subplus',[10943]],['subrarr',[10617]],['subset',[8834]],['Subset',[8912]],['subseteq',[8838]],['subseteqq',[10949]],['SubsetEqual',[8838]],['subsetneq',[8842]],['subsetneqq',[10955]],['subsim',[10951]],['subsub',[10965]],['subsup',[10963]],['succapprox',[10936]],['succ',[8827]],['succcurlyeq',[8829]],['Succeeds',[8827]],['SucceedsEqual',[10928]],['SucceedsSlantEqual',[8829]],['SucceedsTilde',[8831]],['succeq',[10928]],['succnapprox',[10938]],['succneqq',[10934]],['succnsim',[8937]],['succsim',[8831]],['SuchThat',[8715]],['sum',[8721]],['Sum',[8721]],['sung',[9834]],['sup1',[185]],['sup2',[178]],['sup3',[179]],['sup',[8835]],['Sup',[8913]],['supdot',[10942]],['supdsub',[10968]],['supE',[10950]],['supe',[8839]],['supedot',[10948]],['Superset',[8835]],['SupersetEqual',[8839]],['suphsol',[10185]],['suphsub',[10967]],['suplarr',[10619]],['supmult',[10946]],['supnE',[10956]],['supne',[8843]],['supplus',[10944]],['supset',[8835]],['Supset',[8913]],['supseteq',[8839]],['supseteqq',[10950]],['supsetneq',[8843]],['supsetneqq',[10956]],['supsim',[10952]],['supsub',[10964]],['supsup',[10966]],['swarhk',[10534]],['swarr',[8601]],['swArr',[8665]],['swarrow',[8601]],['swnwar',[10538]],['szlig',[223]],['Tab',[9]],['target',[8982]],['Tau',[932]],['tau',[964]],['tbrk',[9140]],['Tcaron',[356]],['tcaron',[357]],['Tcedil',[354]],['tcedil',[355]],['Tcy',[1058]],['tcy',[1090]],['tdot',[8411]],['telrec',[8981]],['Tfr',[120087]],['tfr',[120113]],['there4',[8756]],['therefore',[8756]],['Therefore',[8756]],['Theta',[920]],['theta',[952]],['thetasym',[977]],['thetav',[977]],['thickapprox',[8776]],['thicksim',[8764]],['ThickSpace',[8287,8202]],['ThinSpace',[8201]],['thinsp',[8201]],['thkap',[8776]],['thksim',[8764]],['THORN',[222]],['thorn',[254]],['tilde',[732]],['Tilde',[8764]],['TildeEqual',[8771]],['TildeFullEqual',[8773]],['TildeTilde',[8776]],['timesbar',[10801]],['timesb',[8864]],['times',[215]],['timesd',[10800]],['tint',[8749]],['toea',[10536]],['topbot',[9014]],['topcir',[10993]],['top',[8868]],['Topf',[120139]],['topf',[120165]],['topfork',[10970]],['tosa',[10537]],['tprime',[8244]],['trade',[8482]],['TRADE',[8482]],['triangle',[9653]],['triangledown',[9663]],['triangleleft',[9667]],['trianglelefteq',[8884]],['triangleq',[8796]],['triangleright',[9657]],['trianglerighteq',[8885]],['tridot',[9708]],['trie',[8796]],['triminus',[10810]],['TripleDot',[8411]],['triplus',[10809]],['trisb',[10701]],['tritime',[10811]],['trpezium',[9186]],['Tscr',[119983]],['tscr',[120009]],['TScy',[1062]],['tscy',[1094]],['TSHcy',[1035]],['tshcy',[1115]],['Tstrok',[358]],['tstrok',[359]],['twixt',[8812]],['twoheadleftarrow',[8606]],['twoheadrightarrow',[8608]],['Uacute',[218]],['uacute',[250]],['uarr',[8593]],['Uarr',[8607]],['uArr',[8657]],['Uarrocir',[10569]],['Ubrcy',[1038]],['ubrcy',[1118]],['Ubreve',[364]],['ubreve',[365]],['Ucirc',[219]],['ucirc',[251]],['Ucy',[1059]],['ucy',[1091]],['udarr',[8645]],['Udblac',[368]],['udblac',[369]],['udhar',[10606]],['ufisht',[10622]],['Ufr',[120088]],['ufr',[120114]],['Ugrave',[217]],['ugrave',[249]],['uHar',[10595]],['uharl',[8639]],['uharr',[8638]],['uhblk',[9600]],['ulcorn',[8988]],['ulcorner',[8988]],['ulcrop',[8975]],['ultri',[9720]],['Umacr',[362]],['umacr',[363]],['uml',[168]],['UnderBar',[95]],['UnderBrace',[9183]],['UnderBracket',[9141]],['UnderParenthesis',[9181]],['Union',[8899]],['UnionPlus',[8846]],['Uogon',[370]],['uogon',[371]],['Uopf',[120140]],['uopf',[120166]],['UpArrowBar',[10514]],['uparrow',[8593]],['UpArrow',[8593]],['Uparrow',[8657]],['UpArrowDownArrow',[8645]],['updownarrow',[8597]],['UpDownArrow',[8597]],['Updownarrow',[8661]],['UpEquilibrium',[10606]],['upharpoonleft',[8639]],['upharpoonright',[8638]],['uplus',[8846]],['UpperLeftArrow',[8598]],['UpperRightArrow',[8599]],['upsi',[965]],['Upsi',[978]],['upsih',[978]],['Upsilon',[933]],['upsilon',[965]],['UpTeeArrow',[8613]],['UpTee',[8869]],['upuparrows',[8648]],['urcorn',[8989]],['urcorner',[8989]],['urcrop',[8974]],['Uring',[366]],['uring',[367]],['urtri',[9721]],['Uscr',[119984]],['uscr',[120010]],['utdot',[8944]],['Utilde',[360]],['utilde',[361]],['utri',[9653]],['utrif',[9652]],['uuarr',[8648]],['Uuml',[220]],['uuml',[252]],['uwangle',[10663]],['vangrt',[10652]],['varepsilon',[1013]],['varkappa',[1008]],['varnothing',[8709]],['varphi',[981]],['varpi',[982]],['varpropto',[8733]],['varr',[8597]],['vArr',[8661]],['varrho',[1009]],['varsigma',[962]],['varsubsetneq',[8842,65024]],['varsubsetneqq',[10955,65024]],['varsupsetneq',[8843,65024]],['varsupsetneqq',[10956,65024]],['vartheta',[977]],['vartriangleleft',[8882]],['vartriangleright',[8883]],['vBar',[10984]],['Vbar',[10987]],['vBarv',[10985]],['Vcy',[1042]],['vcy',[1074]],['vdash',[8866]],['vDash',[8872]],['Vdash',[8873]],['VDash',[8875]],['Vdashl',[10982]],['veebar',[8891]],['vee',[8744]],['Vee',[8897]],['veeeq',[8794]],['vellip',[8942]],['verbar',[124]],['Verbar',[8214]],['vert',[124]],['Vert',[8214]],['VerticalBar',[8739]],['VerticalLine',[124]],['VerticalSeparator',[10072]],['VerticalTilde',[8768]],['VeryThinSpace',[8202]],['Vfr',[120089]],['vfr',[120115]],['vltri',[8882]],['vnsub',[8834,8402]],['vnsup',[8835,8402]],['Vopf',[120141]],['vopf',[120167]],['vprop',[8733]],['vrtri',[8883]],['Vscr',[119985]],['vscr',[120011]],['vsubnE',[10955,65024]],['vsubne',[8842,65024]],['vsupnE',[10956,65024]],['vsupne',[8843,65024]],['Vvdash',[8874]],['vzigzag',[10650]],['Wcirc',[372]],['wcirc',[373]],['wedbar',[10847]],['wedge',[8743]],['Wedge',[8896]],['wedgeq',[8793]],['weierp',[8472]],['Wfr',[120090]],['wfr',[120116]],['Wopf',[120142]],['wopf',[120168]],['wp',[8472]],['wr',[8768]],['wreath',[8768]],['Wscr',[119986]],['wscr',[120012]],['xcap',[8898]],['xcirc',[9711]],['xcup',[8899]],['xdtri',[9661]],['Xfr',[120091]],['xfr',[120117]],['xharr',[10231]],['xhArr',[10234]],['Xi',[926]],['xi',[958]],['xlarr',[10229]],['xlArr',[10232]],['xmap',[10236]],['xnis',[8955]],['xodot',[10752]],['Xopf',[120143]],['xopf',[120169]],['xoplus',[10753]],['xotime',[10754]],['xrarr',[10230]],['xrArr',[10233]],['Xscr',[119987]],['xscr',[120013]],['xsqcup',[10758]],['xuplus',[10756]],['xutri',[9651]],['xvee',[8897]],['xwedge',[8896]],['Yacute',[221]],['yacute',[253]],['YAcy',[1071]],['yacy',[1103]],['Ycirc',[374]],['ycirc',[375]],['Ycy',[1067]],['ycy',[1099]],['yen',[165]],['Yfr',[120092]],['yfr',[120118]],['YIcy',[1031]],['yicy',[1111]],['Yopf',[120144]],['yopf',[120170]],['Yscr',[119988]],['yscr',[120014]],['YUcy',[1070]],['yucy',[1102]],['yuml',[255]],['Yuml',[376]],['Zacute',[377]],['zacute',[378]],['Zcaron',[381]],['zcaron',[382]],['Zcy',[1047]],['zcy',[1079]],['Zdot',[379]],['zdot',[380]],['zeetrf',[8488]],['ZeroWidthSpace',[8203]],['Zeta',[918]],['zeta',[950]],['zfr',[120119]],['Zfr',[8488]],['ZHcy',[1046]],['zhcy',[1078]],['zigrarr',[8669]],['zopf',[120171]],['Zopf',[8484]],['Zscr',[119989]],['zscr',[120015]],['zwj',[8205]],['zwnj',[8204]]];\r\n\r\nvar alphaIndex={};\r\nvar charIndex={};\r\n\r\ncreateIndexes(alphaIndex,charIndex);\r\n\r\n/**\r\n*@constructor\r\n*/\r\nfunction Html5Entities(){}\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nHtml5Entities.prototype.decode=function(str){\r\n if(!str||!str.length){\r\n return'';\r\n}\r\n return str.replace(/&(#?[\\w\\d]+);?/g,function(s,entity){\r\n var chr;\r\n if(entity.charAt(0)===\"#\"){\r\n var code=entity.charAt(1)==='x'?\r\n parseInt(entity.substr(2).toLowerCase(),16):\r\n parseInt(entity.substr(1));\r\n\r\n if(!(isNaN(code)||code<-32768||code>65535)){\r\n chr=String.fromCharCode(code);\r\n}\r\n}else{\r\n chr=alphaIndex[entity];\r\n}\r\n return chr||s;\r\n});\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\n Html5Entities.decode=function(str){\r\n return new Html5Entities().decode(str);\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nHtml5Entities.prototype.encode=function(str){\r\n if(!str||!str.length){\r\n return'';\r\n}\r\n var strLength=str.length;\r\n var result='';\r\n var i=0;\r\n while(i<strLength){\r\n var charInfo=charIndex[str.charCodeAt(i)];\r\n if(charInfo){\r\n var alpha=charInfo[str.charCodeAt(i+1)];\r\n if(alpha){\r\n i++;\r\n}else{\r\n alpha=charInfo[''];\r\n}\r\n if(alpha){\r\n result+=\"&\"+alpha+\";\";\r\n i++;\r\n continue;\r\n}\r\n}\r\n result+=str.charAt(i);\r\n i++;\r\n}\r\n return result;\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\n Html5Entities.encode=function(str){\r\n return new Html5Entities().encode(str);\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nHtml5Entities.prototype.encodeNonUTF=function(str){\r\n if(!str||!str.length){\r\n return'';\r\n}\r\n var strLength=str.length;\r\n var result='';\r\n var i=0;\r\n while(i<strLength){\r\n var c=str.charCodeAt(i);\r\n var charInfo=charIndex[c];\r\n if(charInfo){\r\n var alpha=charInfo[str.charCodeAt(i+1)];\r\n if(alpha){\r\n i++;\r\n}else{\r\n alpha=charInfo[''];\r\n}\r\n if(alpha){\r\n result+=\"&\"+alpha+\";\";\r\n i++;\r\n continue;\r\n}\r\n}\r\n if(c<32||c>126){\r\n result+='&#'+c+';';\r\n}else{\r\n result+=str.charAt(i);\r\n}\r\n i++;\r\n}\r\n return result;\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\n Html5Entities.encodeNonUTF=function(str){\r\n return new Html5Entities().encodeNonUTF(str);\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nHtml5Entities.prototype.encodeNonASCII=function(str){\r\n if(!str||!str.length){\r\n return'';\r\n}\r\n var strLength=str.length;\r\n var result='';\r\n var i=0;\r\n while(i<strLength){\r\n var c=str.charCodeAt(i);\r\n if(c<=255){\r\n result+=str[i++];\r\n continue;\r\n}\r\n result+='&#'+c+';';\r\n i++\r\n}\r\n return result;\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\n Html5Entities.encodeNonASCII=function(str){\r\n return new Html5Entities().encodeNonASCII(str);\r\n};\r\n\r\n/**\r\n*@param{Object}alphaIndex Passed by reference.\r\n*@param{Object}charIndex Passed by reference.\r\n*/\r\nfunction createIndexes(alphaIndex,charIndex){\r\n var i=ENTITIES.length;\r\n var _results=[];\r\n while(i--){\r\n var e=ENTITIES[i];\r\n var alpha=e[0];\r\n var chars=e[1];\r\n var chr=chars[0];\r\n var addChar=(chr<32||chr>126)||chr===62||chr===60||chr===38||chr===34||chr===39;\r\n var charInfo;\r\n if(addChar){\r\n charInfo=charIndex[chr]=charIndex[chr]||{};\r\n}\r\n if(chars[1]){\r\n var chr2=chars[1];\r\n alphaIndex[alpha]=String.fromCharCode(chr)+String.fromCharCode(chr2);\r\n _results.push(addChar&&(charInfo[chr2]=alpha));\r\n}else{\r\n alphaIndex[alpha]=String.fromCharCode(chr);\r\n _results.push(addChar&&(charInfo['']=alpha));\r\n}\r\n}\r\n}\r\n\r\nmodule.exports=Html5Entities;\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,\n//#sourceURL=webpack-internal:///./node_modules/html-entities/lib/html5-entities.js\n");/***/}),/***/"./node_modules/html-entities/lib/xml-entities.js":/*!********************************************************!*\;!***./node_modules/html-entities/lib/xml-entities.js***!;\********************************************************//*!no static exports found*//***/(function(module,exports){eval("var ALPHA_INDEX={\r\n'&lt':'<',\r\n'&gt':'>',\r\n'&quot':'\"',\r\n'&apos':'\\'',\r\n'&amp':'&',\r\n'&lt;':'<',\r\n'&gt;':'>',\r\n'&quot;':'\"',\r\n'&apos;':'\\'',\r\n'&amp;':'&'\r\n};\r\n\r\nvar CHAR_INDEX={\r\n 60:'lt',\r\n 62:'gt',\r\n 34:'quot',\r\n 39:'apos',\r\n 38:'amp'\r\n};\r\n\r\nvar CHAR_S_INDEX={\r\n'<':'&lt;',\r\n'>':'&gt;',\r\n'\"':'&quot;',\r\n'\\'':'&apos;',\r\n'&':'&amp;'\r\n};\r\n\r\n/**\r\n*@constructor\r\n*/\r\nfunction XmlEntities(){}\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nXmlEntities.prototype.encode=function(str){\r\n if(!str||!str.length){\r\n return'';\r\n}\r\n return str.replace(/<|>|\"|'|&/g,function(s){\r\n return CHAR_S_INDEX[s];\r\n});\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\n XmlEntities.encode=function(str){\r\n return new XmlEntities().encode(str);\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nXmlEntities.prototype.decode=function(str){\r\n if(!str||!str.length){\r\n return'';\r\n}\r\n return str.replace(/&#?[0-9a-zA-Z]+;?/g,function(s){\r\n if(s.charAt(1)==='#'){\r\n var code=s.charAt(2).toLowerCase()==='x'?\r\n parseInt(s.substr(3),16):\r\n parseInt(s.substr(2));\r\n\r\n if(isNaN(code)||code<-32768||code>65535){\r\n return'';\r\n}\r\n return String.fromCharCode(code);\r\n}\r\n return ALPHA_INDEX[s]||s;\r\n});\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\n XmlEntities.decode=function(str){\r\n return new XmlEntities().decode(str);\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nXmlEntities.prototype.encodeNonUTF=function(str){\r\n if(!str||!str.length){\r\n return'';\r\n}\r\n var strLength=str.length;\r\n var result='';\r\n var i=0;\r\n while(i<strLength){\r\n var c=str.charCodeAt(i);\r\n var alpha=CHAR_INDEX[c];\r\n if(alpha){\r\n result+=\"&\"+alpha+\";\";\r\n i++;\r\n continue;\r\n}\r\n if(c<32||c>126){\r\n result+='&#'+c+';';\r\n}else{\r\n result+=str.charAt(i);\r\n}\r\n i++;\r\n}\r\n return result;\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\n XmlEntities.encodeNonUTF=function(str){\r\n return new XmlEntities().encodeNonUTF(str);\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\nXmlEntities.prototype.encodeNonASCII=function(str){\r\n if(!str||!str.length){\r\n return'';\r\n}\r\n var strLenght=str.length;\r\n var result='';\r\n var i=0;\r\n while(i<strLenght){\r\n var c=str.charCodeAt(i);\r\n if(c<=255){\r\n result+=str[i++];\r\n continue;\r\n}\r\n result+='&#'+c+';';\r\n i++;\r\n}\r\n return result;\r\n};\r\n\r\n/**\r\n*@param{String}str\r\n*@returns{String}\r\n*/\r\n XmlEntities.encodeNonASCII=function(str){\r\n return new XmlEntities().encodeNonASCII(str);\r\n};\r\n\r\nmodule.exports=XmlEntities;\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1lbnRpdGllcy9saWIveG1sLWVudGl0aWVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2h0bWwtZW50aXRpZXMvbGliL3htbC1lbnRpdGllcy5qcz81MDI5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBBTFBIQV9JTkRFWCA9IHtcclxuICAgICcmbHQnOiAnPCcsXHJcbiAgICAnJmd0JzogJz4nLFxyXG4gICAgJyZxdW90JzogJ1wiJyxcclxuICAgICcmYXBvcyc6ICdcXCcnLFxyXG4gICAgJyZhbXAnOiAnJicsXHJcbiAgICAnJmx0Oyc6ICc8JyxcclxuICAgICcmZ3Q7JzogJz4nLFxyXG4gICAgJyZxdW90Oyc6ICdcIicsXHJcbiAgICAnJmFwb3M7JzogJ1xcJycsXHJcbiAgICAnJmFtcDsnOiAnJidcclxufTtcclxuXHJcbnZhciBDSEFSX0lOREVYID0ge1xyXG4gICAgNjA6ICdsdCcsXHJcbiAgICA2MjogJ2d0JyxcclxuICAgIDM0OiAncXVvdCcsXHJcbiAgICAzOTogJ2Fwb3MnLFxyXG4gICAgMzg6ICdhbXAnXHJcbn07XHJcblxyXG52YXIgQ0hBUl9TX0lOREVYID0ge1xyXG4gICAgJzwnOiAnJmx0OycsXHJcbiAgICAnPic6ICcmZ3Q7JyxcclxuICAgICdcIic6ICcmcXVvdDsnLFxyXG4gICAgJ1xcJyc6ICcmYXBvczsnLFxyXG4gICAgJyYnOiAnJmFtcDsnXHJcbn07XHJcblxyXG4vKipcclxuICogQGNvbnN0cnVjdG9yXHJcbiAqL1xyXG5mdW5jdGlvbiBYbWxFbnRpdGllcygpIHt9XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxyXG4gKiBAcmV0dXJucyB7U3RyaW5nfVxyXG4gKi9cclxuWG1sRW50aXRpZXMucHJvdG90eXBlLmVuY29kZSA9IGZ1bmN0aW9uKHN0cikge1xyXG4gICAgaWYgKCFzdHIgfHwgIXN0ci5sZW5ndGgpIHtcclxuICAgICAgICByZXR1cm4gJyc7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gc3RyLnJlcGxhY2UoLzx8PnxcInwnfCYvZywgZnVuY3Rpb24ocykge1xyXG4gICAgICAgIHJldHVybiBDSEFSX1NfSU5ERVhbc107XHJcbiAgICB9KTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXHJcbiAqIEByZXR1cm5zIHtTdHJpbmd9XHJcbiAqL1xyXG4gWG1sRW50aXRpZXMuZW5jb2RlID0gZnVuY3Rpb24oc3RyKSB7XHJcbiAgICByZXR1cm4gbmV3IFhtbEVudGl0aWVzKCkuZW5jb2RlKHN0cik7XHJcbiB9O1xyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcclxuICogQHJldHVybnMge1N0cmluZ31cclxuICovXHJcblhtbEVudGl0aWVzLnByb3RvdHlwZS5kZWNvZGUgPSBmdW5jdGlvbihzdHIpIHtcclxuICAgIGlmICghc3RyIHx8ICFzdHIubGVuZ3RoKSB7XHJcbiAgICAgICAgcmV0dXJuICcnO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKC8mIz9bMC05YS16QS1aXSs7Py9nLCBmdW5jdGlvbihzKSB7XHJcbiAgICAgICAgaWYgKHMuY2hhckF0KDEpID09PSAnIycpIHtcclxuICAgICAgICAgICAgdmFyIGNvZGUgPSBzLmNoYXJBdCgyKS50b0xvd2VyQ2FzZSgpID09PSAneCcgP1xyXG4gICAgICAgICAgICAgICAgcGFyc2VJbnQocy5zdWJzdHIoMyksIDE2KSA6XHJcbiAgICAgICAgICAgICAgICBwYXJzZUludChzLnN1YnN0cigyKSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoaXNOYU4oY29kZSkgfHwgY29kZSA8IC0zMjc2OCB8fCBjb2RlID4gNjU1MzUpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAnJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIEFMUEhBX0lOREVYW3NdIHx8IHM7XHJcbiAgICB9KTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXHJcbiAqIEByZXR1cm5zIHtTdHJpbmd9XHJcbiAqL1xyXG4gWG1sRW50aXRpZXMuZGVjb2RlID0gZnVuY3Rpb24oc3RyKSB7XHJcbiAgICByZXR1cm4gbmV3IFhtbEVudGl0aWVzKCkuZGVjb2RlKHN0cik7XHJcbiB9O1xyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcclxuICogQHJldHVybnMge1N0cmluZ31cclxuICovXHJcblhtbEVudGl0aWVzLnByb3RvdHlwZS5lbmNvZGVOb25VVEYgPSBmdW5jdGlvbihzdHIpIHtcclxuICAgIGlmICghc3RyIHx8ICFzdHIubGVuZ3RoKSB7XHJcbiAgICAgICAgcmV0dXJuICcnO1xyXG4gICAgfVxyXG4gICAgdmFyIHN0ckxlbmd0aCA9IHN0ci5sZW5ndGg7XHJcbiAgICB2YXIgcmVzdWx0ID0gJyc7XHJcbiAgICB2YXIgaSA9IDA7XHJcbiAgICB3aGlsZSAoaSA8IHN0ckxlbmd0aCkge1xyXG4gICAgICAgIHZhciBjID0gc3RyLmNoYXJDb2RlQXQoaSk7XHJcbiAgICAgICAgdmFyIGFscGhhID0gQ0hBUl9JTkRFWFtjXTtcclxuICAgICAgICBpZiAoYWxwaGEpIHtcclxuICAgICAgICAgICAgcmVzdWx0ICs9IFwiJlwiICsgYWxwaGEgKyBcIjtcIjtcclxuICAgICAgICAgICAgaSsrO1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGMgPCAzMiB8fCBjID4gMTI2KSB7XHJcbiAgICAgICAgICAgIHJlc3VsdCArPSAnJiMnICsgYyArICc7JztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXN1bHQgKz0gc3RyLmNoYXJBdChpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaSsrO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXHJcbiAqIEByZXR1cm5zIHtTdHJpbmd9XHJcbiAqL1xyXG4gWG1sRW50aXRpZXMuZW5jb2RlTm9uVVRGID0gZnVuY3Rpb24oc3RyKSB7XHJcbiAgICByZXR1cm4gbmV3IFhtbEVudGl0aWVzKCkuZW5jb2RlTm9uVVRGKHN0cik7XHJcbiB9O1xyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcclxuICogQHJldHVybnMge1N0cmluZ31cclxuICovXHJcblhtbEVudGl0aWVzLnByb3RvdHlwZS5lbmNvZGVOb25BU0NJSSA9IGZ1bmN0aW9uKHN0cikge1xyXG4gICAgaWYgKCFzdHIgfHwgIXN0ci5sZW5ndGgpIHtcclxuICAgICAgICByZXR1cm4gJyc7XHJcbiAgICB9XHJcbiAgICB2YXIgc3RyTGVuZ2h0ID0gc3RyLmxlbmd0aDtcclxuICAgIHZhciByZXN1bHQgPSAnJztcclxuICAgIHZhciBpID0gMDtcclxuICAgIHdoaWxlIChpIDwgc3RyTGVuZ2h0KSB7XHJcbiAgICAgICAgdmFyIGMgPSBzdHIuY2hhckNvZGVBdChpKTtcclxuICAgICAgICBpZiAoYyA8PSAyNTUpIHtcclxuICAgICAgICAgICAgcmVzdWx0ICs9IHN0cltpKytdO1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmVzdWx0ICs9ICcmIycgKyBjICsgJzsnO1xyXG4gICAgICAgIGkrKztcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbn07XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxyXG4gKiBAcmV0dXJucyB7U3RyaW5nfVxyXG4gKi9cclxuIFhtbEVudGl0aWVzLmVuY29kZU5vbkFTQ0lJID0gZnVuY3Rpb24oc3RyKSB7XHJcbiAgICByZXR1cm4gbmV3IFhtbEVudGl0aWVzKCkuZW5jb2RlTm9uQVNDSUkoc3RyKTtcclxuIH07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFhtbEVudGl0aWVzO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//#sourceURL=webpack-internal:///./node_modules/html-entities/lib/xml-entities.js\n");/***/}),/***/"./node_modules/loglevel/lib/loglevel.js":/*!***********************************************!*\;!***./node_modules/loglevel/lib/loglevel.js***!;\***********************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_FACTORY__,__WEBPACK_AMD_DEFINE_RESULT__;/*\r\n*loglevel-https://github.com/pimterry/loglevel\r\n*\r\n*Copyright(c)2013 Tim Perry\r\n*Licensed under the MIT license.\r\n*/\r\n(function(root,definition){\r\n\"use strict\";\r\n if(true){\r\n!(__WEBPACK_AMD_DEFINE_FACTORY__=(definition),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__=(typeof __WEBPACK_AMD_DEFINE_FACTORY__==='function'?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports,__webpack_require__,exports,module)):\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__!==undefined&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__));\r\n}else{}\r\n}(this,function(){\r\n\"use strict\";\r\n\r\n//Slightly dubious tricks to cut down minimized file size\r\n var noop=function(){};\r\n var undefinedType=\"undefined\";\r\n\r\n var logMethods=[\r\n\"trace\",\r\n\"debug\",\r\n\"info\",\r\n\"warn\",\r\n\"error\"\r\n];\r\n\r\n//Cross-browser bind equivalent that works at least back to IE6\r\n function bindMethod(obj,methodName){\r\n var method=obj[methodName];\r\n if(typeof method.bind==='function'){\r\n return method.bind(obj);\r\n}else{\r\n try{\r\n return Function.prototype.bind.call(method,obj);\r\n}catch(e){\r\n//Missing bind shim or IE8+Modernizr,fallback to wrapping\r\n return function(){\r\n return Function.prototype.apply.apply(method,[obj,arguments]);\r\n};\r\n}\r\n}\r\n}\r\n\r\n//Build the best logging method possible for this env\r\n//Wherever possible we want to bind,not wrap,to preserve stack traces\r\n function realMethod(methodName){\r\n if(methodName==='debug'){\r\n methodName='log';\r\n}\r\n\r\n if(typeof console===undefinedType){\r\n return false;//No method possible,for now-fixed later by enableLoggingWhenConsoleArrives\r\n}else if(console[methodName]!==undefined){\r\n return bindMethod(console,methodName);\r\n}else if(console.log!==undefined){\r\n return bindMethod(console,'log');\r\n}else{\r\n return noop;\r\n}\r\n}\r\n\r\n//These private functions always need`this`to be set properly\r\n\r\n function replaceLoggingMethods(level,loggerName){\r\n/*jshint validthis:true*/\r\n for(var i=0;i<logMethods.length;i++){\r\n var methodName=logMethods[i];\r\n this[methodName]=(i<level)?\r\n noop:\r\n this.methodFactory(methodName,level,loggerName);\r\n}\r\n\r\n//Define log.log as an alias for log.debug\r\n this.log=this.debug;\r\n}\r\n\r\n//In old IE versions,the console isn't present until you first open it.\r\n//We build realMethod()replacements here that regenerate logging methods\r\n function enableLoggingWhenConsoleArrives(methodName,level,loggerName){\r\n return function(){\r\n if(typeof console!==undefinedType){\r\n replaceLoggingMethods.call(this,level,loggerName);\r\n this[methodName].apply(this,arguments);\r\n}\r\n};\r\n}\r\n\r\n//By default,we use closely bound real methods wherever possible,and\r\n//otherwise we wait for a console to appear,and then try again.\r\n function defaultMethodFactory(methodName,level,loggerName){\r\n/*jshint validthis:true*/\r\n return realMethod(methodName)||\r\n enableLoggingWhenConsoleArrives.apply(this,arguments);\r\n}\r\n\r\n function Logger(name,defaultLevel,factory){\r\n var self=this;\r\n var currentLevel;\r\n var storageKey=\"loglevel\";\r\n if(name){\r\n storageKey+=\":\"+name;\r\n}\r\n\r\n function persistLevelIfPossible(levelNum){\r\n var levelName=(logMethods[levelNum]||'silent').toUpperCase();\r\n\r\n if(typeof window===undefinedType)return;\r\n\r\n//Use localStorage if available\r\n try{\r\n window.localStorage[storageKey]=levelName;\r\n return;\r\n}catch(ignore){}\r\n\r\n//Use session cookie as fallback\r\n try{\r\n window.document.cookie=\r\n encodeURIComponent(storageKey)+\"=\"+levelName+\";\";\r\n}catch(ignore){}\r\n}\r\n\r\n function getPersistedLevel(){\r\n var storedLevel;\r\n\r\n if(typeof window===undefinedType)return;\r\n\r\n try{\r\n storedLevel=window.localStorage[storageKey];\r\n}catch(ignore){}\r\n\r\n//Fallback to cookies if local storage gives us nothing\r\n if(typeof storedLevel===undefinedType){\r\n try{\r\n var cookie=window.document.cookie;\r\n var location=cookie.indexOf(\r\n encodeURIComponent(storageKey)+\"=\");\r\n if(location!==-1){\r\n storedLevel=/^([^;]+)/.exec(cookie.slice(location))[1];\r\n}\r\n}catch(ignore){}\r\n}\r\n\r\n//If the stored level is not valid,treat it as if nothing was stored.\r\n if(self.levels[storedLevel]===undefined){\r\n storedLevel=undefined;\r\n}\r\n\r\n return storedLevel;\r\n}\r\n\r\n/*\r\n*\r\n*Public logger API-see https://github.com/pimterry/loglevel for details\r\n*\r\n*/\r\n\r\n self.name=name;\r\n\r\n self.levels={\"TRACE\":0,\"DEBUG\":1,\"INFO\":2,\"WARN\":3,\r\n\"ERROR\":4,\"SILENT\":5};\r\n\r\n self.methodFactory=factory||defaultMethodFactory;\r\n\r\n self.getLevel=function(){\r\n return currentLevel;\r\n};\r\n\r\n self.setLevel=function(level,persist){\r\n if(typeof level===\"string\"&&self.levels[level.toUpperCase()]!==undefined){\r\n level=self.levels[level.toUpperCase()];\r\n}\r\n if(typeof level===\"number\"&&level>=0&&level<=self.levels.SILENT){\r\n currentLevel=level;\r\n if(persist!==false){//defaults to true\r\n persistLevelIfPossible(level);\r\n}\r\n replaceLoggingMethods.call(self,level,name);\r\n if(typeof console===undefinedType&&level<self.levels.SILENT){\r\n return\"No console available for logging\";\r\n}\r\n}else{\r\n throw\"log.setLevel()called with invalid level:\"+level;\r\n}\r\n};\r\n\r\n self.setDefaultLevel=function(level){\r\n if(!getPersistedLevel()){\r\n self.setLevel(level,false);\r\n}\r\n};\r\n\r\n self.enableAll=function(persist){\r\n self.setLevel(self.levels.TRACE,persist);\r\n};\r\n\r\n self.disableAll=function(persist){\r\n self.setLevel(self.levels.SILENT,persist);\r\n};\r\n\r\n//Initialize with the right level\r\n var initialLevel=getPersistedLevel();\r\n if(initialLevel==null){\r\n initialLevel=defaultLevel==null?\"WARN\":defaultLevel;\r\n}\r\n self.setLevel(initialLevel,false);\r\n}\r\n\r\n/*\r\n*\r\n*Top-level API\r\n*\r\n*/\r\n\r\n var defaultLogger=new Logger();\r\n\r\n var _loggersByName={};\r\n defaultLogger.getLogger=function getLogger(name){\r\n if(typeof name!==\"string\"||name===\"\"){\r\n throw new TypeError(\"You must supply a name when creating a logger.\");\r\n}\r\n\r\n var logger=_loggersByName[name];\r\n if(!logger){\r\n logger=_loggersByName[name]=new Logger(\r\n name,defaultLogger.getLevel(),defaultLogger.methodFactory);\r\n}\r\n return logger;\r\n};\r\n\r\n//Grab the current global log variable in case of overwrite\r\n var _log=(typeof window!==undefinedType)?window.log:undefined;\r\n defaultLogger.noConflict=function(){\r\n if(typeof window!==undefinedType&&\r\n window.log===defaultLogger){\r\n window.log=_log;\r\n}\r\n\r\n return defaultLogger;\r\n};\r\n\r\n defaultLogger.getLoggers=function getLoggers(){\r\n return _loggersByName;\r\n};\r\n\r\n return defaultLogger;\r\n}));\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,\n//#sourceURL=webpack-internal:///./node_modules/loglevel/lib/loglevel.js\n");/***/}),/***/"./node_modules/node-libs-browser/node_modules/punycode/punycode.js":/*!**************************************************************************!*\;!***./node_modules/node-libs-browser/node_modules/punycode/punycode.js***!;\**************************************************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){eval("/*WEBPACK VAR INJECTION*/(function(module,global){var __WEBPACK_AMD_DEFINE_RESULT__;/*!https://mths.be/punycode v1.4.1 by@mathias*/\r\n;(function(root){\r\n\r\n\t/**Detect free variables*/\r\n\tvar freeExports=true&&exports&&\r\n\t\t!exports.nodeType&&exports;\r\n\tvar freeModule=true&&module&&\r\n\t\t!module.nodeType&&module;\r\n\tvar freeGlobal=typeof global=='object'&&global;\r\n\tif(\r\n\t\tfreeGlobal.global===freeGlobal||\r\n\t\tfreeGlobal.window===freeGlobal||\r\n\t\tfreeGlobal.self===freeGlobal\r\n\t){\r\n\t\troot=freeGlobal;\r\n\t}\r\n\r\n\t/**\r\n\t*The`punycode`object.\r\n\t*@name punycode\r\n\t*@type Object\r\n\t*/\r\n\tvar punycode,\r\n\r\n\t/**Highest positive signed 32-bit float value*/\r\n\tmaxInt=2147483647,//aka.0x7FFFFFFF or 2^31-1\r\n\r\n\t/**Bootstring parameters*/\r\n\tbase=36,\r\n\ttMin=1,\r\n\ttMax=26,\r\n\tskew=38,\r\n\tdamp=700,\r\n\tinitialBias=72,\r\n\tinitialN=128,//0x80\r\n\tdelimiter='-',//'\\x2D'\r\n\r\n\t/**Regular expressions*/\r\n\tregexPunycode=/^xn--/,\r\n\tregexNonASCII=/[^\\x20-\\x7E]/,//unprintable ASCII chars+non-ASCII chars\r\n\tregexSeparators=/[\\x2E\\u3002\\uFF0E\\uFF61]/g,//RFC 3490 separators\r\n\r\n\t/**Error messages*/\r\n\terrors={\r\n\t\t'overflow':'Overflow:input needs wider integers to process',\r\n\t\t'not-basic':'Illegal input>=0x80(not a basic code point)',\r\n\t\t'invalid-input':'Invalid input'\r\n\t},\r\n\r\n\t/**Convenience shortcuts*/\r\n\tbaseMinusTMin=base-tMin,\r\n\tfloor=Math.floor,\r\n\tstringFromCharCode=String.fromCharCode,\r\n\r\n\t/**Temporary variable*/\r\n\tkey;\r\n\r\n\t/*--------------------------------------------------------------------------*/\r\n\r\n\t/**\r\n\t*A generic error utility function.\r\n\t*@private\r\n\t*@param{String}type The error type.\r\n\t*@returns{Error}Throws a`RangeError`with the applicable error message.\r\n\t*/\r\n\tfunction error(type){\r\n\t\tthrow new RangeError(errors[type]);\r\n\t}\r\n\r\n\t/**\r\n\t*A generic`Array#map`utility function.\r\n\t*@private\r\n\t*@param{Array}array The array to iterate over.\r\n\t*@param{Function}callback The function that gets called for every array\r\n\t*item.\r\n\t*@returns{Array}A new array of values returned by the callback function.\r\n\t*/\r\n\tfunction map(array,fn){\r\n\t\tvar length=array.length;\r\n\t\tvar result=[];\r\n\t\twhile(length--){\r\n\t\t\tresult[length]=fn(array[length]);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t*A simple`Array#map`-like wrapper to work with domain name strings or email\r\n\t*addresses.\r\n\t*@private\r\n\t*@param{String}domain The domain name or email address.\r\n\t*@param{Function}callback The function that gets called for every\r\n\t*character.\r\n\t*@returns{Array}A new string of characters returned by the callback\r\n\t*function.\r\n\t*/\r\n\tfunction mapDomain(string,fn){\r\n\t\tvar parts=string.split('@');\r\n\t\tvar result='';\r\n\t\tif(parts.length>1){\r\n\t\t\t//In email addresses,only the domain name should be punycoded.Leave\r\n\t\t\t//the local part(i.e.everything up to`@`)intact.\r\n\t\t\tresult=parts[0]+'@';\r\n\t\t\tstring=parts[1];\r\n\t\t}\r\n\t\t//Avoid`split(regex)`for IE8 compatibility.See#17.\r\n\t\tstring=string.replace(regexSeparators,'\\x2E');\r\n\t\tvar labels=string.split('.');\r\n\t\tvar encoded=map(labels,fn).join('.');\r\n\t\treturn result+encoded;\r\n\t}\r\n\r\n\t/**\r\n\t*Creates an array containing the numeric code points of each Unicode\r\n\t*character in the string.While JavaScript uses UCS-2 internally,\r\n\t*this function will convert a pair of surrogate halves(each of which\r\n\t*UCS-2 exposes as separate characters)into a single code point,\r\n\t*matching UTF-16.\r\n\t*@see`punycode.ucs2.encode`\r\n\t*@see<https://mathiasbynens.be/notes/javascript-encoding>\r\n\t*@memberOf punycode.ucs2\r\n\t*@name decode\r\n\t*@param{String}string The Unicode input string(UCS-2).\r\n\t*@returns{Array}The new array of code points.\r\n\t*/\r\n\tfunction ucs2decode(string){\r\n\t\tvar output=[],\r\n\t\t counter=0,\r\n\t\t length=string.length,\r\n\t\t value,\r\n\t\t extra;\r\n\t\twhile(counter<length){\r\n\t\t\tvalue=string.charCodeAt(counter++);\r\n\t\t\tif(value>=0xD800&&value<=0xDBFF&&counter<length){\r\n\t\t\t\t//high surrogate,and there is a next character\r\n\t\t\t\textra=string.charCodeAt(counter++);\r\n\t\t\t\tif((extra&0xFC00)==0xDC00){//low surrogate\r\n\t\t\t\t\toutput.push(((value&0x3FF)<<10)+(extra&0x3FF)+0x10000);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//unmatched surrogate;only append this code unit,in case the next\r\n\t\t\t\t\t//code unit is the high surrogate of a surrogate pair\r\n\t\t\t\t\toutput.push(value);\r\n\t\t\t\t\tcounter--;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\toutput.push(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\r\n\t/**\r\n\t*Creates a string based on an array of numeric code points.\r\n\t*@see`punycode.ucs2.decode`\r\n\t*@memberOf punycode.ucs2\r\n\t*@name encode\r\n\t*@param{Array}codePoints The array of numeric code points.\r\n\t*@returns{String}The new Unicode string(UCS-2).\r\n\t*/\r\n\tfunction ucs2encode(array){\r\n\t\treturn map(array,function(value){\r\n\t\t\tvar output='';\r\n\t\t\tif(value>0xFFFF){\r\n\t\t\t\tvalue-=0x10000;\r\n\t\t\t\toutput+=stringFromCharCode(value>>>10&0x3FF|0xD800);\r\n\t\t\t\tvalue=0xDC00|value&0x3FF;\r\n\t\t\t}\r\n\t\t\toutput+=stringFromCharCode(value);\r\n\t\t\treturn output;\r\n\t\t}).join('');\r\n\t}\r\n\r\n\t/**\r\n\t*Converts a basic code point into a digit/integer.\r\n\t*@see`digitToBasic()`\r\n\t*@private\r\n\t*@param{Number}codePoint The basic numeric code point value.\r\n\t*@returns{Number}The numeric value of a basic code point(for use in\r\n\t*representing integers)in the range`0`to`base-1`,or`base`if\r\n\t*the code point does not represent a value.\r\n\t*/\r\n\tfunction basicToDigit(codePoint){\r\n\t\tif(codePoint-48<10){\r\n\t\t\treturn codePoint-22;\r\n\t\t}\r\n\t\tif(codePoint-65<26){\r\n\t\t\treturn codePoint-65;\r\n\t\t}\r\n\t\tif(codePoint-97<26){\r\n\t\t\treturn codePoint-97;\r\n\t\t}\r\n\t\treturn base;\r\n\t}\r\n\r\n\t/**\r\n\t*Converts a digit/integer into a basic code point.\r\n\t*@see`basicToDigit()`\r\n\t*@private\r\n\t*@param{Number}digit The numeric value of a basic code point.\r\n\t*@returns{Number}The basic code point whose value(when used for\r\n\t*representing integers)is`digit`,which needs to be in the range\r\n\t*`0`to`base-1`.If`flag`is non-zero,the uppercase form is\r\n\t*used;else,the lowercase form is used.The behavior is undefined\r\n\t*if`flag`is non-zero and`digit`has no uppercase form.\r\n\t*/\r\n\tfunction digitToBasic(digit,flag){\r\n\t\t//0..25 map to ASCII a..z or A..Z\r\n\t\t//26..35 map to ASCII 0..9\r\n\t\treturn digit+22+75*(digit<26)-((flag!=0)<<5);\r\n\t}\r\n\r\n\t/**\r\n\t*Bias adaptation function as per section 3.4 of RFC 3492.\r\n\t*https://tools.ietf.org/html/rfc3492#section-3.4\r\n\t*@private\r\n\t*/\r\n\tfunction adapt(delta,numPoints,firstTime){\r\n\t\tvar k=0;\r\n\t\tdelta=firstTime?floor(delta/damp):delta>>1;\r\n\t\tdelta+=floor(delta/numPoints);\r\n\t\tfor(/*no initialization*/;delta>baseMinusTMin*tMax>>1;k+=base){\r\n\t\t\tdelta=floor(delta/baseMinusTMin);\r\n\t\t}\r\n\t\treturn floor(k+(baseMinusTMin+1)*delta/(delta+skew));\r\n\t}\r\n\r\n\t/**\r\n\t*Converts a Punycode string of ASCII-only symbols to a string of Unicode\r\n\t*symbols.\r\n\t*@memberOf punycode\r\n\t*@param{String}input The Punycode string of ASCII-only symbols.\r\n\t*@returns{String}The resulting string of Unicode symbols.\r\n\t*/\r\n\tfunction decode(input){\r\n\t\t//Don't use UCS-2\r\n\t\tvar output=[],\r\n\t\t inputLength=input.length,\r\n\t\t out,\r\n\t\t i=0,\r\n\t\t n=initialN,\r\n\t\t bias=initialBias,\r\n\t\t basic,\r\n\t\t j,\r\n\t\t index,\r\n\t\t oldi,\r\n\t\t w,\r\n\t\t k,\r\n\t\t digit,\r\n\t\t t,\r\n\t\t/**Cached calculation results*/\r\n\t\t baseMinusT;\r\n\r\n\t\t//Handle the basic code points:let`basic`be the number of input code\r\n\t\t//points before the last delimiter,or`0`if there is none,then copy\r\n\t\t//the first basic code points to the output.\r\n\r\n\t\tbasic=input.lastIndexOf(delimiter);\r\n\t\tif(basic<0){\r\n\t\t\tbasic=0;\r\n\t\t}\r\n\r\n\t\tfor(j=0;j<basic;++j){\r\n\t\t\t//if it's not a basic code point\r\n\t\t\tif(input.charCodeAt(j)>=0x80){\r\n\t\t\t\terror('not-basic');\r\n\t\t\t}\r\n\t\t\toutput.push(input.charCodeAt(j));\r\n\t\t}\r\n\r\n\t\t//Main decoding loop:start just after the last delimiter if any basic code\r\n\t\t//points were copied;start at the beginning otherwise.\r\n\r\n\t\tfor(index=basic>0?basic+1:0;index<inputLength;/*no final expression*/){\r\n\r\n\t\t\t//`index`is the index of the next character to be consumed.\r\n\t\t\t//Decode a generalized variable-length integer into`delta`,\r\n\t\t\t//which gets added to`i`.The overflow checking is easier\r\n\t\t\t//if we increase`i`as we go,then subtract off its starting\r\n\t\t\t//value at the end to obtain`delta`.\r\n\t\t\tfor(oldi=i,w=1,k=base;/*no condition*/;k+=base){\r\n\r\n\t\t\t\tif(index>=inputLength){\r\n\t\t\t\t\terror('invalid-input');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdigit=basicToDigit(input.charCodeAt(index++));\r\n\r\n\t\t\t\tif(digit>=base||digit>floor((maxInt-i)/w)){\r\n\t\t\t\t\terror('overflow');\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti+=digit*w;\r\n\t\t\t\tt=k<=bias?tMin:(k>=bias+tMax?tMax:k-bias);\r\n\r\n\t\t\t\tif(digit<t){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbaseMinusT=base-t;\r\n\t\t\t\tif(w>floor(maxInt/baseMinusT)){\r\n\t\t\t\t\terror('overflow');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tw*=baseMinusT;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tout=output.length+1;\r\n\t\t\tbias=adapt(i-oldi,out,oldi==0);\r\n\r\n\t\t\t//`i`was supposed to wrap around from`out`to`0`,\r\n\t\t\t//incrementing`n`each time,so we'll fix that now:\r\n\t\t\tif(floor(i/out)>maxInt-n){\r\n\t\t\t\terror('overflow');\r\n\t\t\t}\r\n\r\n\t\t\tn+=floor(i/out);\r\n\t\t\ti%=out;\r\n\r\n\t\t\t//Insert`n`at position`i`of the output\r\n\t\t\toutput.splice(i++,0,n);\r\n\r\n\t\t}\r\n\r\n\t\treturn ucs2encode(output);\r\n\t}\r\n\r\n\t/**\r\n\t*Converts a string of Unicode symbols(e.g.a domain name label)to a\r\n\t*Punycode string of ASCII-only symbols.\r\n\t*@memberOf punycode\r\n\t*@param{String}input The string of Unicode symbols.\r\n\t*@returns{String}The resulting Punycode string of ASCII-only symbols.\r\n\t*/\r\n\tfunction encode(input){\r\n\t\tvar n,\r\n\t\t delta,\r\n\t\t handledCPCount,\r\n\t\t basicLength,\r\n\t\t bias,\r\n\t\t j,\r\n\t\t m,\r\n\t\t q,\r\n\t\t k,\r\n\t\t t,\r\n\t\t currentValue,\r\n\t\t output=[],\r\n\t\t/**`inputLength`will hold the number of code points in`input`.*/\r\n\t\t inputLength,\r\n\t\t/**Cached calculation results*/\r\n\t\t handledCPCountPlusOne,\r\n\t\t baseMinusT,\r\n\t\t qMinusT;\r\n\r\n\t\t//Convert the input in UCS-2 to Unicode\r\n\t\tinput=ucs2decode(input);\r\n\r\n\t\t//Cache the length\r\n\t\tinputLength=input.length;\r\n\r\n\t\t//Initialize the state\r\n\t\tn=initialN;\r\n\t\tdelta=0;\r\n\t\tbias=initialBias;\r\n\r\n\t\t//Handle the basic code points\r\n\t\tfor(j=0;j<inputLength;++j){\r\n\t\t\tcurrentValue=input[j];\r\n\t\t\tif(currentValue<0x80){\r\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\thandledCPCount=basicLength=output.length;\r\n\r\n\t\t//`handledCPCount`is the number of code points that have been handled;\r\n\t\t//`basicLength`is the number of basic code points.\r\n\r\n\t\t//Finish the basic string-if it is not empty-with a delimiter\r\n\t\tif(basicLength){\r\n\t\t\toutput.push(delimiter);\r\n\t\t}\r\n\r\n\t\t//Main encoding loop:\r\n\t\twhile(handledCPCount<inputLength){\r\n\r\n\t\t\t//All non-basic code points<n have been handled already.Find the next\r\n\t\t\t//larger one:\r\n\t\t\tfor(m=maxInt,j=0;j<inputLength;++j){\r\n\t\t\t\tcurrentValue=input[j];\r\n\t\t\t\tif(currentValue>=n&&currentValue<m){\r\n\t\t\t\t\tm=currentValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//Increase`delta`enough to advance the decoder's<n,i>state to<m,0>,\r\n\t\t\t//but guard against overflow\r\n\t\t\thandledCPCountPlusOne=handledCPCount+1;\r\n\t\t\tif(m-n>floor((maxInt-delta)/handledCPCountPlusOne)){\r\n\t\t\t\terror('overflow');\r\n\t\t\t}\r\n\r\n\t\t\tdelta+=(m-n)*handledCPCountPlusOne;\r\n\t\t\tn=m;\r\n\r\n\t\t\tfor(j=0;j<inputLength;++j){\r\n\t\t\t\tcurrentValue=input[j];\r\n\r\n\t\t\t\tif(currentValue<n&&++delta>maxInt){\r\n\t\t\t\t\terror('overflow');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentValue==n){\r\n\t\t\t\t\t//Represent delta as a generalized variable-length integer\r\n\t\t\t\t\tfor(q=delta,k=base;/*no condition*/;k+=base){\r\n\t\t\t\t\t\tt=k<=bias?tMin:(k>=bias+tMax?tMax:k-bias);\r\n\t\t\t\t\t\tif(q<t){\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tqMinusT=q-t;\r\n\t\t\t\t\t\tbaseMinusT=base-t;\r\n\t\t\t\t\t\toutput.push(\r\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t+qMinusT%baseMinusT,0))\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tq=floor(qMinusT/baseMinusT);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q,0)));\r\n\t\t\t\t\tbias=adapt(delta,handledCPCountPlusOne,handledCPCount==basicLength);\r\n\t\t\t\t\tdelta=0;\r\n\t\t\t\t\t++handledCPCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t++delta;\r\n\t\t\t++n;\r\n\r\n\t\t}\r\n\t\treturn output.join('');\r\n\t}\r\n\r\n\t/**\r\n\t*Converts a Punycode string representing a domain name or an email address\r\n\t*to Unicode.Only the Punycoded parts of the input will be converted,i.e.\r\n\t*it doesn't matter if you call it on a string that has already been\r\n\t*converted to Unicode.\r\n\t*@memberOf punycode\r\n\t*@param{String}input The Punycoded domain name or email address to\r\n\t*convert to Unicode.\r\n\t*@returns{String}The Unicode representation of the given Punycode\r\n\t*string.\r\n\t*/\r\n\tfunction toUnicode(input){\r\n\t\treturn mapDomain(input,function(string){\r\n\t\t\treturn regexPunycode.test(string)\r\n\t\t\t\t?decode(string.slice(4).toLowerCase())\r\n\t\t\t\t:string;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t*Converts a Unicode string representing a domain name or an email address to\r\n\t*Punycode.Only the non-ASCII parts of the domain name will be converted,\r\n\t*i.e.it doesn't matter if you call it with a domain that's already in\r\n\t*ASCII.\r\n\t*@memberOf punycode\r\n\t*@param{String}input The domain name or email address to convert,as a\r\n\t*Unicode string.\r\n\t*@returns{String}The Punycode representation of the given domain name or\r\n\t*email address.\r\n\t*/\r\n\tfunction toASCII(input){\r\n\t\treturn mapDomain(input,function(string){\r\n\t\t\treturn regexNonASCII.test(string)\r\n\t\t\t\t?'xn--'+encode(string)\r\n\t\t\t\t:string;\r\n\t\t});\r\n\t}\r\n\r\n\t/*--------------------------------------------------------------------------*/\r\n\r\n\t/**Define the public API*/\r\n\tpunycode={\r\n\t\t/**\r\n\t\t*A string representing the current Punycode.js version number.\r\n\t\t*@memberOf punycode\r\n\t\t*@type String\r\n\t\t*/\r\n\t\t'version':'1.4.1',\r\n\t\t/**\r\n\t\t*An object of methods to convert from JavaScript's internal character\r\n\t\t*representation(UCS-2)to Unicode code points,and back.\r\n\t\t*@see<https://mathiasbynens.be/notes/javascript-encoding>\r\n\t\t*@memberOf punycode\r\n\t\t*@type Object\r\n\t\t*/\r\n\t\t'ucs2':{\r\n\t\t\t'decode':ucs2decode,\r\n\t\t\t'encode':ucs2encode\r\n\t\t},\r\n\t\t'decode':decode,\r\n\t\t'encode':encode,\r\n\t\t'toASCII':toASCII,\r\n\t\t'toUnicode':toUnicode\r\n\t};\r\n\r\n\t/**Expose`punycode`*/\r\n\t//Some AMD build optimizers,like r.js,check for specific condition patterns\r\n\t//like the following:\r\n\tif(\r\n\t\ttrue\r\n\t){\r\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__=(function(){\r\n\t\t\treturn punycode;\r\n\t\t}).call(exports,__webpack_require__,exports,module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__!==undefined&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__));\r\n\t}else{}\r\n\r\n}(this));\r\n\n/*WEBPACK VAR INJECTION*/}.call(this,__webpack_require__(/*!./../../../webpack/buildin/module.js*/\"./node_modules/webpack/buildin/module.js\")(module),__webpack_require__(/*!./../../../webpack/buildin/global.js*/\"./node_modules/webpack/buildin/global.js\")))//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,\n//#sourceURL=webpack-internal:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js\n");/***/}),/***/"./node_modules/querystring-es3/decode.js":/*!************************************************!*\;!***./node_modules/querystring-es3/decode.js***!;\************************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){"use strict";eval("//Copyright Joyent,Inc.and other Node contributors.\r\n//\r\n//Permission is hereby granted,free of charge,to any person obtaining a\r\n//copy of this software and associated documentation files(the\r\n//\"Software\"),to deal in the Software without restriction,including\r\n//without limitation the rights to use,copy,modify,merge,publish,\r\n//distribute,sublicense,and/or sell copies of the Software,and to permit\r\n//persons to whom the Software is furnished to do so,subject to the\r\n//following conditions:\r\n//\r\n//The above copyright notice and this permission notice shall be included\r\n//in all copies or substantial portions of the Software.\r\n//\r\n//THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS\r\n//OR IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n//MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN\r\n//NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n//DAMAGES OR OTHER LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR\r\n//OTHERWISE,ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n//USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n\r\n\r\n//If obj.hasOwnProperty has been overridden,then calling\r\n//obj.hasOwnProperty(prop)will break.\r\n//See:https://github.com/joyent/node/issues/1707\r\nfunction hasOwnProperty(obj,prop){\r\n return Object.prototype.hasOwnProperty.call(obj,prop);\r\n}\r\n\r\nmodule.exports=function(qs,sep,eq,options){\r\n sep=sep||'&';\r\n eq=eq||'=';\r\n var obj={};\r\n\r\n if(typeof qs!=='string'||qs.length===0){\r\n return obj;\r\n}\r\n\r\n var regexp=/\\+/g;\r\n qs=qs.split(sep);\r\n\r\n var maxKeys=1000;\r\n if(options&&typeof options.maxKeys==='number'){\r\n maxKeys=options.maxKeys;\r\n}\r\n\r\n var len=qs.length;\r\n//maxKeys<=0 means that we should not limit keys count\r\n if(maxKeys>0&&len>maxKeys){\r\n len=maxKeys;\r\n}\r\n\r\n for(var i=0;i<len;++i){\r\n var x=qs[i].replace(regexp,'%20'),\r\n idx=x.indexOf(eq),\r\n kstr,vstr,k,v;\r\n\r\n if(idx>=0){\r\n kstr=x.substr(0,idx);\r\n vstr=x.substr(idx+1);\r\n}else{\r\n kstr=x;\r\n vstr='';\r\n}\r\n\r\n k=decodeURIComponent(kstr);\r\n v=decodeURIComponent(vstr);\r\n\r\n if(!hasOwnProperty(obj,k)){\r\n obj[k]=v;\r\n}else if(isArray(obj[k])){\r\n obj[k].push(v);\r\n}else{\r\n obj[k]=[obj[k],v];\r\n}\r\n}\r\n\r\n return obj;\r\n};\r\n\r\nvar isArray=Array.isArray||function(xs){\r\n return Object.prototype.toString.call(xs)==='[object Array]';\r\n};\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2RlY29kZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZGVjb2RlLmpzPzkxZGQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXHJcbi8vXHJcbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXHJcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcclxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXHJcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcclxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxyXG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcclxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XHJcbi8vXHJcbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXHJcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxyXG4vL1xyXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXHJcbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0ZcclxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxyXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcclxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXHJcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcclxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cclxuXHJcbid1c2Ugc3RyaWN0JztcclxuXHJcbi8vIElmIG9iai5oYXNPd25Qcm9wZXJ0eSBoYXMgYmVlbiBvdmVycmlkZGVuLCB0aGVuIGNhbGxpbmdcclxuLy8gb2JqLmhhc093blByb3BlcnR5KHByb3ApIHdpbGwgYnJlYWsuXHJcbi8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2pveWVudC9ub2RlL2lzc3Vlcy8xNzA3XHJcbmZ1bmN0aW9uIGhhc093blByb3BlcnR5KG9iaiwgcHJvcCkge1xyXG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihxcywgc2VwLCBlcSwgb3B0aW9ucykge1xyXG4gIHNlcCA9IHNlcCB8fCAnJic7XHJcbiAgZXEgPSBlcSB8fCAnPSc7XHJcbiAgdmFyIG9iaiA9IHt9O1xyXG5cclxuICBpZiAodHlwZW9mIHFzICE9PSAnc3RyaW5nJyB8fCBxcy5sZW5ndGggPT09IDApIHtcclxuICAgIHJldHVybiBvYmo7XHJcbiAgfVxyXG5cclxuICB2YXIgcmVnZXhwID0gL1xcKy9nO1xyXG4gIHFzID0gcXMuc3BsaXQoc2VwKTtcclxuXHJcbiAgdmFyIG1heEtleXMgPSAxMDAwO1xyXG4gIGlmIChvcHRpb25zICYmIHR5cGVvZiBvcHRpb25zLm1heEtleXMgPT09ICdudW1iZXInKSB7XHJcbiAgICBtYXhLZXlzID0gb3B0aW9ucy5tYXhLZXlzO1xyXG4gIH1cclxuXHJcbiAgdmFyIGxlbiA9IHFzLmxlbmd0aDtcclxuICAvLyBtYXhLZXlzIDw9IDAgbWVhbnMgdGhhdCB3ZSBzaG91bGQgbm90IGxpbWl0IGtleXMgY291bnRcclxuICBpZiAobWF4S2V5cyA+IDAgJiYgbGVuID4gbWF4S2V5cykge1xyXG4gICAgbGVuID0gbWF4S2V5cztcclxuICB9XHJcblxyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpIHtcclxuICAgIHZhciB4ID0gcXNbaV0ucmVwbGFjZShyZWdleHAsICclMjAnKSxcclxuICAgICAgICBpZHggPSB4LmluZGV4T2YoZXEpLFxyXG4gICAgICAgIGtzdHIsIHZzdHIsIGssIHY7XHJcblxyXG4gICAgaWYgKGlkeCA+PSAwKSB7XHJcbiAgICAgIGtzdHIgPSB4LnN1YnN0cigwLCBpZHgpO1xyXG4gICAgICB2c3RyID0geC5zdWJzdHIoaWR4ICsgMSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBrc3RyID0geDtcclxuICAgICAgdnN0ciA9ICcnO1xyXG4gICAgfVxyXG5cclxuICAgIGsgPSBkZWNvZGVVUklDb21wb25lbnQoa3N0cik7XHJcbiAgICB2ID0gZGVjb2RlVVJJQ29tcG9uZW50KHZzdHIpO1xyXG5cclxuICAgIGlmICghaGFzT3duUHJvcGVydHkob2JqLCBrKSkge1xyXG4gICAgICBvYmpba10gPSB2O1xyXG4gICAgfSBlbHNlIGlmIChpc0FycmF5KG9ialtrXSkpIHtcclxuICAgICAgb2JqW2tdLnB1c2godik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBvYmpba10gPSBbb2JqW2tdLCB2XTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBvYmo7XHJcbn07XHJcblxyXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKHhzKSB7XHJcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh4cykgPT09ICdbb2JqZWN0IEFycmF5XSc7XHJcbn07XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//#sourceURL=webpack-internal:///./node_modules/querystring-es3/decode.js\n");/***/}),/***/"./node_modules/querystring-es3/encode.js":/*!************************************************!*\;!***./node_modules/querystring-es3/encode.js***!;\************************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){"use strict";eval("//Copyright Joyent,Inc.and other Node contributors.\r\n//\r\n//Permission is hereby granted,free of charge,to any person obtaining a\r\n//copy of this software and associated documentation files(the\r\n//\"Software\"),to deal in the Software without restriction,including\r\n//without limitation the rights to use,copy,modify,merge,publish,\r\n//distribute,sublicense,and/or sell copies of the Software,and to permit\r\n//persons to whom the Software is furnished to do so,subject to the\r\n//following conditions:\r\n//\r\n//The above copyright notice and this permission notice shall be included\r\n//in all copies or substantial portions of the Software.\r\n//\r\n//THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS\r\n//OR IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n//MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN\r\n//NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n//DAMAGES OR OTHER LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR\r\n//OTHERWISE,ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n//USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n\r\n\r\nvar stringifyPrimitive=function(v){\r\n switch(typeof v){\r\n case'string':\r\n return v;\r\n\r\n case'boolean':\r\n return v?'true':'false';\r\n\r\n case'number':\r\n return isFinite(v)?v:'';\r\n\r\n default:\r\n return'';\r\n}\r\n};\r\n\r\nmodule.exports=function(obj,sep,eq,name){\r\n sep=sep||'&';\r\n eq=eq||'=';\r\n if(obj===null){\r\n obj=undefined;\r\n}\r\n\r\n if(typeof obj==='object'){\r\n return map(objectKeys(obj),function(k){\r\n var ks=encodeURIComponent(stringifyPrimitive(k))+eq;\r\n if(isArray(obj[k])){\r\n return map(obj[k],function(v){\r\n return ks+encodeURIComponent(stringifyPrimitive(v));\r\n}).join(sep);\r\n}else{\r\n return ks+encodeURIComponent(stringifyPrimitive(obj[k]));\r\n}\r\n}).join(sep);\r\n\r\n}\r\n\r\n if(!name)return'';\r\n return encodeURIComponent(stringifyPrimitive(name))+eq+\r\n encodeURIComponent(stringifyPrimitive(obj));\r\n};\r\n\r\nvar isArray=Array.isArray||function(xs){\r\n return Object.prototype.toString.call(xs)==='[object Array]';\r\n};\r\n\r\nfunction map(xs,f){\r\n if(xs.map)return xs.map(f);\r\n var res=[];\r\n for(var i=0;i<xs.length;i++){\r\n res.push(f(xs[i],i));\r\n}\r\n return res;\r\n}\r\n\r\nvar objectKeys=Object.keys||function(obj){\r\n var res=[];\r\n for(var key in obj){\r\n if(Object.prototype.hasOwnProperty.call(obj,key))res.push(key);\r\n}\r\n return res;\r\n};\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2VuY29kZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZW5jb2RlLmpzP2UwOTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXHJcbi8vXHJcbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXHJcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcclxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXHJcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcclxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxyXG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcclxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XHJcbi8vXHJcbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXHJcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxyXG4vL1xyXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXHJcbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0ZcclxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxyXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcclxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXHJcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcclxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cclxuXHJcbid1c2Ugc3RyaWN0JztcclxuXHJcbnZhciBzdHJpbmdpZnlQcmltaXRpdmUgPSBmdW5jdGlvbih2KSB7XHJcbiAgc3dpdGNoICh0eXBlb2Ygdikge1xyXG4gICAgY2FzZSAnc3RyaW5nJzpcclxuICAgICAgcmV0dXJuIHY7XHJcblxyXG4gICAgY2FzZSAnYm9vbGVhbic6XHJcbiAgICAgIHJldHVybiB2ID8gJ3RydWUnIDogJ2ZhbHNlJztcclxuXHJcbiAgICBjYXNlICdudW1iZXInOlxyXG4gICAgICByZXR1cm4gaXNGaW5pdGUodikgPyB2IDogJyc7XHJcblxyXG4gICAgZGVmYXVsdDpcclxuICAgICAgcmV0dXJuICcnO1xyXG4gIH1cclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob2JqLCBzZXAsIGVxLCBuYW1lKSB7XHJcbiAgc2VwID0gc2VwIHx8ICcmJztcclxuICBlcSA9IGVxIHx8ICc9JztcclxuICBpZiAob2JqID09PSBudWxsKSB7XHJcbiAgICBvYmogPSB1bmRlZmluZWQ7XHJcbiAgfVxyXG5cclxuICBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcclxuICAgIHJldHVybiBtYXAob2JqZWN0S2V5cyhvYmopLCBmdW5jdGlvbihrKSB7XHJcbiAgICAgIHZhciBrcyA9IGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoaykpICsgZXE7XHJcbiAgICAgIGlmIChpc0FycmF5KG9ialtrXSkpIHtcclxuICAgICAgICByZXR1cm4gbWFwKG9ialtrXSwgZnVuY3Rpb24odikge1xyXG4gICAgICAgICAgcmV0dXJuIGtzICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZSh2KSk7XHJcbiAgICAgICAgfSkuam9pbihzZXApO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBrcyArIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUob2JqW2tdKSk7XHJcbiAgICAgIH1cclxuICAgIH0pLmpvaW4oc2VwKTtcclxuXHJcbiAgfVxyXG5cclxuICBpZiAoIW5hbWUpIHJldHVybiAnJztcclxuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShuYW1lKSkgKyBlcSArXHJcbiAgICAgICAgIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUob2JqKSk7XHJcbn07XHJcblxyXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKHhzKSB7XHJcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh4cykgPT09ICdbb2JqZWN0IEFycmF5XSc7XHJcbn07XHJcblxyXG5mdW5jdGlvbiBtYXAgKHhzLCBmKSB7XHJcbiAgaWYgKHhzLm1hcCkgcmV0dXJuIHhzLm1hcChmKTtcclxuICB2YXIgcmVzID0gW107XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB4cy5sZW5ndGg7IGkrKykge1xyXG4gICAgcmVzLnB1c2goZih4c1tpXSwgaSkpO1xyXG4gIH1cclxuICByZXR1cm4gcmVzO1xyXG59XHJcblxyXG52YXIgb2JqZWN0S2V5cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIChvYmopIHtcclxuICB2YXIgcmVzID0gW107XHJcbiAgZm9yICh2YXIga2V5IGluIG9iaikge1xyXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHJlcy5wdXNoKGtleSk7XHJcbiAgfVxyXG4gIHJldHVybiByZXM7XHJcbn07XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//#sourceURL=webpack-internal:///./node_modules/querystring-es3/encode.js\n");/***/}),/***/"./node_modules/querystring-es3/index.js":/*!***********************************************!*\{!***./node_modules/querystring-es3/index.js***!}\***********************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\nexports.decode=exports.parse=__webpack_require__(/*!./decode*/\"./node_modules/querystring-es3/decode.js\");\r\nexports.encode=exports.stringify=__webpack_require__(/*!./encode*/\"./node_modules/querystring-es3/encode.js\");\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9pbmRleC5qcz9iMzgzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmV4cG9ydHMuZGVjb2RlID0gZXhwb3J0cy5wYXJzZSA9IHJlcXVpcmUoJy4vZGVjb2RlJyk7XHJcbmV4cG9ydHMuZW5jb2RlID0gZXhwb3J0cy5zdHJpbmdpZnkgPSByZXF1aXJlKCcuL2VuY29kZScpO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//#sourceURL=webpack-internal:///./node_modules/querystring-es3/index.js\n");/***/}),/***/"./node_modules/sockjs-client/dist/sockjs.js":/*!***************************************************!*\;!***./node_modules/sockjs-client/dist/sockjs.js***!;\***************************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){eval("/*WEBPACK VAR INJECTION*/(function(global){var require;var require;/*sockjs-client v1.3.0|http://sockjs.org|MIT license*/\r\n(function(f){if(true){module.exports=f()}else{var g;}})(function(){var define,module,exports;return(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return require(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module'\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\r\n(function(global){\r\n'use strict';\r\n\r\nvar transportList=require('./transport-list');\r\n\r\nmodule.exports=require('./main')(transportList);\r\n\r\n//TODO can't get rid of this until all servers do\r\nif('_sockjs_onload'in global){\r\n setTimeout(global._sockjs_onload,1);\r\n}\r\n\r\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{\"./main\":14,\"./transport-list\":16}],2:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,Event=require('./event')\r\n;\r\n\r\nfunction CloseEvent(){\r\n Event.call(this);\r\n this.initEvent('close',false,false);\r\n this.wasClean=false;\r\n this.code=0;\r\n this.reason='';\r\n}\r\n\r\ninherits(CloseEvent,Event);\r\n\r\nmodule.exports=CloseEvent;\r\n\r\n},{\"./event\":4,\"inherits\":57}],3:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,EventTarget=require('./eventtarget')\r\n;\r\n\r\nfunction EventEmitter(){\r\n EventTarget.call(this);\r\n}\r\n\r\ninherits(EventEmitter,EventTarget);\r\n\r\nEventEmitter.prototype.removeAllListeners=function(type){\r\n if(type){\r\n delete this._listeners[type];\r\n}else{\r\n this._listeners={};\r\n}\r\n};\r\n\r\nEventEmitter.prototype.once=function(type,listener){\r\n var self=this\r\n,fired=false;\r\n\r\n function g(){\r\n self.removeListener(type,g);\r\n\r\n if(!fired){\r\n fired=true;\r\n listener.apply(this,arguments);\r\n}\r\n}\r\n\r\n this.on(type,g);\r\n};\r\n\r\nEventEmitter.prototype.emit=function(){\r\n var type=arguments[0];\r\n var listeners=this._listeners[type];\r\n if(!listeners){\r\n return;\r\n}\r\n//equivalent of Array.prototype.slice.call(arguments,1);\r\n var l=arguments.length;\r\n var args=new Array(l-1);\r\n for(var ai=1;ai<l;ai++){\r\n args[ai-1]=arguments[ai];\r\n}\r\n for(var i=0;i<listeners.length;i++){\r\n listeners[i].apply(this,args);\r\n}\r\n};\r\n\r\nEventEmitter.prototype.on=EventEmitter.prototype.addListener=EventTarget.prototype.addEventListener;\r\nEventEmitter.prototype.removeListener=EventTarget.prototype.removeEventListener;\r\n\r\nmodule.exports.EventEmitter=EventEmitter;\r\n\r\n},{\"./eventtarget\":5,\"inherits\":57}],4:[function(require,module,exports){\r\n'use strict';\r\n\r\nfunction Event(eventType){\r\n this.type=eventType;\r\n}\r\n\r\nEvent.prototype.initEvent=function(eventType,canBubble,cancelable){\r\n this.type=eventType;\r\n this.bubbles=canBubble;\r\n this.cancelable=cancelable;\r\n this.timeStamp=+new Date();\r\n return this;\r\n};\r\n\r\nEvent.prototype.stopPropagation=function(){};\r\nEvent.prototype.preventDefault=function(){};\r\n\r\nEvent.CAPTURING_PHASE=1;\r\nEvent.AT_TARGET=2;\r\nEvent.BUBBLING_PHASE=3;\r\n\r\nmodule.exports=Event;\r\n\r\n},{}],5:[function(require,module,exports){\r\n'use strict';\r\n\r\n/*Simplified implementation of DOM2 EventTarget.\r\n*http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget\r\n*/\r\n\r\nfunction EventTarget(){\r\n this._listeners={};\r\n}\r\n\r\nEventTarget.prototype.addEventListener=function(eventType,listener){\r\n if(!(eventType in this._listeners)){\r\n this._listeners[eventType]=[];\r\n}\r\n var arr=this._listeners[eventType];\r\n//#4\r\n if(arr.indexOf(listener)===-1){\r\n//Make a copy so as not to interfere with a current dispatchEvent.\r\n arr=arr.concat([listener]);\r\n}\r\n this._listeners[eventType]=arr;\r\n};\r\n\r\nEventTarget.prototype.removeEventListener=function(eventType,listener){\r\n var arr=this._listeners[eventType];\r\n if(!arr){\r\n return;\r\n}\r\n var idx=arr.indexOf(listener);\r\n if(idx!==-1){\r\n if(arr.length>1){\r\n//Make a copy so as not to interfere with a current dispatchEvent.\r\n this._listeners[eventType]=arr.slice(0,idx).concat(arr.slice(idx+1));\r\n}else{\r\n delete this._listeners[eventType];\r\n}\r\n return;\r\n}\r\n};\r\n\r\nEventTarget.prototype.dispatchEvent=function(){\r\n var event=arguments[0];\r\n var t=event.type;\r\n//equivalent of Array.prototype.slice.call(arguments,0);\r\n var args=arguments.length===1?[event]:Array.apply(null,arguments);\r\n//TODO:This doesn't match the real behavior;per spec,onfoo get\r\n//their place in line from the/first/time they're set from\r\n//non-null.Although WebKit bumps it to the end every time it's\r\n//set.\r\n if(this['on'+t]){\r\n this['on'+t].apply(this,args);\r\n}\r\n if(t in this._listeners){\r\n//Grab a reference to the listeners list.removeEventListener may alter the list.\r\n var listeners=this._listeners[t];\r\n for(var i=0;i<listeners.length;i++){\r\n listeners[i].apply(this,args);\r\n}\r\n}\r\n};\r\n\r\nmodule.exports=EventTarget;\r\n\r\n},{}],6:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,Event=require('./event')\r\n;\r\n\r\nfunction TransportMessageEvent(data){\r\n Event.call(this);\r\n this.initEvent('message',false,false);\r\n this.data=data;\r\n}\r\n\r\ninherits(TransportMessageEvent,Event);\r\n\r\nmodule.exports=TransportMessageEvent;\r\n\r\n},{\"./event\":4,\"inherits\":57}],7:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar JSON3=require('json3')\r\n,iframeUtils=require('./utils/iframe')\r\n;\r\n\r\nfunction FacadeJS(transport){\r\n this._transport=transport;\r\n transport.on('message',this._transportMessage.bind(this));\r\n transport.on('close',this._transportClose.bind(this));\r\n}\r\n\r\nFacadeJS.prototype._transportClose=function(code,reason){\r\n iframeUtils.postMessage('c',JSON3.stringify([code,reason]));\r\n};\r\nFacadeJS.prototype._transportMessage=function(frame){\r\n iframeUtils.postMessage('t',frame);\r\n};\r\nFacadeJS.prototype._send=function(data){\r\n this._transport.send(data);\r\n};\r\nFacadeJS.prototype._close=function(){\r\n this._transport.close();\r\n this._transport.removeAllListeners();\r\n};\r\n\r\nmodule.exports=FacadeJS;\r\n\r\n},{\"./utils/iframe\":47,\"json3\":58}],8:[function(require,module,exports){\r\n(function(process){\r\n'use strict';\r\n\r\nvar urlUtils=require('./utils/url')\r\n,eventUtils=require('./utils/event')\r\n,JSON3=require('json3')\r\n,FacadeJS=require('./facade')\r\n,InfoIframeReceiver=require('./info-iframe-receiver')\r\n,iframeUtils=require('./utils/iframe')\r\n,loc=require('./location')\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:iframe-bootstrap');\r\n}\r\n\r\nmodule.exports=function(SockJS,availableTransports){\r\n var transportMap={};\r\n availableTransports.forEach(function(at){\r\n if(at.facadeTransport){\r\n transportMap[at.facadeTransport.transportName]=at.facadeTransport;\r\n}\r\n});\r\n\r\n//hard-coded for the info iframe\r\n//TODO see if we can make this more dynamic\r\n transportMap[InfoIframeReceiver.transportName]=InfoIframeReceiver;\r\n var parentOrigin;\r\n\r\n/*eslint-disable camelcase*/\r\n SockJS.bootstrap_iframe=function(){\r\n/*eslint-enable camelcase*/\r\n var facade;\r\n iframeUtils.currentWindowId=loc.hash.slice(1);\r\n var onMessage=function(e){\r\n if(e.source!==parent){\r\n return;\r\n}\r\n if(typeof parentOrigin==='undefined'){\r\n parentOrigin=e.origin;\r\n}\r\n if(e.origin!==parentOrigin){\r\n return;\r\n}\r\n\r\n var iframeMessage;\r\n try{\r\n iframeMessage=JSON3.parse(e.data);\r\n}catch(ignored){\r\n debug('bad json',e.data);\r\n return;\r\n}\r\n\r\n if(iframeMessage.windowId!==iframeUtils.currentWindowId){\r\n return;\r\n}\r\n switch(iframeMessage.type){\r\n case's':\r\n var p;\r\n try{\r\n p=JSON3.parse(iframeMessage.data);\r\n}catch(ignored){\r\n debug('bad json',iframeMessage.data);\r\n break;\r\n}\r\n var version=p[0];\r\n var transport=p[1];\r\n var transUrl=p[2];\r\n var baseUrl=p[3];\r\n debug(version,transport,transUrl,baseUrl);\r\n//change this to semver logic\r\n if(version!==SockJS.version){\r\n throw new Error('Incompatible SockJS!Main site uses:'+\r\n'\"'+version+'\",the iframe:'+\r\n'\"'+SockJS.version+'\".');\r\n}\r\n\r\n if(!urlUtils.isOriginEqual(transUrl,loc.href)||\r\n!urlUtils.isOriginEqual(baseUrl,loc.href)){\r\n throw new Error('Can\\'t connect to different domain from within an'+\r\n'iframe.('+loc.href+','+transUrl+','+baseUrl+')');\r\n}\r\n facade=new FacadeJS(new transportMap[transport](transUrl,baseUrl));\r\n break;\r\n case'm':\r\n facade._send(iframeMessage.data);\r\n break;\r\n case'c':\r\n if(facade){\r\n facade._close();\r\n}\r\n facade=null;\r\n break;\r\n}\r\n};\r\n\r\n eventUtils.attachEvent('message',onMessage);\r\n\r\n//Start\r\n iframeUtils.postMessage('s');\r\n};\r\n};\r\n\r\n}).call(this,{env:{}})\r\n\r\n},{\"./facade\":7,\"./info-iframe-receiver\":10,\"./location\":13,\"./utils/event\":46,\"./utils/iframe\":47,\"./utils/url\":52,\"debug\":55,\"json3\":58}],9:[function(require,module,exports){\r\n(function(process){\r\n'use strict';\r\n\r\nvar EventEmitter=require('events').EventEmitter\r\n,inherits=require('inherits')\r\n,JSON3=require('json3')\r\n,objectUtils=require('./utils/object')\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:info-ajax');\r\n}\r\n\r\nfunction InfoAjax(url,AjaxObject){\r\n EventEmitter.call(this);\r\n\r\n var self=this;\r\n var t0=+new Date();\r\n this.xo=new AjaxObject('GET',url);\r\n\r\n this.xo.once('finish',function(status,text){\r\n var info,rtt;\r\n if(status===200){\r\n rtt=(+new Date())-t0;\r\n if(text){\r\n try{\r\n info=JSON3.parse(text);\r\n}catch(e){\r\n debug('bad json',text);\r\n}\r\n}\r\n\r\n if(!objectUtils.isObject(info)){\r\n info={};\r\n}\r\n}\r\n self.emit('finish',info,rtt);\r\n self.removeAllListeners();\r\n});\r\n}\r\n\r\ninherits(InfoAjax,EventEmitter);\r\n\r\nInfoAjax.prototype.close=function(){\r\n this.removeAllListeners();\r\n this.xo.close();\r\n};\r\n\r\nmodule.exports=InfoAjax;\r\n\r\n}).call(this,{env:{}})\r\n\r\n},{\"./utils/object\":49,\"debug\":55,\"events\":3,\"inherits\":57,\"json3\":58}],10:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,EventEmitter=require('events').EventEmitter\r\n,JSON3=require('json3')\r\n,XHRLocalObject=require('./transport/sender/xhr-local')\r\n,InfoAjax=require('./info-ajax')\r\n;\r\n\r\nfunction InfoReceiverIframe(transUrl){\r\n var self=this;\r\n EventEmitter.call(this);\r\n\r\n this.ir=new InfoAjax(transUrl,XHRLocalObject);\r\n this.ir.once('finish',function(info,rtt){\r\n self.ir=null;\r\n self.emit('message',JSON3.stringify([info,rtt]));\r\n});\r\n}\r\n\r\ninherits(InfoReceiverIframe,EventEmitter);\r\n\r\nInfoReceiverIframe.transportName='iframe-info-receiver';\r\n\r\nInfoReceiverIframe.prototype.close=function(){\r\n if(this.ir){\r\n this.ir.close();\r\n this.ir=null;\r\n}\r\n this.removeAllListeners();\r\n};\r\n\r\nmodule.exports=InfoReceiverIframe;\r\n\r\n},{\"./info-ajax\":9,\"./transport/sender/xhr-local\":37,\"events\":3,\"inherits\":57,\"json3\":58}],11:[function(require,module,exports){\r\n(function(process,global){\r\n'use strict';\r\n\r\nvar EventEmitter=require('events').EventEmitter\r\n,inherits=require('inherits')\r\n,JSON3=require('json3')\r\n,utils=require('./utils/event')\r\n,IframeTransport=require('./transport/iframe')\r\n,InfoReceiverIframe=require('./info-iframe-receiver')\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:info-iframe');\r\n}\r\n\r\nfunction InfoIframe(baseUrl,url){\r\n var self=this;\r\n EventEmitter.call(this);\r\n\r\n var go=function(){\r\n var ifr=self.ifr=new IframeTransport(InfoReceiverIframe.transportName,url,baseUrl);\r\n\r\n ifr.once('message',function(msg){\r\n if(msg){\r\n var d;\r\n try{\r\n d=JSON3.parse(msg);\r\n}catch(e){\r\n debug('bad json',msg);\r\n self.emit('finish');\r\n self.close();\r\n return;\r\n}\r\n\r\n var info=d[0],rtt=d[1];\r\n self.emit('finish',info,rtt);\r\n}\r\n self.close();\r\n});\r\n\r\n ifr.once('close',function(){\r\n self.emit('finish');\r\n self.close();\r\n});\r\n};\r\n\r\n//TODO this seems the same as the'needBody'from transports\r\n if(!global.document.body){\r\n utils.attachEvent('load',go);\r\n}else{\r\n go();\r\n}\r\n}\r\n\r\ninherits(InfoIframe,EventEmitter);\r\n\r\nInfoIframe.enabled=function(){\r\n return IframeTransport.enabled();\r\n};\r\n\r\nInfoIframe.prototype.close=function(){\r\n if(this.ifr){\r\n this.ifr.close();\r\n}\r\n this.removeAllListeners();\r\n this.ifr=null;\r\n};\r\n\r\nmodule.exports=InfoIframe;\r\n\r\n}).call(this,{env:{}},typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{\"./info-iframe-receiver\":10,\"./transport/iframe\":22,\"./utils/event\":46,\"debug\":55,\"events\":3,\"inherits\":57,\"json3\":58}],12:[function(require,module,exports){\r\n(function(process){\r\n'use strict';\r\n\r\nvar EventEmitter=require('events').EventEmitter\r\n,inherits=require('inherits')\r\n,urlUtils=require('./utils/url')\r\n,XDR=require('./transport/sender/xdr')\r\n,XHRCors=require('./transport/sender/xhr-cors')\r\n,XHRLocal=require('./transport/sender/xhr-local')\r\n,XHRFake=require('./transport/sender/xhr-fake')\r\n,InfoIframe=require('./info-iframe')\r\n,InfoAjax=require('./info-ajax')\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:info-receiver');\r\n}\r\n\r\nfunction InfoReceiver(baseUrl,urlInfo){\r\n debug(baseUrl);\r\n var self=this;\r\n EventEmitter.call(this);\r\n\r\n setTimeout(function(){\r\n self.doXhr(baseUrl,urlInfo);\r\n},0);\r\n}\r\n\r\ninherits(InfoReceiver,EventEmitter);\r\n\r\n//TODO this is currently ignoring the list of available transports and the whitelist\r\n\r\nInfoReceiver._getReceiver=function(baseUrl,url,urlInfo){\r\n//determine method of CORS support(if needed)\r\n if(urlInfo.sameOrigin){\r\n return new InfoAjax(url,XHRLocal);\r\n}\r\n if(XHRCors.enabled){\r\n return new InfoAjax(url,XHRCors);\r\n}\r\n if(XDR.enabled&&urlInfo.sameScheme){\r\n return new InfoAjax(url,XDR);\r\n}\r\n if(InfoIframe.enabled()){\r\n return new InfoIframe(baseUrl,url);\r\n}\r\n return new InfoAjax(url,XHRFake);\r\n};\r\n\r\nInfoReceiver.prototype.doXhr=function(baseUrl,urlInfo){\r\n var self=this\r\n,url=urlUtils.addPath(baseUrl,'/info')\r\n;\r\n debug('doXhr',url);\r\n\r\n this.xo=InfoReceiver._getReceiver(baseUrl,url,urlInfo);\r\n\r\n this.timeoutRef=setTimeout(function(){\r\n debug('timeout');\r\n self._cleanup(false);\r\n self.emit('finish');\r\n},InfoReceiver.timeout);\r\n\r\n this.xo.once('finish',function(info,rtt){\r\n debug('finish',info,rtt);\r\n self._cleanup(true);\r\n self.emit('finish',info,rtt);\r\n});\r\n};\r\n\r\nInfoReceiver.prototype._cleanup=function(wasClean){\r\n debug('_cleanup');\r\n clearTimeout(this.timeoutRef);\r\n this.timeoutRef=null;\r\n if(!wasClean&&this.xo){\r\n this.xo.close();\r\n}\r\n this.xo=null;\r\n};\r\n\r\nInfoReceiver.prototype.close=function(){\r\n debug('close');\r\n this.removeAllListeners();\r\n this._cleanup(false);\r\n};\r\n\r\nInfoReceiver.timeout=8000;\r\n\r\nmodule.exports=InfoReceiver;\r\n\r\n}).call(this,{env:{}})\r\n\r\n},{\"./info-ajax\":9,\"./info-iframe\":11,\"./transport/sender/xdr\":34,\"./transport/sender/xhr-cors\":35,\"./transport/sender/xhr-fake\":36,\"./transport/sender/xhr-local\":37,\"./utils/url\":52,\"debug\":55,\"events\":3,\"inherits\":57}],13:[function(require,module,exports){\r\n(function(global){\r\n'use strict';\r\n\r\nmodule.exports=global.location||{\r\n origin:'http://localhost:80'\r\n,protocol:'http:'\r\n,host:'localhost'\r\n,port:80\r\n,href:'http://localhost/'\r\n,hash:''\r\n};\r\n\r\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{}],14:[function(require,module,exports){\r\n(function(process,global){\r\n'use strict';\r\n\r\nrequire('./shims');\r\n\r\nvar URL=require('url-parse')\r\n,inherits=require('inherits')\r\n,JSON3=require('json3')\r\n,random=require('./utils/random')\r\n,escape=require('./utils/escape')\r\n,urlUtils=require('./utils/url')\r\n,eventUtils=require('./utils/event')\r\n,transport=require('./utils/transport')\r\n,objectUtils=require('./utils/object')\r\n,browser=require('./utils/browser')\r\n,log=require('./utils/log')\r\n,Event=require('./event/event')\r\n,EventTarget=require('./event/eventtarget')\r\n,loc=require('./location')\r\n,CloseEvent=require('./event/close')\r\n,TransportMessageEvent=require('./event/trans-message')\r\n,InfoReceiver=require('./info-receiver')\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:main');\r\n}\r\n\r\nvar transports;\r\n\r\n//follow constructor steps defined at http://dev.w3.org/html5/websockets/#the-websocket-interface\r\nfunction SockJS(url,protocols,options){\r\n if(!(this instanceof SockJS)){\r\n return new SockJS(url,protocols,options);\r\n}\r\n if(arguments.length<1){\r\n throw new TypeError(\"Failed to construct'SockJS:1 argument required,but only 0 present\");\r\n}\r\n EventTarget.call(this);\r\n\r\n this.readyState=SockJS.CONNECTING;\r\n this.extensions='';\r\n this.protocol='';\r\n\r\n//non-standard extension\r\n options=options||{};\r\n if(options.protocols_whitelist){\r\n log.warn(\"'protocols_whitelist'is DEPRECATED.Use'transports'instead.\");\r\n}\r\n this._transportsWhitelist=options.transports;\r\n this._transportOptions=options.transportOptions||{};\r\n\r\n var sessionId=options.sessionId||8;\r\n if(typeof sessionId==='function'){\r\n this._generateSessionId=sessionId;\r\n}else if(typeof sessionId==='number'){\r\n this._generateSessionId=function(){\r\n return random.string(sessionId);\r\n};\r\n}else{\r\n throw new TypeError('If sessionId is used in the options,it needs to be a number or a function.');\r\n}\r\n\r\n this._server=options.server||random.numberString(1000);\r\n\r\n//Step 1 of WS spec-parse and validate the url.Issue#8\r\n var parsedUrl=new URL(url);\r\n if(!parsedUrl.host||!parsedUrl.protocol){\r\n throw new SyntaxError(\"The URL'\"+url+\"'is invalid\");\r\n}else if(parsedUrl.hash){\r\n throw new SyntaxError('The URL must not contain a fragment');\r\n}else if(parsedUrl.protocol!=='http:'&&parsedUrl.protocol!=='https:'){\r\n throw new SyntaxError(\"The URL's scheme must be either'http:'or'https:'.'\"+parsedUrl.protocol+\"'is not allowed.\");\r\n}\r\n\r\n var secure=parsedUrl.protocol==='https:';\r\n//Step 2-don't allow secure origin with an insecure protocol\r\n if(loc.protocol==='https:'&&!secure){\r\n throw new Error('SecurityError:An insecure SockJS connection may not be initiated from a page loaded over HTTPS');\r\n}\r\n\r\n//Step 3-check port access-no need here\r\n//Step 4-parse protocols argument\r\n if(!protocols){\r\n protocols=[];\r\n}else if(!Array.isArray(protocols)){\r\n protocols=[protocols];\r\n}\r\n\r\n//Step 5-check protocols argument\r\n var sortedProtocols=protocols.sort();\r\n sortedProtocols.forEach(function(proto,i){\r\n if(!proto){\r\n throw new SyntaxError(\"The protocols entry'\"+proto+\"'is invalid.\");\r\n}\r\n if(i<(sortedProtocols.length-1)&&proto===sortedProtocols[i+1]){\r\n throw new SyntaxError(\"The protocols entry'\"+proto+\"'is duplicated.\");\r\n}\r\n});\r\n\r\n//Step 6-convert origin\r\n var o=urlUtils.getOrigin(loc.href);\r\n this._origin=o?o.toLowerCase():null;\r\n\r\n//remove the trailing slash\r\n parsedUrl.set('pathname',parsedUrl.pathname.replace(/\\/+$/,''));\r\n\r\n//store the sanitized url\r\n this.url=parsedUrl.href;\r\n debug('using url',this.url);\r\n\r\n//Step 7-start connection in background\r\n//obtain server info\r\n//http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-26\r\n this._urlInfo={\r\n nullOrigin:!browser.hasDomain()\r\n,sameOrigin:urlUtils.isOriginEqual(this.url,loc.href)\r\n,sameScheme:urlUtils.isSchemeEqual(this.url,loc.href)\r\n};\r\n\r\n this._ir=new InfoReceiver(this.url,this._urlInfo);\r\n this._ir.once('finish',this._receiveInfo.bind(this));\r\n}\r\n\r\ninherits(SockJS,EventTarget);\r\n\r\nfunction userSetCode(code){\r\n return code===1000||(code>=3000&&code<=4999);\r\n}\r\n\r\nSockJS.prototype.close=function(code,reason){\r\n//Step 1\r\n if(code&&!userSetCode(code)){\r\n throw new Error('InvalidAccessError:Invalid code');\r\n}\r\n//Step 2.4 states the max is 123 bytes,but we are just checking length\r\n if(reason&&reason.length>123){\r\n throw new SyntaxError('reason argument has an invalid length');\r\n}\r\n\r\n//Step 3.1\r\n if(this.readyState===SockJS.CLOSING||this.readyState===SockJS.CLOSED){\r\n return;\r\n}\r\n\r\n//TODO look at docs to determine how to set this\r\n var wasClean=true;\r\n this._close(code||1000,reason||'Normal closure',wasClean);\r\n};\r\n\r\nSockJS.prototype.send=function(data){\r\n//#13-convert anything non-string to string\r\n//TODO this currently turns objects into[object Object]\r\n if(typeof data!=='string'){\r\n data=''+data;\r\n}\r\n if(this.readyState===SockJS.CONNECTING){\r\n throw new Error('InvalidStateError:The connection has not been established yet');\r\n}\r\n if(this.readyState!==SockJS.OPEN){\r\n return;\r\n}\r\n this._transport.send(escape.quote(data));\r\n};\r\n\r\nSockJS.version=require('./version');\r\n\r\nSockJS.CONNECTING=0;\r\nSockJS.OPEN=1;\r\nSockJS.CLOSING=2;\r\nSockJS.CLOSED=3;\r\n\r\nSockJS.prototype._receiveInfo=function(info,rtt){\r\n debug('_receiveInfo',rtt);\r\n this._ir=null;\r\n if(!info){\r\n this._close(1002,'Cannot connect to server');\r\n return;\r\n}\r\n\r\n//establish a round-trip timeout(RTO)based on the\r\n//round-trip time(RTT)\r\n this._rto=this.countRTO(rtt);\r\n//allow server to override url used for the actual transport\r\n this._transUrl=info.base_url?info.base_url:this.url;\r\n info=objectUtils.extend(info,this._urlInfo);\r\n debug('info',info);\r\n//determine list of desired and supported transports\r\n var enabledTransports=transports.filterToEnabled(this._transportsWhitelist,info);\r\n this._transports=enabledTransports.main;\r\n debug(this._transports.length+'enabled transports');\r\n\r\n this._connect();\r\n};\r\n\r\nSockJS.prototype._connect=function(){\r\n for(var Transport=this._transports.shift();Transport;Transport=this._transports.shift()){\r\n debug('attempt',Transport.transportName);\r\n if(Transport.needBody){\r\n if(!global.document.body||\r\n(typeof global.document.readyState!=='undefined'&&\r\n global.document.readyState!=='complete'&&\r\n global.document.readyState!=='interactive')){\r\n debug('waiting for body');\r\n this._transports.unshift(Transport);\r\n eventUtils.attachEvent('load',this._connect.bind(this));\r\n return;\r\n}\r\n}\r\n\r\n//calculate timeout based on RTO and round trips.Default to 5s\r\n var timeoutMs=(this._rto*Transport.roundTrips)||5000;\r\n this._transportTimeoutId=setTimeout(this._transportTimeout.bind(this),timeoutMs);\r\n debug('using timeout',timeoutMs);\r\n\r\n var transportUrl=urlUtils.addPath(this._transUrl,'/'+this._server+'/'+this._generateSessionId());\r\n var options=this._transportOptions[Transport.transportName];\r\n debug('transport url',transportUrl);\r\n var transportObj=new Transport(transportUrl,this._transUrl,options);\r\n transportObj.on('message',this._transportMessage.bind(this));\r\n transportObj.once('close',this._transportClose.bind(this));\r\n transportObj.transportName=Transport.transportName;\r\n this._transport=transportObj;\r\n\r\n return;\r\n}\r\n this._close(2000,'All transports failed',false);\r\n};\r\n\r\nSockJS.prototype._transportTimeout=function(){\r\n debug('_transportTimeout');\r\n if(this.readyState===SockJS.CONNECTING){\r\n if(this._transport){\r\n this._transport.close();\r\n}\r\n\r\n this._transportClose(2007,'Transport timed out');\r\n}\r\n};\r\n\r\nSockJS.prototype._transportMessage=function(msg){\r\n debug('_transportMessage',msg);\r\n var self=this\r\n,type=msg.slice(0,1)\r\n,content=msg.slice(1)\r\n,payload\r\n;\r\n\r\n//first check for messages that don't need a payload\r\n switch(type){\r\n case'o':\r\n this._open();\r\n return;\r\n case'h':\r\n this.dispatchEvent(new Event('heartbeat'));\r\n debug('heartbeat',this.transport);\r\n return;\r\n}\r\n\r\n if(content){\r\n try{\r\n payload=JSON3.parse(content);\r\n}catch(e){\r\n debug('bad json',content);\r\n}\r\n}\r\n\r\n if(typeof payload==='undefined'){\r\n debug('empty payload',content);\r\n return;\r\n}\r\n\r\n switch(type){\r\n case'a':\r\n if(Array.isArray(payload)){\r\n payload.forEach(function(p){\r\n debug('message',self.transport,p);\r\n self.dispatchEvent(new TransportMessageEvent(p));\r\n});\r\n}\r\n break;\r\n case'm':\r\n debug('message',this.transport,payload);\r\n this.dispatchEvent(new TransportMessageEvent(payload));\r\n break;\r\n case'c':\r\n if(Array.isArray(payload)&&payload.length===2){\r\n this._close(payload[0],payload[1],true);\r\n}\r\n break;\r\n}\r\n};\r\n\r\nSockJS.prototype._transportClose=function(code,reason){\r\n debug('_transportClose',this.transport,code,reason);\r\n if(this._transport){\r\n this._transport.removeAllListeners();\r\n this._transport=null;\r\n this.transport=null;\r\n}\r\n\r\n if(!userSetCode(code)&&code!==2000&&this.readyState===SockJS.CONNECTING){\r\n this._connect();\r\n return;\r\n}\r\n\r\n this._close(code,reason);\r\n};\r\n\r\nSockJS.prototype._open=function(){\r\n debug('_open',this._transport.transportName,this.readyState);\r\n if(this.readyState===SockJS.CONNECTING){\r\n if(this._transportTimeoutId){\r\n clearTimeout(this._transportTimeoutId);\r\n this._transportTimeoutId=null;\r\n}\r\n this.readyState=SockJS.OPEN;\r\n this.transport=this._transport.transportName;\r\n this.dispatchEvent(new Event('open'));\r\n debug('connected',this.transport);\r\n}else{\r\n//The server might have been restarted,and lost track of our\r\n//connection.\r\n this._close(1006,'Server lost session');\r\n}\r\n};\r\n\r\nSockJS.prototype._close=function(code,reason,wasClean){\r\n debug('_close',this.transport,code,reason,wasClean,this.readyState);\r\n var forceFail=false;\r\n\r\n if(this._ir){\r\n forceFail=true;\r\n this._ir.close();\r\n this._ir=null;\r\n}\r\n if(this._transport){\r\n this._transport.close();\r\n this._transport=null;\r\n this.transport=null;\r\n}\r\n\r\n if(this.readyState===SockJS.CLOSED){\r\n throw new Error('InvalidStateError:SockJS has already been closed');\r\n}\r\n\r\n this.readyState=SockJS.CLOSING;\r\n setTimeout(function(){\r\n this.readyState=SockJS.CLOSED;\r\n\r\n if(forceFail){\r\n this.dispatchEvent(new Event('error'));\r\n}\r\n\r\n var e=new CloseEvent('close');\r\n e.wasClean=wasClean||false;\r\n e.code=code||1000;\r\n e.reason=reason;\r\n\r\n this.dispatchEvent(e);\r\n this.onmessage=this.onclose=this.onerror=null;\r\n debug('disconnected');\r\n}.bind(this),0);\r\n};\r\n\r\n//See:http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/\r\n//and RFC 2988.\r\nSockJS.prototype.countRTO=function(rtt){\r\n//In a local environment,when using IE8/9 and the`jsonp-polling`\r\n//transport the time needed to establish a connection(the time that pass\r\n//from the opening of the transport to the call of`_dispatchOpen`)is\r\n//around 200msec(the lower bound used in the article above)and this\r\n//causes spurious timeouts.For this reason we calculate a value slightly\r\n//larger than that used in the article.\r\n if(rtt>100){\r\n return 4*rtt;//rto>400msec\r\n}\r\n return 300+rtt;//300msec<rto<=400msec\r\n};\r\n\r\nmodule.exports=function(availableTransports){\r\n transports=transport(availableTransports);\r\n require('./iframe-bootstrap')(SockJS,availableTransports);\r\n return SockJS;\r\n};\r\n\r\n}).call(this,{env:{}},typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{\"./event/close\":2,\"./event/event\":4,\"./event/eventtarget\":5,\"./event/trans-message\":6,\"./iframe-bootstrap\":8,\"./info-receiver\":12,\"./location\":13,\"./shims\":15,\"./utils/browser\":44,\"./utils/escape\":45,\"./utils/event\":46,\"./utils/log\":48,\"./utils/object\":49,\"./utils/random\":50,\"./utils/transport\":51,\"./utils/url\":52,\"./version\":53,\"debug\":55,\"inherits\":57,\"json3\":58,\"url-parse\":61}],15:[function(require,module,exports){\r\n/*eslint-disable*/\r\n/*jscs:disable*/\r\n'use strict';\r\n\r\n//pulled specific shims from https://github.com/es-shims/es5-shim\r\n\r\nvar ArrayPrototype=Array.prototype;\r\nvar ObjectPrototype=Object.prototype;\r\nvar FunctionPrototype=Function.prototype;\r\nvar StringPrototype=String.prototype;\r\nvar array_slice=ArrayPrototype.slice;\r\n\r\nvar _toString=ObjectPrototype.toString;\r\nvar isFunction=function(val){\r\n return ObjectPrototype.toString.call(val)==='[object Function]';\r\n};\r\nvar isArray=function isArray(obj){\r\n return _toString.call(obj)==='[object Array]';\r\n};\r\nvar isString=function isString(obj){\r\n return _toString.call(obj)==='[object String]';\r\n};\r\n\r\nvar supportsDescriptors=Object.defineProperty&&(function(){\r\n try{\r\n Object.defineProperty({},'x',{});\r\n return true;\r\n}catch(e){/*this is ES3*/\r\n return false;\r\n}\r\n}());\r\n\r\n//Define configurable,writable and non-enumerable props\r\n//if they don't exist.\r\nvar defineProperty;\r\nif(supportsDescriptors){\r\n defineProperty=function(object,name,method,forceAssign){\r\n if(!forceAssign&&(name in object)){return;}\r\n Object.defineProperty(object,name,{\r\n configurable:true,\r\n enumerable:false,\r\n writable:true,\r\n value:method\r\n});\r\n};\r\n}else{\r\n defineProperty=function(object,name,method,forceAssign){\r\n if(!forceAssign&&(name in object)){return;}\r\n object[name]=method;\r\n};\r\n}\r\nvar defineProperties=function(object,map,forceAssign){\r\n for(var name in map){\r\n if(ObjectPrototype.hasOwnProperty.call(map,name)){\r\n defineProperty(object,name,map[name],forceAssign);\r\n}\r\n}\r\n};\r\n\r\nvar toObject=function(o){\r\n if(o==null){//this matches both null and undefined\r\n throw new TypeError(\"can't convert\"+o+'to object');\r\n}\r\n return Object(o);\r\n};\r\n\r\n//\r\n//Util\r\n//======\r\n//\r\n\r\n//ES5 9.4\r\n//http://es5.github.com/#x9.4\r\n//http://jsperf.com/to-integer\r\n\r\nfunction toInteger(num){\r\n var n=+num;\r\n if(n!==n){//isNaN\r\n n=0;\r\n}else if(n!==0&&n!==(1/0)&&n!==-(1/0)){\r\n n=(n>0||-1)*Math.floor(Math.abs(n));\r\n}\r\n return n;\r\n}\r\n\r\nfunction ToUint32(x){\r\n return x>>>0;\r\n}\r\n\r\n//\r\n//Function\r\n//========\r\n//\r\n\r\n//ES-5 15.3.4.5\r\n//http://es5.github.com/#x15.3.4.5\r\n\r\nfunction Empty(){}\r\n\r\ndefineProperties(FunctionPrototype,{\r\n bind:function bind(that){//.length is 1\r\n//1.Let Target be the this value.\r\n var target=this;\r\n//2.If IsCallable(Target)is false,throw a TypeError exception.\r\n if(!isFunction(target)){\r\n throw new TypeError('Function.prototype.bind called on incompatible'+target);\r\n}\r\n//3.Let A be a new(possibly empty)internal list of all of the\r\n//argument values provided after thisArg(arg1,arg2 etc),in order.\r\n//XXX slicedArgs will stand in for\"A\"if used\r\n var args=array_slice.call(arguments,1);//for normal call\r\n//4.Let F be a new native ECMAScript object.\r\n//11.Set the[[Prototype]]internal property of F to the standard\r\n//built-in Function prototype object as specified in 15.3.3.1.\r\n//12.Set the[[Call]]internal property of F as described in\r\n//15.3.4.5.1.\r\n//13.Set the[[Construct]]internal property of F as described in\r\n//15.3.4.5.2.\r\n//14.Set the[[HasInstance]]internal property of F as described in\r\n//15.3.4.5.3.\r\n var binder=function(){\r\n\r\n if(this instanceof bound){\r\n//15.3.4.5.2[[Construct]]\r\n//When the[[Construct]]internal method of a function object,\r\n//F that was created using the bind function is called with a\r\n//list of arguments ExtraArgs,the following steps are taken:\r\n//1.Let target be the value of F's[[TargetFunction]]\r\n//internal property.\r\n//2.If target has no[[Construct]]internal method,a\r\n//TypeError exception is thrown.\r\n//3.Let boundArgs be the value of F's[[BoundArgs]]internal\r\n//property.\r\n//4.Let args be a new list containing the same values as the\r\n//list boundArgs in the same order followed by the same\r\n//values as the list ExtraArgs in the same order.\r\n//5.Return the result of calling the[[Construct]]internal\r\n//method of target providing args as the arguments.\r\n\r\n var result=target.apply(\r\n this,\r\n args.concat(array_slice.call(arguments))\r\n);\r\n if(Object(result)===result){\r\n return result;\r\n}\r\n return this;\r\n\r\n}else{\r\n//15.3.4.5.1[[Call]]\r\n//When the[[Call]]internal method of a function object,F,\r\n//which was created using the bind function is called with a\r\n//this value and a list of arguments ExtraArgs,the following\r\n//steps are taken:\r\n//1.Let boundArgs be the value of F's[[BoundArgs]]internal\r\n//property.\r\n//2.Let boundThis be the value of F's[[BoundThis]]internal\r\n//property.\r\n//3.Let target be the value of F's[[TargetFunction]]internal\r\n//property.\r\n//4.Let args be a new list containing the same values as the\r\n//list boundArgs in the same order followed by the same\r\n//values as the list ExtraArgs in the same order.\r\n//5.Return the result of calling the[[Call]]internal method\r\n//of target providing boundThis as the this value and\r\n//providing args as the arguments.\r\n\r\n//equiv:target.call(this,...boundArgs,...args)\r\n return target.apply(\r\n that,\r\n args.concat(array_slice.call(arguments))\r\n);\r\n\r\n}\r\n\r\n};\r\n\r\n//15.If the[[Class]]internal property of Target is\"Function\",then\r\n//a.Let L be the length property of Target minus the length of A.\r\n//b.Set the length own property of F to either 0 or L,whichever is\r\n//larger.\r\n//16.Else set the length own property of F to 0.\r\n\r\n var boundLength=Math.max(0,target.length-args.length);\r\n\r\n//17.Set the attributes of the length own property of F to the values\r\n//specified in 15.3.5.1.\r\n var boundArgs=[];\r\n for(var i=0;i<boundLength;i++){\r\n boundArgs.push('$'+i);\r\n}\r\n\r\n//XXX Build a dynamic function with desired amount of arguments is the only\r\n//way to set the length property of a function.\r\n//In environments where Content Security Policies enabled(Chrome extensions,\r\n//for ex.)all use of eval or Function costructor throws an exception.\r\n//However in all of these environments Function.prototype.bind exists\r\n//and so this code will never be executed.\r\n var bound=Function('binder','return function('+boundArgs.join(',')+'){return binder.apply(this,arguments);}')(binder);\r\n\r\n if(target.prototype){\r\n Empty.prototype=target.prototype;\r\n bound.prototype=new Empty();\r\n//Clean up dangling references.\r\n Empty.prototype=null;\r\n}\r\n\r\n//TODO\r\n//18.Set the[[Extensible]]internal property of F to true.\r\n\r\n//TODO\r\n//19.Let thrower be the[[ThrowTypeError]]function Object(13.2.3).\r\n//20.Call the[[DefineOwnProperty]]internal method of F with\r\n//arguments\"caller\",PropertyDescriptor{[[Get]]:thrower,[[Set]]:\r\n//thrower,[[Enumerable]]:false,[[Configurable]]:false},and\r\n//false.\r\n//21.Call the[[DefineOwnProperty]]internal method of F with\r\n//arguments\"arguments\",PropertyDescriptor{[[Get]]:thrower,\r\n//[[Set]]:thrower,[[Enumerable]]:false,[[Configurable]]:false},\r\n//and false.\r\n\r\n//TODO\r\n//NOTE Function objects created using Function.prototype.bind do not\r\n//have a prototype property or the[[Code]],[[FormalParameters]],and\r\n//[[Scope]]internal properties.\r\n//XXX can't delete prototype in pure-js.\r\n\r\n//22.Return F.\r\n return bound;\r\n}\r\n});\r\n\r\n//\r\n//Array\r\n//=====\r\n//\r\n\r\n//ES5 15.4.3.2\r\n//http://es5.github.com/#x15.4.3.2\r\n//https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray\r\ndefineProperties(Array,{isArray:isArray});\r\n\r\n\r\nvar boxedString=Object('a');\r\nvar splitString=boxedString[0]!=='a'||!(0 in boxedString);\r\n\r\nvar properlyBoxesContext=function properlyBoxed(method){\r\n//Check node 0.6.21 bug where third parameter is not boxed\r\n var properlyBoxesNonStrict=true;\r\n var properlyBoxesStrict=true;\r\n if(method){\r\n method.call('foo',function(_,__,context){\r\n if(typeof context!=='object'){properlyBoxesNonStrict=false;}\r\n});\r\n\r\n method.call([1],function(){\r\n'use strict';\r\n properlyBoxesStrict=typeof this==='string';\r\n},'x');\r\n}\r\n return!!method&&properlyBoxesNonStrict&&properlyBoxesStrict;\r\n};\r\n\r\ndefineProperties(ArrayPrototype,{\r\n forEach:function forEach(fun/*,thisp*/){\r\n var object=toObject(this),\r\n self=splitString&&isString(this)?this.split(''):object,\r\n thisp=arguments[1],\r\n i=-1,\r\n length=self.length>>>0;\r\n\r\n//If no callback function or if callback is not a callable function\r\n if(!isFunction(fun)){\r\n throw new TypeError();//TODO message\r\n}\r\n\r\n while(++i<length){\r\n if(i in self){\r\n//Invoke the callback function with call,passing arguments:\r\n//context,property value,property key,thisArg object\r\n//context\r\n fun.call(thisp,self[i],i,object);\r\n}\r\n}\r\n}\r\n},!properlyBoxesContext(ArrayPrototype.forEach));\r\n\r\n//ES5 15.4.4.14\r\n//http://es5.github.com/#x15.4.4.14\r\n//https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\r\nvar hasFirefox2IndexOfBug=Array.prototype.indexOf&&[0,1].indexOf(1,2)!==-1;\r\ndefineProperties(ArrayPrototype,{\r\n indexOf:function indexOf(sought/*,fromIndex*/){\r\n var self=splitString&&isString(this)?this.split(''):toObject(this),\r\n length=self.length>>>0;\r\n\r\n if(!length){\r\n return-1;\r\n}\r\n\r\n var i=0;\r\n if(arguments.length>1){\r\n i=toInteger(arguments[1]);\r\n}\r\n\r\n//handle negative indices\r\n i=i>=0?i:Math.max(0,length+i);\r\n for(;i<length;i++){\r\n if(i in self&&self[i]===sought){\r\n return i;\r\n}\r\n}\r\n return-1;\r\n}\r\n},hasFirefox2IndexOfBug);\r\n\r\n//\r\n//String\r\n//======\r\n//\r\n\r\n//ES5 15.5.4.14\r\n//http://es5.github.com/#x15.5.4.14\r\n\r\n//[bugfix,IE lt 9,firefox 4,Konqueror,Opera,obscure browsers]\r\n//Many browsers do not split properly with regular expressions or they\r\n//do not perform the split correctly under obscure conditions.\r\n//See http://blog.stevenlevithan.com/archives/cross-browser-split\r\n//I've tested in many browsers and this seems to cover the deviant ones:\r\n//'ab'.split(/(?:ab)*/)should be[\"\",\"\"],not[\"\"]\r\n//'.'.split(/(.?)(.?)/)should be[\"\",\".\",\"\",\"\"],not[\"\",\"\"]\r\n//'tesst'.split(/(s)*/)should be[\"t\",undefined,\"e\",\"s\",\"t\"],not\r\n//[undefined,\"t\",undefined,\"e\",...]\r\n//''.split(/.?/)should be[],not[\"\"]\r\n//'.'.split(/()()/)should be[\".\"],not[\"\",\"\",\".\"]\r\n\r\nvar string_split=StringPrototype.split;\r\nif(\r\n'ab'.split(/(?:ab)*/).length!==2||\r\n'.'.split(/(.?)(.?)/).length!==4||\r\n'tesst'.split(/(s)*/)[1]==='t'||\r\n'test'.split(/(?:)/,-1).length!==4||\r\n''.split(/.?/).length||\r\n'.'.split(/()()/).length>1\r\n){\r\n(function(){\r\n var compliantExecNpcg=/()??/.exec('')[1]===void 0;//NPCG:nonparticipating capturing group\r\n\r\n StringPrototype.split=function(separator,limit){\r\n var string=this;\r\n if(separator===void 0&&limit===0){\r\n return[];\r\n}\r\n\r\n//If`separator`is not a regex,use native split\r\n if(_toString.call(separator)!=='[object RegExp]'){\r\n return string_split.call(this,separator,limit);\r\n}\r\n\r\n var output=[],\r\n flags=(separator.ignoreCase?'i':'')+\r\n(separator.multiline?'m':'')+\r\n(separator.extended?'x':'')+//Proposed for ES6\r\n(separator.sticky?'y':''),//Firefox 3+\r\n lastLastIndex=0,\r\n//Make`global`and avoid`lastIndex`issues by working with a copy\r\n separator2,match,lastIndex,lastLength;\r\n separator=new RegExp(separator.source,flags+'g');\r\n string+='';//Type-convert\r\n if(!compliantExecNpcg){\r\n//Doesn't need flags gy,but they don't hurt\r\n separator2=new RegExp('^'+separator.source+'$(?!\\\\s)',flags);\r\n}\r\n/*Values for`limit`,per the spec:\r\n*If undefined:4294967295//Math.pow(2,32)-1\r\n*If 0,Infinity,or NaN:0\r\n*If positive number:limit=Math.floor(limit);if(limit>4294967295)limit-=4294967296;\r\n*If negative number:4294967296-Math.floor(Math.abs(limit))\r\n*If other:Type-convert,then use the above rules\r\n*/\r\n limit=limit===void 0?\r\n-1>>>0://Math.pow(2,32)-1\r\n ToUint32(limit);\r\n while(match=separator.exec(string)){\r\n//`separator.lastIndex`is not reliable cross-browser\r\n lastIndex=match.index+match[0].length;\r\n if(lastIndex>lastLastIndex){\r\n output.push(string.slice(lastLastIndex,match.index));\r\n//Fix browsers whose`exec`methods don't consistently return`undefined`for\r\n//nonparticipating capturing groups\r\n if(!compliantExecNpcg&&match.length>1){\r\n match[0].replace(separator2,function(){\r\n for(var i=1;i<arguments.length-2;i++){\r\n if(arguments[i]===void 0){\r\n match[i]=void 0;\r\n}\r\n}\r\n});\r\n}\r\n if(match.length>1&&match.index<string.length){\r\n ArrayPrototype.push.apply(output,match.slice(1));\r\n}\r\n lastLength=match[0].length;\r\n lastLastIndex=lastIndex;\r\n if(output.length>=limit){\r\n break;\r\n}\r\n}\r\n if(separator.lastIndex===match.index){\r\n separator.lastIndex++;//Avoid an infinite loop\r\n}\r\n}\r\n if(lastLastIndex===string.length){\r\n if(lastLength||!separator.test('')){\r\n output.push('');\r\n}\r\n}else{\r\n output.push(string.slice(lastLastIndex));\r\n}\r\n return output.length>limit?output.slice(0,limit):output;\r\n};\r\n}());\r\n\r\n//[bugfix,chrome]\r\n//If separator is undefined,then the result array contains just one String,\r\n//which is the this value(converted to a String).If limit is not undefined,\r\n//then the output array is truncated so that it contains no more than limit\r\n//elements.\r\n//\"0\".split(undefined,0)->[]\r\n}else if('0'.split(void 0,0).length){\r\n StringPrototype.split=function split(separator,limit){\r\n if(separator===void 0&&limit===0){return[];}\r\n return string_split.call(this,separator,limit);\r\n};\r\n}\r\n\r\n//ECMA-262,3rd B.2.3\r\n//Not an ECMAScript standard,although ECMAScript 3rd Edition has a\r\n//non-normative section suggesting uniform semantics and it should be\r\n//normalized across all browsers\r\n//[bugfix,IE lt 9]IE<9 substr()with negative value not working in IE\r\nvar string_substr=StringPrototype.substr;\r\nvar hasNegativeSubstrBug=''.substr&&'0b'.substr(-1)!=='b';\r\ndefineProperties(StringPrototype,{\r\n substr:function substr(start,length){\r\n return string_substr.call(\r\n this,\r\n start<0?((start=this.length+start)<0?0:start):start,\r\n length\r\n);\r\n}\r\n},hasNegativeSubstrBug);\r\n\r\n},{}],16:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports=[\r\n//streaming transports\r\n require('./transport/websocket')\r\n,require('./transport/xhr-streaming')\r\n,require('./transport/xdr-streaming')\r\n,require('./transport/eventsource')\r\n,require('./transport/lib/iframe-wrap')(require('./transport/eventsource'))\r\n\r\n//polling transports\r\n,require('./transport/htmlfile')\r\n,require('./transport/lib/iframe-wrap')(require('./transport/htmlfile'))\r\n,require('./transport/xhr-polling')\r\n,require('./transport/xdr-polling')\r\n,require('./transport/lib/iframe-wrap')(require('./transport/xhr-polling'))\r\n,require('./transport/jsonp-polling')\r\n];\r\n\r\n},{\"./transport/eventsource\":20,\"./transport/htmlfile\":21,\"./transport/jsonp-polling\":23,\"./transport/lib/iframe-wrap\":26,\"./transport/websocket\":38,\"./transport/xdr-polling\":39,\"./transport/xdr-streaming\":40,\"./transport/xhr-polling\":41,\"./transport/xhr-streaming\":42}],17:[function(require,module,exports){\r\n(function(process,global){\r\n'use strict';\r\n\r\nvar EventEmitter=require('events').EventEmitter\r\n,inherits=require('inherits')\r\n,utils=require('../../utils/event')\r\n,urlUtils=require('../../utils/url')\r\n,XHR=global.XMLHttpRequest\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:browser:xhr');\r\n}\r\n\r\nfunction AbstractXHRObject(method,url,payload,opts){\r\n debug(method,url);\r\n var self=this;\r\n EventEmitter.call(this);\r\n\r\n setTimeout(function(){\r\n self._start(method,url,payload,opts);\r\n},0);\r\n}\r\n\r\ninherits(AbstractXHRObject,EventEmitter);\r\n\r\nAbstractXHRObject.prototype._start=function(method,url,payload,opts){\r\n var self=this;\r\n\r\n try{\r\n this.xhr=new XHR();\r\n}catch(x){\r\n//intentionally empty\r\n}\r\n\r\n if(!this.xhr){\r\n debug('no xhr');\r\n this.emit('finish',0,'no xhr support');\r\n this._cleanup();\r\n return;\r\n}\r\n\r\n//several browsers cache POSTs\r\n url=urlUtils.addQuery(url,'t='+(+new Date()));\r\n\r\n//Explorer tends to keep connection open,even after the\r\n//tab gets closed:http://bugs.jquery.com/ticket/5280\r\n this.unloadRef=utils.unloadAdd(function(){\r\n debug('unload cleanup');\r\n self._cleanup(true);\r\n});\r\n try{\r\n this.xhr.open(method,url,true);\r\n if(this.timeout&&'timeout'in this.xhr){\r\n this.xhr.timeout=this.timeout;\r\n this.xhr.ontimeout=function(){\r\n debug('xhr timeout');\r\n self.emit('finish',0,'');\r\n self._cleanup(false);\r\n};\r\n}\r\n}catch(e){\r\n debug('exception',e);\r\n//IE raises an exception on wrong port.\r\n this.emit('finish',0,'');\r\n this._cleanup(false);\r\n return;\r\n}\r\n\r\n if((!opts||!opts.noCredentials)&&AbstractXHRObject.supportsCORS){\r\n debug('withCredentials');\r\n//Mozilla docs says https://developer.mozilla.org/en/XMLHttpRequest:\r\n//\"This never affects same-site requests.\"\r\n\r\n this.xhr.withCredentials=true;\r\n}\r\n if(opts&&opts.headers){\r\n for(var key in opts.headers){\r\n this.xhr.setRequestHeader(key,opts.headers[key]);\r\n}\r\n}\r\n\r\n this.xhr.onreadystatechange=function(){\r\n if(self.xhr){\r\n var x=self.xhr;\r\n var text,status;\r\n debug('readyState',x.readyState);\r\n switch(x.readyState){\r\n case 3:\r\n//IE doesn't like peeking into responseText or status\r\n//on Microsoft.XMLHTTP and readystate=3\r\n try{\r\n status=x.status;\r\n text=x.responseText;\r\n}catch(e){\r\n//intentionally empty\r\n}\r\n debug('status',status);\r\n//IE returns 1223 for 204:http://bugs.jquery.com/ticket/1450\r\n if(status===1223){\r\n status=204;\r\n}\r\n\r\n//IE does return readystate==3 for 404 answers.\r\n if(status===200&&text&&text.length>0){\r\n debug('chunk');\r\n self.emit('chunk',status,text);\r\n}\r\n break;\r\n case 4:\r\n status=x.status;\r\n debug('status',status);\r\n//IE returns 1223 for 204:http://bugs.jquery.com/ticket/1450\r\n if(status===1223){\r\n status=204;\r\n}\r\n//IE returns this for a bad port\r\n//http://msdn.microsoft.com/en-us/library/windows/desktop/aa383770(v=vs.85).aspx\r\n if(status===12005||status===12029){\r\n status=0;\r\n}\r\n\r\n debug('finish',status,x.responseText);\r\n self.emit('finish',status,x.responseText);\r\n self._cleanup(false);\r\n break;\r\n}\r\n}\r\n};\r\n\r\n try{\r\n self.xhr.send(payload);\r\n}catch(e){\r\n self.emit('finish',0,'');\r\n self._cleanup(false);\r\n}\r\n};\r\n\r\nAbstractXHRObject.prototype._cleanup=function(abort){\r\n debug('cleanup');\r\n if(!this.xhr){\r\n return;\r\n}\r\n this.removeAllListeners();\r\n utils.unloadDel(this.unloadRef);\r\n\r\n//IE needs this field to be a function\r\n this.xhr.onreadystatechange=function(){};\r\n if(this.xhr.ontimeout){\r\n this.xhr.ontimeout=null;\r\n}\r\n\r\n if(abort){\r\n try{\r\n this.xhr.abort();\r\n}catch(x){\r\n//intentionally empty\r\n}\r\n}\r\n this.unloadRef=this.xhr=null;\r\n};\r\n\r\nAbstractXHRObject.prototype.close=function(){\r\n debug('close');\r\n this._cleanup(true);\r\n};\r\n\r\nAbstractXHRObject.enabled=!!XHR;\r\n//override XMLHttpRequest for IE6/7\r\n//obfuscate to avoid firewalls\r\nvar axo=['Active'].concat('Object').join('X');\r\nif(!AbstractXHRObject.enabled&&(axo in global)){\r\n debug('overriding xmlhttprequest');\r\n XHR=function(){\r\n try{\r\n return new global[axo]('Microsoft.XMLHTTP');\r\n}catch(e){\r\n return null;\r\n}\r\n};\r\n AbstractXHRObject.enabled=!!new XHR();\r\n}\r\n\r\nvar cors=false;\r\ntry{\r\n cors='withCredentials'in new XHR();\r\n}catch(ignored){\r\n//intentionally empty\r\n}\r\n\r\nAbstractXHRObject.supportsCORS=cors;\r\n\r\nmodule.exports=AbstractXHRObject;\r\n\r\n}).call(this,{env:{}},typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{\"../../utils/event\":46,\"../../utils/url\":52,\"debug\":55,\"events\":3,\"inherits\":57}],18:[function(require,module,exports){\r\n(function(global){\r\nmodule.exports=global.EventSource;\r\n\r\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{}],19:[function(require,module,exports){\r\n(function(global){\r\n'use strict';\r\n\r\nvar Driver=global.WebSocket||global.MozWebSocket;\r\nif(Driver){\r\n\tmodule.exports=function WebSocketBrowserDriver(url){\r\n\t\treturn new Driver(url);\r\n\t};\r\n}else{\r\n\tmodule.exports=undefined;\r\n}\r\n\r\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{}],20:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,AjaxBasedTransport=require('./lib/ajax-based')\r\n,EventSourceReceiver=require('./receiver/eventsource')\r\n,XHRCorsObject=require('./sender/xhr-cors')\r\n,EventSourceDriver=require('eventsource')\r\n;\r\n\r\nfunction EventSourceTransport(transUrl){\r\n if(!EventSourceTransport.enabled()){\r\n throw new Error('Transport created when disabled');\r\n}\r\n\r\n AjaxBasedTransport.call(this,transUrl,'/eventsource',EventSourceReceiver,XHRCorsObject);\r\n}\r\n\r\ninherits(EventSourceTransport,AjaxBasedTransport);\r\n\r\nEventSourceTransport.enabled=function(){\r\n return!!EventSourceDriver;\r\n};\r\n\r\nEventSourceTransport.transportName='eventsource';\r\nEventSourceTransport.roundTrips=2;\r\n\r\nmodule.exports=EventSourceTransport;\r\n\r\n},{\"./lib/ajax-based\":24,\"./receiver/eventsource\":29,\"./sender/xhr-cors\":35,\"eventsource\":18,\"inherits\":57}],21:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,HtmlfileReceiver=require('./receiver/htmlfile')\r\n,XHRLocalObject=require('./sender/xhr-local')\r\n,AjaxBasedTransport=require('./lib/ajax-based')\r\n;\r\n\r\nfunction HtmlFileTransport(transUrl){\r\n if(!HtmlfileReceiver.enabled){\r\n throw new Error('Transport created when disabled');\r\n}\r\n AjaxBasedTransport.call(this,transUrl,'/htmlfile',HtmlfileReceiver,XHRLocalObject);\r\n}\r\n\r\ninherits(HtmlFileTransport,AjaxBasedTransport);\r\n\r\nHtmlFileTransport.enabled=function(info){\r\n return HtmlfileReceiver.enabled&&info.sameOrigin;\r\n};\r\n\r\nHtmlFileTransport.transportName='htmlfile';\r\nHtmlFileTransport.roundTrips=2;\r\n\r\nmodule.exports=HtmlFileTransport;\r\n\r\n},{\"./lib/ajax-based\":24,\"./receiver/htmlfile\":30,\"./sender/xhr-local\":37,\"inherits\":57}],22:[function(require,module,exports){\r\n(function(process){\r\n'use strict';\r\n\r\n//Few cool transports do work only for same-origin.In order to make\r\n//them work cross-domain we shall use iframe,served from the\r\n//remote domain.New browsers have capabilities to communicate with\r\n//cross domain iframe using postMessage().In IE it was implemented\r\n//from IE 8+,but of course,IE got some details wrong:\r\n//http://msdn.microsoft.com/en-us/library/cc197015(v=VS.85).aspx\r\n//http://stevesouders.com/misc/test-postmessage.php\r\n\r\nvar inherits=require('inherits')\r\n,JSON3=require('json3')\r\n,EventEmitter=require('events').EventEmitter\r\n,version=require('../version')\r\n,urlUtils=require('../utils/url')\r\n,iframeUtils=require('../utils/iframe')\r\n,eventUtils=require('../utils/event')\r\n,random=require('../utils/random')\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:transport:iframe');\r\n}\r\n\r\nfunction IframeTransport(transport,transUrl,baseUrl){\r\n if(!IframeTransport.enabled()){\r\n throw new Error('Transport created when disabled');\r\n}\r\n EventEmitter.call(this);\r\n\r\n var self=this;\r\n this.origin=urlUtils.getOrigin(baseUrl);\r\n this.baseUrl=baseUrl;\r\n this.transUrl=transUrl;\r\n this.transport=transport;\r\n this.windowId=random.string(8);\r\n\r\n var iframeUrl=urlUtils.addPath(baseUrl,'/iframe.html')+'#'+this.windowId;\r\n debug(transport,transUrl,iframeUrl);\r\n\r\n this.iframeObj=iframeUtils.createIframe(iframeUrl,function(r){\r\n debug('err callback');\r\n self.emit('close',1006,'Unable to load an iframe('+r+')');\r\n self.close();\r\n});\r\n\r\n this.onmessageCallback=this._message.bind(this);\r\n eventUtils.attachEvent('message',this.onmessageCallback);\r\n}\r\n\r\ninherits(IframeTransport,EventEmitter);\r\n\r\nIframeTransport.prototype.close=function(){\r\n debug('close');\r\n this.removeAllListeners();\r\n if(this.iframeObj){\r\n eventUtils.detachEvent('message',this.onmessageCallback);\r\n try{\r\n//When the iframe is not loaded,IE raises an exception\r\n//on'contentWindow'.\r\n this.postMessage('c');\r\n}catch(x){\r\n//intentionally empty\r\n}\r\n this.iframeObj.cleanup();\r\n this.iframeObj=null;\r\n this.onmessageCallback=this.iframeObj=null;\r\n}\r\n};\r\n\r\nIframeTransport.prototype._message=function(e){\r\n debug('message',e.data);\r\n if(!urlUtils.isOriginEqual(e.origin,this.origin)){\r\n debug('not same origin',e.origin,this.origin);\r\n return;\r\n}\r\n\r\n var iframeMessage;\r\n try{\r\n iframeMessage=JSON3.parse(e.data);\r\n}catch(ignored){\r\n debug('bad json',e.data);\r\n return;\r\n}\r\n\r\n if(iframeMessage.windowId!==this.windowId){\r\n debug('mismatched window id',iframeMessage.windowId,this.windowId);\r\n return;\r\n}\r\n\r\n switch(iframeMessage.type){\r\n case's':\r\n this.iframeObj.loaded();\r\n//window global dependency\r\n this.postMessage('s',JSON3.stringify([\r\n version\r\n,this.transport\r\n,this.transUrl\r\n,this.baseUrl\r\n]));\r\n break;\r\n case't':\r\n this.emit('message',iframeMessage.data);\r\n break;\r\n case'c':\r\n var cdata;\r\n try{\r\n cdata=JSON3.parse(iframeMessage.data);\r\n}catch(ignored){\r\n debug('bad json',iframeMessage.data);\r\n return;\r\n}\r\n this.emit('close',cdata[0],cdata[1]);\r\n this.close();\r\n break;\r\n}\r\n};\r\n\r\nIframeTransport.prototype.postMessage=function(type,data){\r\n debug('postMessage',type,data);\r\n this.iframeObj.post(JSON3.stringify({\r\n windowId:this.windowId\r\n,type:type\r\n,data:data||''\r\n}),this.origin);\r\n};\r\n\r\nIframeTransport.prototype.send=function(message){\r\n debug('send',message);\r\n this.postMessage('m',message);\r\n};\r\n\r\nIframeTransport.enabled=function(){\r\n return iframeUtils.iframeEnabled;\r\n};\r\n\r\nIframeTransport.transportName='iframe';\r\nIframeTransport.roundTrips=2;\r\n\r\nmodule.exports=IframeTransport;\r\n\r\n}).call(this,{env:{}})\r\n\r\n},{\"../utils/event\":46,\"../utils/iframe\":47,\"../utils/random\":50,\"../utils/url\":52,\"../version\":53,\"debug\":55,\"events\":3,\"inherits\":57,\"json3\":58}],23:[function(require,module,exports){\r\n(function(global){\r\n'use strict';\r\n\r\n//The simplest and most robust transport,using the well-know cross\r\n//domain hack-JSONP.This transport is quite inefficient-one\r\n//message could use up to one http request.But at least it works almost\r\n//everywhere.\r\n//Known limitations:\r\n//o you will get a spinning cursor\r\n//o for Konqueror a dumb timer is needed to detect errors\r\n\r\nvar inherits=require('inherits')\r\n,SenderReceiver=require('./lib/sender-receiver')\r\n,JsonpReceiver=require('./receiver/jsonp')\r\n,jsonpSender=require('./sender/jsonp')\r\n;\r\n\r\nfunction JsonPTransport(transUrl){\r\n if(!JsonPTransport.enabled()){\r\n throw new Error('Transport created when disabled');\r\n}\r\n SenderReceiver.call(this,transUrl,'/jsonp',jsonpSender,JsonpReceiver);\r\n}\r\n\r\ninherits(JsonPTransport,SenderReceiver);\r\n\r\nJsonPTransport.enabled=function(){\r\n return!!global.document;\r\n};\r\n\r\nJsonPTransport.transportName='jsonp-polling';\r\nJsonPTransport.roundTrips=1;\r\nJsonPTransport.needBody=true;\r\n\r\nmodule.exports=JsonPTransport;\r\n\r\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{\"./lib/sender-receiver\":28,\"./receiver/jsonp\":31,\"./sender/jsonp\":33,\"inherits\":57}],24:[function(require,module,exports){\r\n(function(process){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,urlUtils=require('../../utils/url')\r\n,SenderReceiver=require('./sender-receiver')\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:ajax-based');\r\n}\r\n\r\nfunction createAjaxSender(AjaxObject){\r\n return function(url,payload,callback){\r\n debug('create ajax sender',url,payload);\r\n var opt={};\r\n if(typeof payload==='string'){\r\n opt.headers={'Content-type':'text/plain'};\r\n}\r\n var ajaxUrl=urlUtils.addPath(url,'/xhr_send');\r\n var xo=new AjaxObject('POST',ajaxUrl,payload,opt);\r\n xo.once('finish',function(status){\r\n debug('finish',status);\r\n xo=null;\r\n\r\n if(status!==200&&status!==204){\r\n return callback(new Error('http status'+status));\r\n}\r\n callback();\r\n});\r\n return function(){\r\n debug('abort');\r\n xo.close();\r\n xo=null;\r\n\r\n var err=new Error('Aborted');\r\n err.code=1000;\r\n callback(err);\r\n};\r\n};\r\n}\r\n\r\nfunction AjaxBasedTransport(transUrl,urlSuffix,Receiver,AjaxObject){\r\n SenderReceiver.call(this,transUrl,urlSuffix,createAjaxSender(AjaxObject),Receiver,AjaxObject);\r\n}\r\n\r\ninherits(AjaxBasedTransport,SenderReceiver);\r\n\r\nmodule.exports=AjaxBasedTransport;\r\n\r\n}).call(this,{env:{}})\r\n\r\n},{\"../../utils/url\":52,\"./sender-receiver\":28,\"debug\":55,\"inherits\":57}],25:[function(require,module,exports){\r\n(function(process){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,EventEmitter=require('events').EventEmitter\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:buffered-sender');\r\n}\r\n\r\nfunction BufferedSender(url,sender){\r\n debug(url);\r\n EventEmitter.call(this);\r\n this.sendBuffer=[];\r\n this.sender=sender;\r\n this.url=url;\r\n}\r\n\r\ninherits(BufferedSender,EventEmitter);\r\n\r\nBufferedSender.prototype.send=function(message){\r\n debug('send',message);\r\n this.sendBuffer.push(message);\r\n if(!this.sendStop){\r\n this.sendSchedule();\r\n}\r\n};\r\n\r\n//For polling transports in a situation when in the message callback,\r\n//new message is being send.If the sending connection was started\r\n//before receiving one,it is possible to saturate the network and\r\n//timeout due to the lack of receiving socket.To avoid that we delay\r\n//sending messages by some small time,in order to let receiving\r\n//connection be started beforehand.This is only a halfmeasure and\r\n//does not fix the big problem,but it does make the tests go more\r\n//stable on slow networks.\r\nBufferedSender.prototype.sendScheduleWait=function(){\r\n debug('sendScheduleWait');\r\n var self=this;\r\n var tref;\r\n this.sendStop=function(){\r\n debug('sendStop');\r\n self.sendStop=null;\r\n clearTimeout(tref);\r\n};\r\n tref=setTimeout(function(){\r\n debug('timeout');\r\n self.sendStop=null;\r\n self.sendSchedule();\r\n},25);\r\n};\r\n\r\nBufferedSender.prototype.sendSchedule=function(){\r\n debug('sendSchedule',this.sendBuffer.length);\r\n var self=this;\r\n if(this.sendBuffer.length>0){\r\n var payload='['+this.sendBuffer.join(',')+']';\r\n this.sendStop=this.sender(this.url,payload,function(err){\r\n self.sendStop=null;\r\n if(err){\r\n debug('error',err);\r\n self.emit('close',err.code||1006,'Sending error:'+err);\r\n self.close();\r\n}else{\r\n self.sendScheduleWait();\r\n}\r\n});\r\n this.sendBuffer=[];\r\n}\r\n};\r\n\r\nBufferedSender.prototype._cleanup=function(){\r\n debug('_cleanup');\r\n this.removeAllListeners();\r\n};\r\n\r\nBufferedSender.prototype.close=function(){\r\n debug('close');\r\n this._cleanup();\r\n if(this.sendStop){\r\n this.sendStop();\r\n this.sendStop=null;\r\n}\r\n};\r\n\r\nmodule.exports=BufferedSender;\r\n\r\n}).call(this,{env:{}})\r\n\r\n},{\"debug\":55,\"events\":3,\"inherits\":57}],26:[function(require,module,exports){\r\n(function(global){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,IframeTransport=require('../iframe')\r\n,objectUtils=require('../../utils/object')\r\n;\r\n\r\nmodule.exports=function(transport){\r\n\r\n function IframeWrapTransport(transUrl,baseUrl){\r\n IframeTransport.call(this,transport.transportName,transUrl,baseUrl);\r\n}\r\n\r\n inherits(IframeWrapTransport,IframeTransport);\r\n\r\n IframeWrapTransport.enabled=function(url,info){\r\n if(!global.document){\r\n return false;\r\n}\r\n\r\n var iframeInfo=objectUtils.extend({},info);\r\n iframeInfo.sameOrigin=true;\r\n return transport.enabled(iframeInfo)&&IframeTransport.enabled();\r\n};\r\n\r\n IframeWrapTransport.transportName='iframe-'+transport.transportName;\r\n IframeWrapTransport.needBody=true;\r\n IframeWrapTransport.roundTrips=IframeTransport.roundTrips+transport.roundTrips-1;//html,javascript(2)+transport-no CORS(1)\r\n\r\n IframeWrapTransport.facadeTransport=transport;\r\n\r\n return IframeWrapTransport;\r\n};\r\n\r\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{\"../../utils/object\":49,\"../iframe\":22,\"inherits\":57}],27:[function(require,module,exports){\r\n(function(process){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,EventEmitter=require('events').EventEmitter\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:polling');\r\n}\r\n\r\nfunction Polling(Receiver,receiveUrl,AjaxObject){\r\n debug(receiveUrl);\r\n EventEmitter.call(this);\r\n this.Receiver=Receiver;\r\n this.receiveUrl=receiveUrl;\r\n this.AjaxObject=AjaxObject;\r\n this._scheduleReceiver();\r\n}\r\n\r\ninherits(Polling,EventEmitter);\r\n\r\nPolling.prototype._scheduleReceiver=function(){\r\n debug('_scheduleReceiver');\r\n var self=this;\r\n var poll=this.poll=new this.Receiver(this.receiveUrl,this.AjaxObject);\r\n\r\n poll.on('message',function(msg){\r\n debug('message',msg);\r\n self.emit('message',msg);\r\n});\r\n\r\n poll.once('close',function(code,reason){\r\n debug('close',code,reason,self.pollIsClosing);\r\n self.poll=poll=null;\r\n\r\n if(!self.pollIsClosing){\r\n if(reason==='network'){\r\n self._scheduleReceiver();\r\n}else{\r\n self.emit('close',code||1006,reason);\r\n self.removeAllListeners();\r\n}\r\n}\r\n});\r\n};\r\n\r\nPolling.prototype.abort=function(){\r\n debug('abort');\r\n this.removeAllListeners();\r\n this.pollIsClosing=true;\r\n if(this.poll){\r\n this.poll.abort();\r\n}\r\n};\r\n\r\nmodule.exports=Polling;\r\n\r\n}).call(this,{env:{}})\r\n\r\n},{\"debug\":55,\"events\":3,\"inherits\":57}],28:[function(require,module,exports){\r\n(function(process){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,urlUtils=require('../../utils/url')\r\n,BufferedSender=require('./buffered-sender')\r\n,Polling=require('./polling')\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:sender-receiver');\r\n}\r\n\r\nfunction SenderReceiver(transUrl,urlSuffix,senderFunc,Receiver,AjaxObject){\r\n var pollUrl=urlUtils.addPath(transUrl,urlSuffix);\r\n debug(pollUrl);\r\n var self=this;\r\n BufferedSender.call(this,transUrl,senderFunc);\r\n\r\n this.poll=new Polling(Receiver,pollUrl,AjaxObject);\r\n this.poll.on('message',function(msg){\r\n debug('poll message',msg);\r\n self.emit('message',msg);\r\n});\r\n this.poll.once('close',function(code,reason){\r\n debug('poll close',code,reason);\r\n self.poll=null;\r\n self.emit('close',code,reason);\r\n self.close();\r\n});\r\n}\r\n\r\ninherits(SenderReceiver,BufferedSender);\r\n\r\nSenderReceiver.prototype.close=function(){\r\n BufferedSender.prototype.close.call(this);\r\n debug('close');\r\n this.removeAllListeners();\r\n if(this.poll){\r\n this.poll.abort();\r\n this.poll=null;\r\n}\r\n};\r\n\r\nmodule.exports=SenderReceiver;\r\n\r\n}).call(this,{env:{}})\r\n\r\n},{\"../../utils/url\":52,\"./buffered-sender\":25,\"./polling\":27,\"debug\":55,\"inherits\":57}],29:[function(require,module,exports){\r\n(function(process){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,EventEmitter=require('events').EventEmitter\r\n,EventSourceDriver=require('eventsource')\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:receiver:eventsource');\r\n}\r\n\r\nfunction EventSourceReceiver(url){\r\n debug(url);\r\n EventEmitter.call(this);\r\n\r\n var self=this;\r\n var es=this.es=new EventSourceDriver(url);\r\n es.onmessage=function(e){\r\n debug('message',e.data);\r\n self.emit('message',decodeURI(e.data));\r\n};\r\n es.onerror=function(e){\r\n debug('error',es.readyState,e);\r\n//ES on reconnection has readyState=0 or 1.\r\n//on network error it's CLOSED=2\r\n var reason=(es.readyState!==2?'network':'permanent');\r\n self._cleanup();\r\n self._close(reason);\r\n};\r\n}\r\n\r\ninherits(EventSourceReceiver,EventEmitter);\r\n\r\nEventSourceReceiver.prototype.abort=function(){\r\n debug('abort');\r\n this._cleanup();\r\n this._close('user');\r\n};\r\n\r\nEventSourceReceiver.prototype._cleanup=function(){\r\n debug('cleanup');\r\n var es=this.es;\r\n if(es){\r\n es.onmessage=es.onerror=null;\r\n es.close();\r\n this.es=null;\r\n}\r\n};\r\n\r\nEventSourceReceiver.prototype._close=function(reason){\r\n debug('close',reason);\r\n var self=this;\r\n//Safari and chrome<15 crash if we close window before\r\n//waiting for ES cleanup.See:\r\n//https://code.google.com/p/chromium/issues/detail?id=89155\r\n setTimeout(function(){\r\n self.emit('close',null,reason);\r\n self.removeAllListeners();\r\n},200);\r\n};\r\n\r\nmodule.exports=EventSourceReceiver;\r\n\r\n}).call(this,{env:{}})\r\n\r\n},{\"debug\":55,\"events\":3,\"eventsource\":18,\"inherits\":57}],30:[function(require,module,exports){\r\n(function(process,global){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,iframeUtils=require('../../utils/iframe')\r\n,urlUtils=require('../../utils/url')\r\n,EventEmitter=require('events').EventEmitter\r\n,random=require('../../utils/random')\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:receiver:htmlfile');\r\n}\r\n\r\nfunction HtmlfileReceiver(url){\r\n debug(url);\r\n EventEmitter.call(this);\r\n var self=this;\r\n iframeUtils.polluteGlobalNamespace();\r\n\r\n this.id='a'+random.string(6);\r\n url=urlUtils.addQuery(url,'c='+decodeURIComponent(iframeUtils.WPrefix+'.'+this.id));\r\n\r\n debug('using htmlfile',HtmlfileReceiver.htmlfileEnabled);\r\n var constructFunc=HtmlfileReceiver.htmlfileEnabled?\r\n iframeUtils.createHtmlfile:iframeUtils.createIframe;\r\n\r\n global[iframeUtils.WPrefix][this.id]={\r\n start:function(){\r\n debug('start');\r\n self.iframeObj.loaded();\r\n}\r\n,message:function(data){\r\n debug('message',data);\r\n self.emit('message',data);\r\n}\r\n,stop:function(){\r\n debug('stop');\r\n self._cleanup();\r\n self._close('network');\r\n}\r\n};\r\n this.iframeObj=constructFunc(url,function(){\r\n debug('callback');\r\n self._cleanup();\r\n self._close('permanent');\r\n});\r\n}\r\n\r\ninherits(HtmlfileReceiver,EventEmitter);\r\n\r\nHtmlfileReceiver.prototype.abort=function(){\r\n debug('abort');\r\n this._cleanup();\r\n this._close('user');\r\n};\r\n\r\nHtmlfileReceiver.prototype._cleanup=function(){\r\n debug('_cleanup');\r\n if(this.iframeObj){\r\n this.iframeObj.cleanup();\r\n this.iframeObj=null;\r\n}\r\n delete global[iframeUtils.WPrefix][this.id];\r\n};\r\n\r\nHtmlfileReceiver.prototype._close=function(reason){\r\n debug('_close',reason);\r\n this.emit('close',null,reason);\r\n this.removeAllListeners();\r\n};\r\n\r\nHtmlfileReceiver.htmlfileEnabled=false;\r\n\r\n//obfuscate to avoid firewalls\r\nvar axo=['Active'].concat('Object').join('X');\r\nif(axo in global){\r\n try{\r\n HtmlfileReceiver.htmlfileEnabled=!!new global[axo]('htmlfile');\r\n}catch(x){\r\n//intentionally empty\r\n}\r\n}\r\n\r\nHtmlfileReceiver.enabled=HtmlfileReceiver.htmlfileEnabled||iframeUtils.iframeEnabled;\r\n\r\nmodule.exports=HtmlfileReceiver;\r\n\r\n}).call(this,{env:{}},typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{\"../../utils/iframe\":47,\"../../utils/random\":50,\"../../utils/url\":52,\"debug\":55,\"events\":3,\"inherits\":57}],31:[function(require,module,exports){\r\n(function(process,global){\r\n'use strict';\r\n\r\nvar utils=require('../../utils/iframe')\r\n,random=require('../../utils/random')\r\n,browser=require('../../utils/browser')\r\n,urlUtils=require('../../utils/url')\r\n,inherits=require('inherits')\r\n,EventEmitter=require('events').EventEmitter\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:receiver:jsonp');\r\n}\r\n\r\nfunction JsonpReceiver(url){\r\n debug(url);\r\n var self=this;\r\n EventEmitter.call(this);\r\n\r\n utils.polluteGlobalNamespace();\r\n\r\n this.id='a'+random.string(6);\r\n var urlWithId=urlUtils.addQuery(url,'c='+encodeURIComponent(utils.WPrefix+'.'+this.id));\r\n\r\n global[utils.WPrefix][this.id]=this._callback.bind(this);\r\n this._createScript(urlWithId);\r\n\r\n//Fallback mostly for Konqueror-stupid timer,35 seconds shall be plenty.\r\n this.timeoutId=setTimeout(function(){\r\n debug('timeout');\r\n self._abort(new Error('JSONP script loaded abnormally(timeout)'));\r\n},JsonpReceiver.timeout);\r\n}\r\n\r\ninherits(JsonpReceiver,EventEmitter);\r\n\r\nJsonpReceiver.prototype.abort=function(){\r\n debug('abort');\r\n if(global[utils.WPrefix][this.id]){\r\n var err=new Error('JSONP user aborted read');\r\n err.code=1000;\r\n this._abort(err);\r\n}\r\n};\r\n\r\nJsonpReceiver.timeout=35000;\r\nJsonpReceiver.scriptErrorTimeout=1000;\r\n\r\nJsonpReceiver.prototype._callback=function(data){\r\n debug('_callback',data);\r\n this._cleanup();\r\n\r\n if(this.aborting){\r\n return;\r\n}\r\n\r\n if(data){\r\n debug('message',data);\r\n this.emit('message',data);\r\n}\r\n this.emit('close',null,'network');\r\n this.removeAllListeners();\r\n};\r\n\r\nJsonpReceiver.prototype._abort=function(err){\r\n debug('_abort',err);\r\n this._cleanup();\r\n this.aborting=true;\r\n this.emit('close',err.code,err.message);\r\n this.removeAllListeners();\r\n};\r\n\r\nJsonpReceiver.prototype._cleanup=function(){\r\n debug('_cleanup');\r\n clearTimeout(this.timeoutId);\r\n if(this.script2){\r\n this.script2.parentNode.removeChild(this.script2);\r\n this.script2=null;\r\n}\r\n if(this.script){\r\n var script=this.script;\r\n//Unfortunately,you can't really abort script loading of\r\n//the script.\r\n script.parentNode.removeChild(script);\r\n script.onreadystatechange=script.onerror=\r\n script.onload=script.onclick=null;\r\n this.script=null;\r\n}\r\n delete global[utils.WPrefix][this.id];\r\n};\r\n\r\nJsonpReceiver.prototype._scriptError=function(){\r\n debug('_scriptError');\r\n var self=this;\r\n if(this.errorTimer){\r\n return;\r\n}\r\n\r\n this.errorTimer=setTimeout(function(){\r\n if(!self.loadedOkay){\r\n self._abort(new Error('JSONP script loaded abnormally(onerror)'));\r\n}\r\n},JsonpReceiver.scriptErrorTimeout);\r\n};\r\n\r\nJsonpReceiver.prototype._createScript=function(url){\r\n debug('_createScript',url);\r\n var self=this;\r\n var script=this.script=global.document.createElement('script');\r\n var script2;//Opera synchronous load trick.\r\n\r\n script.id='a'+random.string(8);\r\n script.src=url;\r\n script.type='text/javascript';\r\n script.charset='UTF-8';\r\n script.onerror=this._scriptError.bind(this);\r\n script.onload=function(){\r\n debug('onload');\r\n self._abort(new Error('JSONP script loaded abnormally(onload)'));\r\n};\r\n\r\n//IE9 fires'error'event after onreadystatechange or before,in random order.\r\n//Use loadedOkay to determine if actually errored\r\n script.onreadystatechange=function(){\r\n debug('onreadystatechange',script.readyState);\r\n if(/loaded|closed/.test(script.readyState)){\r\n if(script&&script.htmlFor&&script.onclick){\r\n self.loadedOkay=true;\r\n try{\r\n//In IE,actually execute the script.\r\n script.onclick();\r\n}catch(x){\r\n//intentionally empty\r\n}\r\n}\r\n if(script){\r\n self._abort(new Error('JSONP script loaded abnormally(onreadystatechange)'));\r\n}\r\n}\r\n};\r\n//IE:event/htmlFor/onclick trick.\r\n//One can't rely on proper order for onreadystatechange.In order to\r\n//make sure,set a'htmlFor'and'event'properties,so that\r\n//script code will be installed as'onclick'handler for the\r\n//script object.Later,onreadystatechange,manually execute this\r\n//code.FF and Chrome doesn't work with'event'and'htmlFor'\r\n//set.For reference see:\r\n//http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html\r\n//Also,read on that about script ordering:\r\n//http://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order\r\n if(typeof script.async==='undefined'&&global.document.attachEvent){\r\n//According to mozilla docs,in recent browsers script.async defaults\r\n//to'true',so we may use it to detect a good browser:\r\n//https://developer.mozilla.org/en/HTML/Element/script\r\n if(!browser.isOpera()){\r\n//Naively assume we're in IE\r\n try{\r\n script.htmlFor=script.id;\r\n script.event='onclick';\r\n}catch(x){\r\n//intentionally empty\r\n}\r\n script.async=true;\r\n}else{\r\n//Opera,second sync script hack\r\n script2=this.script2=global.document.createElement('script');\r\n script2.text=\"try{var a=document.getElementById('\"+script.id+\"');if(a)a.onerror();}catch(x){};\";\r\n script.async=script2.async=false;\r\n}\r\n}\r\n if(typeof script.async!=='undefined'){\r\n script.async=true;\r\n}\r\n\r\n var head=global.document.getElementsByTagName('head')[0];\r\n head.insertBefore(script,head.firstChild);\r\n if(script2){\r\n head.insertBefore(script2,head.firstChild);\r\n}\r\n};\r\n\r\nmodule.exports=JsonpReceiver;\r\n\r\n}).call(this,{env:{}},typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{\"../../utils/browser\":44,\"../../utils/iframe\":47,\"../../utils/random\":50,\"../../utils/url\":52,\"debug\":55,\"events\":3,\"inherits\":57}],32:[function(require,module,exports){\r\n(function(process){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,EventEmitter=require('events').EventEmitter\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:receiver:xhr');\r\n}\r\n\r\nfunction XhrReceiver(url,AjaxObject){\r\n debug(url);\r\n EventEmitter.call(this);\r\n var self=this;\r\n\r\n this.bufferPosition=0;\r\n\r\n this.xo=new AjaxObject('POST',url,null);\r\n this.xo.on('chunk',this._chunkHandler.bind(this));\r\n this.xo.once('finish',function(status,text){\r\n debug('finish',status,text);\r\n self._chunkHandler(status,text);\r\n self.xo=null;\r\n var reason=status===200?'network':'permanent';\r\n debug('close',reason);\r\n self.emit('close',null,reason);\r\n self._cleanup();\r\n});\r\n}\r\n\r\ninherits(XhrReceiver,EventEmitter);\r\n\r\nXhrReceiver.prototype._chunkHandler=function(status,text){\r\n debug('_chunkHandler',status);\r\n if(status!==200||!text){\r\n return;\r\n}\r\n\r\n for(var idx=-1;;this.bufferPosition+=idx+1){\r\n var buf=text.slice(this.bufferPosition);\r\n idx=buf.indexOf('\\n');\r\n if(idx===-1){\r\n break;\r\n}\r\n var msg=buf.slice(0,idx);\r\n if(msg){\r\n debug('message',msg);\r\n this.emit('message',msg);\r\n}\r\n}\r\n};\r\n\r\nXhrReceiver.prototype._cleanup=function(){\r\n debug('_cleanup');\r\n this.removeAllListeners();\r\n};\r\n\r\nXhrReceiver.prototype.abort=function(){\r\n debug('abort');\r\n if(this.xo){\r\n this.xo.close();\r\n debug('close');\r\n this.emit('close',null,'user');\r\n this.xo=null;\r\n}\r\n this._cleanup();\r\n};\r\n\r\nmodule.exports=XhrReceiver;\r\n\r\n}).call(this,{env:{}})\r\n\r\n},{\"debug\":55,\"events\":3,\"inherits\":57}],33:[function(require,module,exports){\r\n(function(process,global){\r\n'use strict';\r\n\r\nvar random=require('../../utils/random')\r\n,urlUtils=require('../../utils/url')\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:sender:jsonp');\r\n}\r\n\r\nvar form,area;\r\n\r\nfunction createIframe(id){\r\n debug('createIframe',id);\r\n try{\r\n//ie6 dynamic iframes with target=\"\"support(thanks Chris Lambacher)\r\n return global.document.createElement('<iframe name=\"'+id+'\">');\r\n}catch(x){\r\n var iframe=global.document.createElement('iframe');\r\n iframe.name=id;\r\n return iframe;\r\n}\r\n}\r\n\r\nfunction createForm(){\r\n debug('createForm');\r\n form=global.document.createElement('form');\r\n form.style.display='none';\r\n form.style.position='absolute';\r\n form.method='POST';\r\n form.enctype='application/x-www-form-urlencoded';\r\n form.acceptCharset='UTF-8';\r\n\r\n area=global.document.createElement('textarea');\r\n area.name='d';\r\n form.appendChild(area);\r\n\r\n global.document.body.appendChild(form);\r\n}\r\n\r\nmodule.exports=function(url,payload,callback){\r\n debug(url,payload);\r\n if(!form){\r\n createForm();\r\n}\r\n var id='a'+random.string(8);\r\n form.target=id;\r\n form.action=urlUtils.addQuery(urlUtils.addPath(url,'/jsonp_send'),'i='+id);\r\n\r\n var iframe=createIframe(id);\r\n iframe.id=id;\r\n iframe.style.display='none';\r\n form.appendChild(iframe);\r\n\r\n try{\r\n area.value=payload;\r\n}catch(e){\r\n//seriously broken browsers get here\r\n}\r\n form.submit();\r\n\r\n var completed=function(err){\r\n debug('completed',id,err);\r\n if(!iframe.onerror){\r\n return;\r\n}\r\n iframe.onreadystatechange=iframe.onerror=iframe.onload=null;\r\n//Opera mini doesn't like if we GC iframe\r\n//immediately,thus this timeout.\r\n setTimeout(function(){\r\n debug('cleaning up',id);\r\n iframe.parentNode.removeChild(iframe);\r\n iframe=null;\r\n},500);\r\n area.value='';\r\n//It is not possible to detect if the iframe succeeded or\r\n//failed to submit our form.\r\n callback(err);\r\n};\r\n iframe.onerror=function(){\r\n debug('onerror',id);\r\n completed();\r\n};\r\n iframe.onload=function(){\r\n debug('onload',id);\r\n completed();\r\n};\r\n iframe.onreadystatechange=function(e){\r\n debug('onreadystatechange',id,iframe.readyState,e);\r\n if(iframe.readyState==='complete'){\r\n completed();\r\n}\r\n};\r\n return function(){\r\n debug('aborted',id);\r\n completed(new Error('Aborted'));\r\n};\r\n};\r\n\r\n}).call(this,{env:{}},typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{\"../../utils/random\":50,\"../../utils/url\":52,\"debug\":55}],34:[function(require,module,exports){\r\n(function(process,global){\r\n'use strict';\r\n\r\nvar EventEmitter=require('events').EventEmitter\r\n,inherits=require('inherits')\r\n,eventUtils=require('../../utils/event')\r\n,browser=require('../../utils/browser')\r\n,urlUtils=require('../../utils/url')\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:sender:xdr');\r\n}\r\n\r\n//References:\r\n//http://ajaxian.com/archives/100-line-ajax-wrapper\r\n//http://msdn.microsoft.com/en-us/library/cc288060(v=VS.85).aspx\r\n\r\nfunction XDRObject(method,url,payload){\r\n debug(method,url);\r\n var self=this;\r\n EventEmitter.call(this);\r\n\r\n setTimeout(function(){\r\n self._start(method,url,payload);\r\n},0);\r\n}\r\n\r\ninherits(XDRObject,EventEmitter);\r\n\r\nXDRObject.prototype._start=function(method,url,payload){\r\n debug('_start');\r\n var self=this;\r\n var xdr=new global.XDomainRequest();\r\n//IE caches even POSTs\r\n url=urlUtils.addQuery(url,'t='+(+new Date()));\r\n\r\n xdr.onerror=function(){\r\n debug('onerror');\r\n self._error();\r\n};\r\n xdr.ontimeout=function(){\r\n debug('ontimeout');\r\n self._error();\r\n};\r\n xdr.onprogress=function(){\r\n debug('progress',xdr.responseText);\r\n self.emit('chunk',200,xdr.responseText);\r\n};\r\n xdr.onload=function(){\r\n debug('load');\r\n self.emit('finish',200,xdr.responseText);\r\n self._cleanup(false);\r\n};\r\n this.xdr=xdr;\r\n this.unloadRef=eventUtils.unloadAdd(function(){\r\n self._cleanup(true);\r\n});\r\n try{\r\n//Fails with AccessDenied if port number is bogus\r\n this.xdr.open(method,url);\r\n if(this.timeout){\r\n this.xdr.timeout=this.timeout;\r\n}\r\n this.xdr.send(payload);\r\n}catch(x){\r\n this._error();\r\n}\r\n};\r\n\r\nXDRObject.prototype._error=function(){\r\n this.emit('finish',0,'');\r\n this._cleanup(false);\r\n};\r\n\r\nXDRObject.prototype._cleanup=function(abort){\r\n debug('cleanup',abort);\r\n if(!this.xdr){\r\n return;\r\n}\r\n this.removeAllListeners();\r\n eventUtils.unloadDel(this.unloadRef);\r\n\r\n this.xdr.ontimeout=this.xdr.onerror=this.xdr.onprogress=this.xdr.onload=null;\r\n if(abort){\r\n try{\r\n this.xdr.abort();\r\n}catch(x){\r\n//intentionally empty\r\n}\r\n}\r\n this.unloadRef=this.xdr=null;\r\n};\r\n\r\nXDRObject.prototype.close=function(){\r\n debug('close');\r\n this._cleanup(true);\r\n};\r\n\r\n//IE 8/9 if the request target uses the same scheme-#79\r\nXDRObject.enabled=!!(global.XDomainRequest&&browser.hasDomain());\r\n\r\nmodule.exports=XDRObject;\r\n\r\n}).call(this,{env:{}},typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{\"../../utils/browser\":44,\"../../utils/event\":46,\"../../utils/url\":52,\"debug\":55,\"events\":3,\"inherits\":57}],35:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,XhrDriver=require('../driver/xhr')\r\n;\r\n\r\nfunction XHRCorsObject(method,url,payload,opts){\r\n XhrDriver.call(this,method,url,payload,opts);\r\n}\r\n\r\ninherits(XHRCorsObject,XhrDriver);\r\n\r\nXHRCorsObject.enabled=XhrDriver.enabled&&XhrDriver.supportsCORS;\r\n\r\nmodule.exports=XHRCorsObject;\r\n\r\n},{\"../driver/xhr\":17,\"inherits\":57}],36:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar EventEmitter=require('events').EventEmitter\r\n,inherits=require('inherits')\r\n;\r\n\r\nfunction XHRFake(/*method,url,payload,opts*/){\r\n var self=this;\r\n EventEmitter.call(this);\r\n\r\n this.to=setTimeout(function(){\r\n self.emit('finish',200,'{}');\r\n},XHRFake.timeout);\r\n}\r\n\r\ninherits(XHRFake,EventEmitter);\r\n\r\nXHRFake.prototype.close=function(){\r\n clearTimeout(this.to);\r\n};\r\n\r\nXHRFake.timeout=2000;\r\n\r\nmodule.exports=XHRFake;\r\n\r\n},{\"events\":3,\"inherits\":57}],37:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,XhrDriver=require('../driver/xhr')\r\n;\r\n\r\nfunction XHRLocalObject(method,url,payload/*,opts*/){\r\n XhrDriver.call(this,method,url,payload,{\r\n noCredentials:true\r\n});\r\n}\r\n\r\ninherits(XHRLocalObject,XhrDriver);\r\n\r\nXHRLocalObject.enabled=XhrDriver.enabled;\r\n\r\nmodule.exports=XHRLocalObject;\r\n\r\n},{\"../driver/xhr\":17,\"inherits\":57}],38:[function(require,module,exports){\r\n(function(process){\r\n'use strict';\r\n\r\nvar utils=require('../utils/event')\r\n,urlUtils=require('../utils/url')\r\n,inherits=require('inherits')\r\n,EventEmitter=require('events').EventEmitter\r\n,WebsocketDriver=require('./driver/websocket')\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:websocket');\r\n}\r\n\r\nfunction WebSocketTransport(transUrl,ignore,options){\r\n if(!WebSocketTransport.enabled()){\r\n throw new Error('Transport created when disabled');\r\n}\r\n\r\n EventEmitter.call(this);\r\n debug('constructor',transUrl);\r\n\r\n var self=this;\r\n var url=urlUtils.addPath(transUrl,'/websocket');\r\n if(url.slice(0,5)==='https'){\r\n url='wss'+url.slice(5);\r\n}else{\r\n url='ws'+url.slice(4);\r\n}\r\n this.url=url;\r\n\r\n this.ws=new WebsocketDriver(this.url,[],options);\r\n this.ws.onmessage=function(e){\r\n debug('message event',e.data);\r\n self.emit('message',e.data);\r\n};\r\n//Firefox has an interesting bug.If a websocket connection is\r\n//created after onunload,it stays alive even when user\r\n//navigates away from the page.In such situation let's lie-\r\n//let's not open the ws connection at all.See:\r\n//https://github.com/sockjs/sockjs-client/issues/28\r\n//https://bugzilla.mozilla.org/show_bug.cgi?id=696085\r\n this.unloadRef=utils.unloadAdd(function(){\r\n debug('unload');\r\n self.ws.close();\r\n});\r\n this.ws.onclose=function(e){\r\n debug('close event',e.code,e.reason);\r\n self.emit('close',e.code,e.reason);\r\n self._cleanup();\r\n};\r\n this.ws.onerror=function(e){\r\n debug('error event',e);\r\n self.emit('close',1006,'WebSocket connection broken');\r\n self._cleanup();\r\n};\r\n}\r\n\r\ninherits(WebSocketTransport,EventEmitter);\r\n\r\nWebSocketTransport.prototype.send=function(data){\r\n var msg='['+data+']';\r\n debug('send',msg);\r\n this.ws.send(msg);\r\n};\r\n\r\nWebSocketTransport.prototype.close=function(){\r\n debug('close');\r\n var ws=this.ws;\r\n this._cleanup();\r\n if(ws){\r\n ws.close();\r\n}\r\n};\r\n\r\nWebSocketTransport.prototype._cleanup=function(){\r\n debug('_cleanup');\r\n var ws=this.ws;\r\n if(ws){\r\n ws.onmessage=ws.onclose=ws.onerror=null;\r\n}\r\n utils.unloadDel(this.unloadRef);\r\n this.unloadRef=this.ws=null;\r\n this.removeAllListeners();\r\n};\r\n\r\nWebSocketTransport.enabled=function(){\r\n debug('enabled');\r\n return!!WebsocketDriver;\r\n};\r\nWebSocketTransport.transportName='websocket';\r\n\r\n//In theory,ws should require 1 round trip.But in chrome,this is\r\n//not very stable over SSL.Most likely a ws connection requires a\r\n//separate SSL connection,in which case 2 round trips are an\r\n//absolute minumum.\r\nWebSocketTransport.roundTrips=2;\r\n\r\nmodule.exports=WebSocketTransport;\r\n\r\n}).call(this,{env:{}})\r\n\r\n},{\"../utils/event\":46,\"../utils/url\":52,\"./driver/websocket\":19,\"debug\":55,\"events\":3,\"inherits\":57}],39:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,AjaxBasedTransport=require('./lib/ajax-based')\r\n,XdrStreamingTransport=require('./xdr-streaming')\r\n,XhrReceiver=require('./receiver/xhr')\r\n,XDRObject=require('./sender/xdr')\r\n;\r\n\r\nfunction XdrPollingTransport(transUrl){\r\n if(!XDRObject.enabled){\r\n throw new Error('Transport created when disabled');\r\n}\r\n AjaxBasedTransport.call(this,transUrl,'/xhr',XhrReceiver,XDRObject);\r\n}\r\n\r\ninherits(XdrPollingTransport,AjaxBasedTransport);\r\n\r\nXdrPollingTransport.enabled=XdrStreamingTransport.enabled;\r\nXdrPollingTransport.transportName='xdr-polling';\r\nXdrPollingTransport.roundTrips=2;//preflight,ajax\r\n\r\nmodule.exports=XdrPollingTransport;\r\n\r\n},{\"./lib/ajax-based\":24,\"./receiver/xhr\":32,\"./sender/xdr\":34,\"./xdr-streaming\":40,\"inherits\":57}],40:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,AjaxBasedTransport=require('./lib/ajax-based')\r\n,XhrReceiver=require('./receiver/xhr')\r\n,XDRObject=require('./sender/xdr')\r\n;\r\n\r\n//According to:\r\n//http://stackoverflow.com/questions/1641507/detect-browser-support-for-cross-domain-xmlhttprequests\r\n//http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/\r\n\r\nfunction XdrStreamingTransport(transUrl){\r\n if(!XDRObject.enabled){\r\n throw new Error('Transport created when disabled');\r\n}\r\n AjaxBasedTransport.call(this,transUrl,'/xhr_streaming',XhrReceiver,XDRObject);\r\n}\r\n\r\ninherits(XdrStreamingTransport,AjaxBasedTransport);\r\n\r\nXdrStreamingTransport.enabled=function(info){\r\n if(info.cookie_needed||info.nullOrigin){\r\n return false;\r\n}\r\n return XDRObject.enabled&&info.sameScheme;\r\n};\r\n\r\nXdrStreamingTransport.transportName='xdr-streaming';\r\nXdrStreamingTransport.roundTrips=2;//preflight,ajax\r\n\r\nmodule.exports=XdrStreamingTransport;\r\n\r\n},{\"./lib/ajax-based\":24,\"./receiver/xhr\":32,\"./sender/xdr\":34,\"inherits\":57}],41:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,AjaxBasedTransport=require('./lib/ajax-based')\r\n,XhrReceiver=require('./receiver/xhr')\r\n,XHRCorsObject=require('./sender/xhr-cors')\r\n,XHRLocalObject=require('./sender/xhr-local')\r\n;\r\n\r\nfunction XhrPollingTransport(transUrl){\r\n if(!XHRLocalObject.enabled&&!XHRCorsObject.enabled){\r\n throw new Error('Transport created when disabled');\r\n}\r\n AjaxBasedTransport.call(this,transUrl,'/xhr',XhrReceiver,XHRCorsObject);\r\n}\r\n\r\ninherits(XhrPollingTransport,AjaxBasedTransport);\r\n\r\nXhrPollingTransport.enabled=function(info){\r\n if(info.nullOrigin){\r\n return false;\r\n}\r\n\r\n if(XHRLocalObject.enabled&&info.sameOrigin){\r\n return true;\r\n}\r\n return XHRCorsObject.enabled;\r\n};\r\n\r\nXhrPollingTransport.transportName='xhr-polling';\r\nXhrPollingTransport.roundTrips=2;//preflight,ajax\r\n\r\nmodule.exports=XhrPollingTransport;\r\n\r\n},{\"./lib/ajax-based\":24,\"./receiver/xhr\":32,\"./sender/xhr-cors\":35,\"./sender/xhr-local\":37,\"inherits\":57}],42:[function(require,module,exports){\r\n(function(global){\r\n'use strict';\r\n\r\nvar inherits=require('inherits')\r\n,AjaxBasedTransport=require('./lib/ajax-based')\r\n,XhrReceiver=require('./receiver/xhr')\r\n,XHRCorsObject=require('./sender/xhr-cors')\r\n,XHRLocalObject=require('./sender/xhr-local')\r\n,browser=require('../utils/browser')\r\n;\r\n\r\nfunction XhrStreamingTransport(transUrl){\r\n if(!XHRLocalObject.enabled&&!XHRCorsObject.enabled){\r\n throw new Error('Transport created when disabled');\r\n}\r\n AjaxBasedTransport.call(this,transUrl,'/xhr_streaming',XhrReceiver,XHRCorsObject);\r\n}\r\n\r\ninherits(XhrStreamingTransport,AjaxBasedTransport);\r\n\r\nXhrStreamingTransport.enabled=function(info){\r\n if(info.nullOrigin){\r\n return false;\r\n}\r\n//Opera doesn't support xhr-streaming#60\r\n//But it might be able to#92\r\n if(browser.isOpera()){\r\n return false;\r\n}\r\n\r\n return XHRCorsObject.enabled;\r\n};\r\n\r\nXhrStreamingTransport.transportName='xhr-streaming';\r\nXhrStreamingTransport.roundTrips=2;//preflight,ajax\r\n\r\n//Safari gets confused when a streaming ajax request is started\r\n//before onload.This causes the load indicator to spin indefinetely.\r\n//Only require body when used in a browser\r\nXhrStreamingTransport.needBody=!!global.document;\r\n\r\nmodule.exports=XhrStreamingTransport;\r\n\r\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{\"../utils/browser\":44,\"./lib/ajax-based\":24,\"./receiver/xhr\":32,\"./sender/xhr-cors\":35,\"./sender/xhr-local\":37,\"inherits\":57}],43:[function(require,module,exports){\r\n(function(global){\r\n'use strict';\r\n\r\nif(global.crypto&&global.crypto.getRandomValues){\r\n module.exports.randomBytes=function(length){\r\n var bytes=new Uint8Array(length);\r\n global.crypto.getRandomValues(bytes);\r\n return bytes;\r\n};\r\n}else{\r\n module.exports.randomBytes=function(length){\r\n var bytes=new Array(length);\r\n for(var i=0;i<length;i++){\r\n bytes[i]=Math.floor(Math.random()*256);\r\n}\r\n return bytes;\r\n};\r\n}\r\n\r\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{}],44:[function(require,module,exports){\r\n(function(global){\r\n'use strict';\r\n\r\nmodule.exports={\r\n isOpera:function(){\r\n return global.navigator&&\r\n/opera/i.test(global.navigator.userAgent);\r\n}\r\n\r\n,isKonqueror:function(){\r\n return global.navigator&&\r\n/konqueror/i.test(global.navigator.userAgent);\r\n}\r\n\r\n//#187 wrap document.domain in try/catch because of WP8 from file:///\r\n,hasDomain:function(){\r\n//non-browser client always has a domain\r\n if(!global.document){\r\n return true;\r\n}\r\n\r\n try{\r\n return!!global.document.domain;\r\n}catch(e){\r\n return false;\r\n}\r\n}\r\n};\r\n\r\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{}],45:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar JSON3=require('json3');\r\n\r\n//Some extra characters that Chrome gets wrong,and substitutes with\r\n//something else on the wire.\r\n//eslint-disable-next-line no-control-regex\r\nvar extraEscapable=/[\\x00-\\x1f\\ud800-\\udfff\\ufffe\\uffff\\u0300-\\u0333\\u033d-\\u0346\\u034a-\\u034c\\u0350-\\u0352\\u0357-\\u0358\\u035c-\\u0362\\u0374\\u037e\\u0387\\u0591-\\u05af\\u05c4\\u0610-\\u0617\\u0653-\\u0654\\u0657-\\u065b\\u065d-\\u065e\\u06df-\\u06e2\\u06eb-\\u06ec\\u0730\\u0732-\\u0733\\u0735-\\u0736\\u073a\\u073d\\u073f-\\u0741\\u0743\\u0745\\u0747\\u07eb-\\u07f1\\u0951\\u0958-\\u095f\\u09dc-\\u09dd\\u09df\\u0a33\\u0a36\\u0a59-\\u0a5b\\u0a5e\\u0b5c-\\u0b5d\\u0e38-\\u0e39\\u0f43\\u0f4d\\u0f52\\u0f57\\u0f5c\\u0f69\\u0f72-\\u0f76\\u0f78\\u0f80-\\u0f83\\u0f93\\u0f9d\\u0fa2\\u0fa7\\u0fac\\u0fb9\\u1939-\\u193a\\u1a17\\u1b6b\\u1cda-\\u1cdb\\u1dc0-\\u1dcf\\u1dfc\\u1dfe\\u1f71\\u1f73\\u1f75\\u1f77\\u1f79\\u1f7b\\u1f7d\\u1fbb\\u1fbe\\u1fc9\\u1fcb\\u1fd3\\u1fdb\\u1fe3\\u1feb\\u1fee-\\u1fef\\u1ff9\\u1ffb\\u1ffd\\u2000-\\u2001\\u20d0-\\u20d1\\u20d4-\\u20d7\\u20e7-\\u20e9\\u2126\\u212a-\\u212b\\u2329-\\u232a\\u2adc\\u302b-\\u302c\\uaab2-\\uaab3\\uf900-\\ufa0d\\ufa10\\ufa12\\ufa15-\\ufa1e\\ufa20\\ufa22\\ufa25-\\ufa26\\ufa2a-\\ufa2d\\ufa30-\\ufa6d\\ufa70-\\ufad9\\ufb1d\\ufb1f\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufb4e\\ufff0-\\uffff]/g\r\n,extraLookup;\r\n\r\n//This may be quite slow,so let's delay until user actually uses bad\r\n//characters.\r\nvar unrollLookup=function(escapable){\r\n var i;\r\n var unrolled={};\r\n var c=[];\r\n for(i=0;i<65536;i++){\r\n c.push(String.fromCharCode(i));\r\n}\r\n escapable.lastIndex=0;\r\n c.join('').replace(escapable,function(a){\r\n unrolled[a]='\\\\u'+('0000'+a.charCodeAt(0).toString(16)).slice(-4);\r\n return'';\r\n});\r\n escapable.lastIndex=0;\r\n return unrolled;\r\n};\r\n\r\n//Quote string,also taking care of unicode characters that browsers\r\n//often break.Especially,take care of unicode surrogates:\r\n//http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates\r\nmodule.exports={\r\n quote:function(string){\r\n var quoted=JSON3.stringify(string);\r\n\r\n//In most cases this should be very fast and good enough.\r\n extraEscapable.lastIndex=0;\r\n if(!extraEscapable.test(quoted)){\r\n return quoted;\r\n}\r\n\r\n if(!extraLookup){\r\n extraLookup=unrollLookup(extraEscapable);\r\n}\r\n\r\n return quoted.replace(extraEscapable,function(a){\r\n return extraLookup[a];\r\n});\r\n}\r\n};\r\n\r\n},{\"json3\":58}],46:[function(require,module,exports){\r\n(function(global){\r\n'use strict';\r\n\r\nvar random=require('./random');\r\n\r\nvar onUnload={}\r\n,afterUnload=false\r\n//detect google chrome packaged apps because they don't allow the'unload'event\r\n,isChromePackagedApp=global.chrome&&global.chrome.app&&global.chrome.app.runtime\r\n;\r\n\r\nmodule.exports={\r\n attachEvent:function(event,listener){\r\n if(typeof global.addEventListener!=='undefined'){\r\n global.addEventListener(event,listener,false);\r\n}else if(global.document&&global.attachEvent){\r\n//IE quirks.\r\n//According to:http://stevesouders.com/misc/test-postmessage.php\r\n//the message gets delivered only to'document',not'window'.\r\n global.document.attachEvent('on'+event,listener);\r\n//I get'window'for ie8.\r\n global.attachEvent('on'+event,listener);\r\n}\r\n}\r\n\r\n,detachEvent:function(event,listener){\r\n if(typeof global.addEventListener!=='undefined'){\r\n global.removeEventListener(event,listener,false);\r\n}else if(global.document&&global.detachEvent){\r\n global.document.detachEvent('on'+event,listener);\r\n global.detachEvent('on'+event,listener);\r\n}\r\n}\r\n\r\n,unloadAdd:function(listener){\r\n if(isChromePackagedApp){\r\n return null;\r\n}\r\n\r\n var ref=random.string(8);\r\n onUnload[ref]=listener;\r\n if(afterUnload){\r\n setTimeout(this.triggerUnloadCallbacks,0);\r\n}\r\n return ref;\r\n}\r\n\r\n,unloadDel:function(ref){\r\n if(ref in onUnload){\r\n delete onUnload[ref];\r\n}\r\n}\r\n\r\n,triggerUnloadCallbacks:function(){\r\n for(var ref in onUnload){\r\n onUnload[ref]();\r\n delete onUnload[ref];\r\n}\r\n}\r\n};\r\n\r\nvar unloadTriggered=function(){\r\n if(afterUnload){\r\n return;\r\n}\r\n afterUnload=true;\r\n module.exports.triggerUnloadCallbacks();\r\n};\r\n\r\n//'unload'alone is not reliable in opera within an iframe,but we\r\n//can't use`beforeunload`as IE fires it on javascript:links.\r\nif(!isChromePackagedApp){\r\n module.exports.attachEvent('unload',unloadTriggered);\r\n}\r\n\r\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{\"./random\":50}],47:[function(require,module,exports){\r\n(function(process,global){\r\n'use strict';\r\n\r\nvar eventUtils=require('./event')\r\n,JSON3=require('json3')\r\n,browser=require('./browser')\r\n;\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:utils:iframe');\r\n}\r\n\r\nmodule.exports={\r\n WPrefix:'_jp'\r\n,currentWindowId:null\r\n\r\n,polluteGlobalNamespace:function(){\r\n if(!(module.exports.WPrefix in global)){\r\n global[module.exports.WPrefix]={};\r\n}\r\n}\r\n\r\n,postMessage:function(type,data){\r\n if(global.parent!==global){\r\n global.parent.postMessage(JSON3.stringify({\r\n windowId:module.exports.currentWindowId\r\n,type:type\r\n,data:data||''\r\n}),'*');\r\n}else{\r\n debug('Cannot postMessage,no parent window.',type,data);\r\n}\r\n}\r\n\r\n,createIframe:function(iframeUrl,errorCallback){\r\n var iframe=global.document.createElement('iframe');\r\n var tref,unloadRef;\r\n var unattach=function(){\r\n debug('unattach');\r\n clearTimeout(tref);\r\n//Explorer had problems with that.\r\n try{\r\n iframe.onload=null;\r\n}catch(x){\r\n//intentionally empty\r\n}\r\n iframe.onerror=null;\r\n};\r\n var cleanup=function(){\r\n debug('cleanup');\r\n if(iframe){\r\n unattach();\r\n//This timeout makes chrome fire onbeforeunload event\r\n//within iframe.Without the timeout it goes straight to\r\n//onunload.\r\n setTimeout(function(){\r\n if(iframe){\r\n iframe.parentNode.removeChild(iframe);\r\n}\r\n iframe=null;\r\n},0);\r\n eventUtils.unloadDel(unloadRef);\r\n}\r\n};\r\n var onerror=function(err){\r\n debug('onerror',err);\r\n if(iframe){\r\n cleanup();\r\n errorCallback(err);\r\n}\r\n};\r\n var post=function(msg,origin){\r\n debug('post',msg,origin);\r\n setTimeout(function(){\r\n try{\r\n//When the iframe is not loaded,IE raises an exception\r\n//on'contentWindow'.\r\n if(iframe&&iframe.contentWindow){\r\n iframe.contentWindow.postMessage(msg,origin);\r\n}\r\n}catch(x){\r\n//intentionally empty\r\n}\r\n},0);\r\n};\r\n\r\n iframe.src=iframeUrl;\r\n iframe.style.display='none';\r\n iframe.style.position='absolute';\r\n iframe.onerror=function(){\r\n onerror('onerror');\r\n};\r\n iframe.onload=function(){\r\n debug('onload');\r\n//`onload`is triggered before scripts on the iframe are\r\n//executed.Give it few seconds to actually load stuff.\r\n clearTimeout(tref);\r\n tref=setTimeout(function(){\r\n onerror('onload timeout');\r\n},2000);\r\n};\r\n global.document.body.appendChild(iframe);\r\n tref=setTimeout(function(){\r\n onerror('timeout');\r\n},15000);\r\n unloadRef=eventUtils.unloadAdd(cleanup);\r\n return{\r\n post:post\r\n,cleanup:cleanup\r\n,loaded:unattach\r\n};\r\n}\r\n\r\n/*eslint no-undef:\"off\",new-cap:\"off\"*/\r\n,createHtmlfile:function(iframeUrl,errorCallback){\r\n var axo=['Active'].concat('Object').join('X');\r\n var doc=new global[axo]('htmlfile');\r\n var tref,unloadRef;\r\n var iframe;\r\n var unattach=function(){\r\n clearTimeout(tref);\r\n iframe.onerror=null;\r\n};\r\n var cleanup=function(){\r\n if(doc){\r\n unattach();\r\n eventUtils.unloadDel(unloadRef);\r\n iframe.parentNode.removeChild(iframe);\r\n iframe=doc=null;\r\n CollectGarbage();\r\n}\r\n};\r\n var onerror=function(r){\r\n debug('onerror',r);\r\n if(doc){\r\n cleanup();\r\n errorCallback(r);\r\n}\r\n};\r\n var post=function(msg,origin){\r\n try{\r\n//When the iframe is not loaded,IE raises an exception\r\n//on'contentWindow'.\r\n setTimeout(function(){\r\n if(iframe&&iframe.contentWindow){\r\n iframe.contentWindow.postMessage(msg,origin);\r\n}\r\n},0);\r\n}catch(x){\r\n//intentionally empty\r\n}\r\n};\r\n\r\n doc.open();\r\n doc.write('<html><s'+'cript>'+\r\n'document.domain=\"'+global.document.domain+'\";'+\r\n'</s'+'cript></html>');\r\n doc.close();\r\n doc.parentWindow[module.exports.WPrefix]=global[module.exports.WPrefix];\r\n var c=doc.createElement('div');\r\n doc.body.appendChild(c);\r\n iframe=doc.createElement('iframe');\r\n c.appendChild(iframe);\r\n iframe.src=iframeUrl;\r\n iframe.onerror=function(){\r\n onerror('onerror');\r\n};\r\n tref=setTimeout(function(){\r\n onerror('timeout');\r\n},15000);\r\n unloadRef=eventUtils.unloadAdd(cleanup);\r\n return{\r\n post:post\r\n,cleanup:cleanup\r\n,loaded:unattach\r\n};\r\n}\r\n};\r\n\r\nmodule.exports.iframeEnabled=false;\r\nif(global.document){\r\n//postMessage misbehaves in konqueror 4.6.5-the messages are delivered with\r\n//huge delay,or not at all.\r\n module.exports.iframeEnabled=(typeof global.postMessage==='function'||\r\n typeof global.postMessage==='object')&&(!browser.isKonqueror());\r\n}\r\n\r\n}).call(this,{env:{}},typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{\"./browser\":44,\"./event\":46,\"debug\":55,\"json3\":58}],48:[function(require,module,exports){\r\n(function(global){\r\n'use strict';\r\n\r\nvar logObject={};\r\n['log','debug','warn'].forEach(function(level){\r\n var levelExists;\r\n\r\n try{\r\n levelExists=global.console&&global.console[level]&&global.console[level].apply;\r\n}catch(e){\r\n//do nothing\r\n}\r\n\r\n logObject[level]=levelExists?function(){\r\n return global.console[level].apply(global.console,arguments);\r\n}:(level==='log'?function(){}:logObject.log);\r\n});\r\n\r\nmodule.exports=logObject;\r\n\r\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{}],49:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports={\r\n isObject:function(obj){\r\n var type=typeof obj;\r\n return type==='function'||type==='object'&&!!obj;\r\n}\r\n\r\n,extend:function(obj){\r\n if(!this.isObject(obj)){\r\n return obj;\r\n}\r\n var source,prop;\r\n for(var i=1,length=arguments.length;i<length;i++){\r\n source=arguments[i];\r\n for(prop in source){\r\n if(Object.prototype.hasOwnProperty.call(source,prop)){\r\n obj[prop]=source[prop];\r\n}\r\n}\r\n}\r\n return obj;\r\n}\r\n};\r\n\r\n},{}],50:[function(require,module,exports){\r\n'use strict';\r\n\r\n/*global crypto:true*/\r\nvar crypto=require('crypto');\r\n\r\n//This string has length 32,a power of 2,so the modulus doesn't introduce a\r\n//bias.\r\nvar _randomStringChars='abcdefghijklmnopqrstuvwxyz012345';\r\nmodule.exports={\r\n string:function(length){\r\n var max=_randomStringChars.length;\r\n var bytes=crypto.randomBytes(length);\r\n var ret=[];\r\n for(var i=0;i<length;i++){\r\n ret.push(_randomStringChars.substr(bytes[i]%max,1));\r\n}\r\n return ret.join('');\r\n}\r\n\r\n,number:function(max){\r\n return Math.floor(Math.random()*max);\r\n}\r\n\r\n,numberString:function(max){\r\n var t=(''+(max-1)).length;\r\n var p=new Array(t+1).join('0');\r\n return(p+this.number(max)).slice(-t);\r\n}\r\n};\r\n\r\n},{\"crypto\":43}],51:[function(require,module,exports){\r\n(function(process){\r\n'use strict';\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:utils:transport');\r\n}\r\n\r\nmodule.exports=function(availableTransports){\r\n return{\r\n filterToEnabled:function(transportsWhitelist,info){\r\n var transports={\r\n main:[]\r\n,facade:[]\r\n};\r\n if(!transportsWhitelist){\r\n transportsWhitelist=[];\r\n}else if(typeof transportsWhitelist==='string'){\r\n transportsWhitelist=[transportsWhitelist];\r\n}\r\n\r\n availableTransports.forEach(function(trans){\r\n if(!trans){\r\n return;\r\n}\r\n\r\n if(trans.transportName==='websocket'&&info.websocket===false){\r\n debug('disabled from server','websocket');\r\n return;\r\n}\r\n\r\n if(transportsWhitelist.length&&\r\n transportsWhitelist.indexOf(trans.transportName)===-1){\r\n debug('not in whitelist',trans.transportName);\r\n return;\r\n}\r\n\r\n if(trans.enabled(info)){\r\n debug('enabled',trans.transportName);\r\n transports.main.push(trans);\r\n if(trans.facadeTransport){\r\n transports.facade.push(trans.facadeTransport);\r\n}\r\n}else{\r\n debug('disabled',trans.transportName);\r\n}\r\n});\r\n return transports;\r\n}\r\n};\r\n};\r\n\r\n}).call(this,{env:{}})\r\n\r\n},{\"debug\":55}],52:[function(require,module,exports){\r\n(function(process){\r\n'use strict';\r\n\r\nvar URL=require('url-parse');\r\n\r\nvar debug=function(){};\r\nif(process.env.NODE_ENV!=='production'){\r\n debug=require('debug')('sockjs-client:utils:url');\r\n}\r\n\r\nmodule.exports={\r\n getOrigin:function(url){\r\n if(!url){\r\n return null;\r\n}\r\n\r\n var p=new URL(url);\r\n if(p.protocol==='file:'){\r\n return null;\r\n}\r\n\r\n var port=p.port;\r\n if(!port){\r\n port=(p.protocol==='https:')?'443':'80';\r\n}\r\n\r\n return p.protocol+'//'+p.hostname+':'+port;\r\n}\r\n\r\n,isOriginEqual:function(a,b){\r\n var res=this.getOrigin(a)===this.getOrigin(b);\r\n debug('same',a,b,res);\r\n return res;\r\n}\r\n\r\n,isSchemeEqual:function(a,b){\r\n return(a.split(':')[0]===b.split(':')[0]);\r\n}\r\n\r\n,addPath:function(url,path){\r\n var qs=url.split('?');\r\n return qs[0]+path+(qs[1]?'?'+qs[1]:'');\r\n}\r\n\r\n,addQuery:function(url,q){\r\n return url+(url.indexOf('?')===-1?('?'+q):('&'+q));\r\n}\r\n};\r\n\r\n}).call(this,{env:{}})\r\n\r\n},{\"debug\":55,\"url-parse\":61}],53:[function(require,module,exports){\r\nmodule.exports='1.3.0';\r\n\r\n},{}],54:[function(require,module,exports){\r\n/**\r\n*Helpers.\r\n*/\r\n\r\nvar s=1000;\r\nvar m=s*60;\r\nvar h=m*60;\r\nvar d=h*24;\r\nvar w=d*7;\r\nvar y=d*365.25;\r\n\r\n/**\r\n*Parse or format the given`val`.\r\n*\r\n*Options:\r\n*\r\n*-`long`verbose formatting[false]\r\n*\r\n*@param{String|Number}val\r\n*@param{Object}[options]\r\n*@throws{Error}throw an error if val is not a non-empty string or a number\r\n*@return{String|Number}\r\n*@api public\r\n*/\r\n\r\nmodule.exports=function(val,options){\r\n options=options||{};\r\n var type=typeof val;\r\n if(type==='string'&&val.length>0){\r\n return parse(val);\r\n}else if(type==='number'&&isNaN(val)===false){\r\n return options.long?fmtLong(val):fmtShort(val);\r\n}\r\n throw new Error(\r\n'val is not a non-empty string or a valid number.val='+\r\n JSON.stringify(val)\r\n);\r\n};\r\n\r\n/**\r\n*Parse the given`str`and return milliseconds.\r\n*\r\n*@param{String}str\r\n*@return{Number}\r\n*@api private\r\n*/\r\n\r\nfunction parse(str){\r\n str=String(str);\r\n if(str.length>100){\r\n return;\r\n}\r\n var match=/^((?:\\d+)?\\-?\\d?\\.?\\d+)*(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\r\n str\r\n);\r\n if(!match){\r\n return;\r\n}\r\n var n=parseFloat(match[1]);\r\n var type=(match[2]||'ms').toLowerCase();\r\n switch(type){\r\n case'years':\r\n case'year':\r\n case'yrs':\r\n case'yr':\r\n case'y':\r\n return n*y;\r\n case'weeks':\r\n case'week':\r\n case'w':\r\n return n*w;\r\n case'days':\r\n case'day':\r\n case'd':\r\n return n*d;\r\n case'hours':\r\n case'hour':\r\n case'hrs':\r\n case'hr':\r\n case'h':\r\n return n*h;\r\n case'minutes':\r\n case'minute':\r\n case'mins':\r\n case'min':\r\n case'm':\r\n return n*m;\r\n case'seconds':\r\n case'second':\r\n case'secs':\r\n case'sec':\r\n case's':\r\n return n*s;\r\n case'milliseconds':\r\n case'millisecond':\r\n case'msecs':\r\n case'msec':\r\n case'ms':\r\n return n;\r\n default:\r\n return undefined;\r\n}\r\n}\r\n\r\n/**\r\n*Short format for`ms`.\r\n*\r\n*@param{Number}ms\r\n*@return{String}\r\n*@api private\r\n*/\r\n\r\nfunction fmtShort(ms){\r\n var msAbs=Math.abs(ms);\r\n if(msAbs>=d){\r\n return Math.round(ms/d)+'d';\r\n}\r\n if(msAbs>=h){\r\n return Math.round(ms/h)+'h';\r\n}\r\n if(msAbs>=m){\r\n return Math.round(ms/m)+'m';\r\n}\r\n if(msAbs>=s){\r\n return Math.round(ms/s)+'s';\r\n}\r\n return ms+'ms';\r\n}\r\n\r\n/**\r\n*Long format for`ms`.\r\n*\r\n*@param{Number}ms\r\n*@return{String}\r\n*@api private\r\n*/\r\n\r\nfunction fmtLong(ms){\r\n var msAbs=Math.abs(ms);\r\n if(msAbs>=d){\r\n return plural(ms,msAbs,d,'day');\r\n}\r\n if(msAbs>=h){\r\n return plural(ms,msAbs,h,'hour');\r\n}\r\n if(msAbs>=m){\r\n return plural(ms,msAbs,m,'minute');\r\n}\r\n if(msAbs>=s){\r\n return plural(ms,msAbs,s,'second');\r\n}\r\n return ms+'ms';\r\n}\r\n\r\n/**\r\n*Pluralization helper.\r\n*/\r\n\r\nfunction plural(ms,msAbs,n,name){\r\n var isPlural=msAbs>=n*1.5;\r\n return Math.round(ms/n)+''+name+(isPlural?'s':'');\r\n}\r\n\r\n},{}],55:[function(require,module,exports){\r\n(function(process){\r\n\"use strict\";\r\n\r\nfunction _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}\r\n\r\n/*eslint-env browser*/\r\n\r\n/**\r\n*This is the web browser implementation of`debug()`.\r\n*/\r\nexports.log=log;\r\nexports.formatArgs=formatArgs;\r\nexports.save=save;\r\nexports.load=load;\r\nexports.useColors=useColors;\r\nexports.storage=localstorage();\r\n/**\r\n*Colors.\r\n*/\r\n\r\nexports.colors=['#0000CC','#0000FF','#0033CC','#0033FF','#0066CC','#0066FF','#0099CC','#0099FF','#00CC00','#00CC33','#00CC66','#00CC99','#00CCCC','#00CCFF','#3300CC','#3300FF','#3333CC','#3333FF','#3366CC','#3366FF','#3399CC','#3399FF','#33CC00','#33CC33','#33CC66','#33CC99','#33CCCC','#33CCFF','#6600CC','#6600FF','#6633CC','#6633FF','#66CC00','#66CC33','#9900CC','#9900FF','#9933CC','#9933FF','#99CC00','#99CC33','#CC0000','#CC0033','#CC0066','#CC0099','#CC00CC','#CC00FF','#CC3300','#CC3333','#CC3366','#CC3399','#CC33CC','#CC33FF','#CC6600','#CC6633','#CC9900','#CC9933','#CCCC00','#CCCC33','#FF0000','#FF0033','#FF0066','#FF0099','#FF00CC','#FF00FF','#FF3300','#FF3333','#FF3366','#FF3399','#FF33CC','#FF33FF','#FF6600','#FF6633','#FF9900','#FF9933','#FFCC00','#FFCC33'];\r\n/**\r\n*Currently only WebKit-based Web Inspectors,Firefox>=v31,\r\n*and the Firebug extension(any Firefox version)are known\r\n*to support\"%c\"CSS customizations.\r\n*\r\n*TODO:add a`localStorage`variable to explicitly enable/disable colors\r\n*/\r\n//eslint-disable-next-line complexity\r\n\r\nfunction useColors(){\r\n//NB:In an Electron preload script,document will be defined but not fully\r\n//initialized.Since we know we're in Chrome,we'll just detect this case\r\n//explicitly\r\n if(typeof window!=='undefined'&&window.process&&(window.process.type==='renderer'||window.process.__nwjs)){\r\n return true;\r\n}//Internet Explorer and Edge do not support colors.\r\n\r\n\r\n if(typeof navigator!=='undefined'&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)){\r\n return false;\r\n}//Is webkit?http://stackoverflow.com/a/16459606/376773\r\n//document is undefined in react-native:https://github.com/facebook/react-native/pull/1632\r\n\r\n\r\n return typeof document!=='undefined'&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||//Is firebug?http://stackoverflow.com/a/398120/376773\r\n typeof window!=='undefined'&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||//Is firefox>=v31?\r\n//https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\r\n typeof navigator!=='undefined'&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31||//Double check webkit in userAgent just in case we are in a worker\r\n typeof navigator!=='undefined'&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\r\n}\r\n/**\r\n*Colorize log arguments if enabled.\r\n*\r\n*@api public\r\n*/\r\n\r\n\r\nfunction formatArgs(args){\r\n args[0]=(this.useColors?'%c':'')+this.namespace+(this.useColors?'%c':'')+args[0]+(this.useColors?'%c':'')+'+'+module.exports.humanize(this.diff);\r\n\r\n if(!this.useColors){\r\n return;\r\n}\r\n\r\n var c='color:'+this.color;\r\n args.splice(1,0,c,'color:inherit');//The final\"%c\"is somewhat tricky,because there could be other\r\n//arguments passed either before or after the%c,so we need to\r\n//figure out the correct index to insert the CSS into\r\n\r\n var index=0;\r\n var lastC=0;\r\n args[0].replace(/%[a-zA-Z%]/g,function(match){\r\n if(match==='%%'){\r\n return;\r\n}\r\n\r\n index++;\r\n\r\n if(match==='%c'){\r\n//We only are interested in the*last*%c\r\n//(the user may have provided their own)\r\n lastC=index;\r\n}\r\n});\r\n args.splice(lastC,0,c);\r\n}\r\n/**\r\n*Invokes`console.log()`when available.\r\n*No-op when`console.log`is not a\"function\".\r\n*\r\n*@api public\r\n*/\r\n\r\n\r\nfunction log(){\r\n var _console;\r\n\r\n//This hackery is required for IE8/9,where\r\n//the`console.log`function doesn't have'apply'\r\n return(typeof console===\"undefined\"?\"undefined\":_typeof(console))==='object'&&console.log&&(_console=console).log.apply(_console,arguments);\r\n}\r\n/**\r\n*Save`namespaces`.\r\n*\r\n*@param{String}namespaces\r\n*@api private\r\n*/\r\n\r\n\r\nfunction save(namespaces){\r\n try{\r\n if(namespaces){\r\n exports.storage.setItem('debug',namespaces);\r\n}else{\r\n exports.storage.removeItem('debug');\r\n}\r\n}catch(error){//Swallow\r\n//XXX(@Qix-)should we be logging these?\r\n}\r\n}\r\n/**\r\n*Load`namespaces`.\r\n*\r\n*@return{String}returns the previously persisted debug modes\r\n*@api private\r\n*/\r\n\r\n\r\nfunction load(){\r\n var r;\r\n\r\n try{\r\n r=exports.storage.getItem('debug');\r\n}catch(error){}//Swallow\r\n//XXX(@Qix-)should we be logging these?\r\n//If debug isn't set in LS,and we're in Electron,try to load $DEBUG\r\n\r\n\r\n if(!r&&typeof process!=='undefined'&&'env'in process){\r\n r=process.env.DEBUG;\r\n}\r\n\r\n return r;\r\n}\r\n/**\r\n*Localstorage attempts to return the localstorage.\r\n*\r\n*This is necessary because safari throws\r\n*when a user disables cookies/localstorage\r\n*and you attempt to access it.\r\n*\r\n*@return{LocalStorage}\r\n*@api private\r\n*/\r\n\r\n\r\nfunction localstorage(){\r\n try{\r\n//TVMLKit(Apple TV JS Runtime)does not have a window object,just localStorage in the global context\r\n//The Browser also has localStorage in the global context.\r\n return localStorage;\r\n}catch(error){//Swallow\r\n//XXX(@Qix-)should we be logging these?\r\n}\r\n}\r\n\r\nmodule.exports=require('./common')(exports);\r\nvar formatters=module.exports.formatters;\r\n/**\r\n*Map%j to`JSON.stringify()`,since no Web Inspectors do that by default.\r\n*/\r\n\r\nformatters.j=function(v){\r\n try{\r\n return JSON.stringify(v);\r\n}catch(error){\r\n return'[UnexpectedJSONParseError]:'+error.message;\r\n}\r\n};\r\n\r\n\r\n}).call(this,{env:{}})\r\n\r\n},{\"./common\":56}],56:[function(require,module,exports){\r\n\"use strict\";\r\n\r\n/**\r\n*This is the common logic for both the Node.js and web browser\r\n*implementations of`debug()`.\r\n*/\r\nfunction setup(env){\r\n createDebug.debug=createDebug;\r\n createDebug.default=createDebug;\r\n createDebug.coerce=coerce;\r\n createDebug.disable=disable;\r\n createDebug.enable=enable;\r\n createDebug.enabled=enabled;\r\n createDebug.humanize=require('ms');\r\n Object.keys(env).forEach(function(key){\r\n createDebug[key]=env[key];\r\n});\r\n/**\r\n*Active`debug`instances.\r\n*/\r\n\r\n createDebug.instances=[];\r\n/**\r\n*The currently active debug mode names,and names to skip.\r\n*/\r\n\r\n createDebug.names=[];\r\n createDebug.skips=[];\r\n/**\r\n*Map of special\"%n\"handling functions,for the debug\"format\"argument.\r\n*\r\n*Valid key names are a single,lower or upper-case letter,i.e.\"n\"and\"N\".\r\n*/\r\n\r\n createDebug.formatters={};\r\n/**\r\n*Selects a color for a debug namespace\r\n*@param{String}namespace The namespace string for the for the debug instance to be colored\r\n*@return{Number|String}An ANSI color code for the given namespace\r\n*@api private\r\n*/\r\n\r\n function selectColor(namespace){\r\n var hash=0;\r\n\r\n for(var i=0;i<namespace.length;i++){\r\n hash=(hash<<5)-hash+namespace.charCodeAt(i);\r\n hash|=0;//Convert to 32bit integer\r\n}\r\n\r\n return createDebug.colors[Math.abs(hash)%createDebug.colors.length];\r\n}\r\n\r\n createDebug.selectColor=selectColor;\r\n/**\r\n*Create a debugger with the given`namespace`.\r\n*\r\n*@param{String}namespace\r\n*@return{Function}\r\n*@api public\r\n*/\r\n\r\n function createDebug(namespace){\r\n var prevTime;\r\n\r\n function debug(){\r\n for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){\r\n args[_key]=arguments[_key];\r\n}\r\n\r\n//Disabled?\r\n if(!debug.enabled){\r\n return;\r\n}\r\n\r\n var self=debug;//Set`diff`timestamp\r\n\r\n var curr=Number(new Date());\r\n var ms=curr-(prevTime||curr);\r\n self.diff=ms;\r\n self.prev=prevTime;\r\n self.curr=curr;\r\n prevTime=curr;\r\n args[0]=createDebug.coerce(args[0]);\r\n\r\n if(typeof args[0]!=='string'){\r\n//Anything else let's inspect with%O\r\n args.unshift('%O');\r\n}//Apply any`formatters`transformations\r\n\r\n\r\n var index=0;\r\n args[0]=args[0].replace(/%([a-zA-Z%])/g,function(match,format){\r\n//If we encounter an escaped%then don't increase the array index\r\n if(match==='%%'){\r\n return match;\r\n}\r\n\r\n index++;\r\n var formatter=createDebug.formatters[format];\r\n\r\n if(typeof formatter==='function'){\r\n var val=args[index];\r\n match=formatter.call(self,val);//Now we need to remove`args[index]`since it's inlined in the`format`\r\n\r\n args.splice(index,1);\r\n index--;\r\n}\r\n\r\n return match;\r\n});//Apply env-specific formatting(colors,etc.)\r\n\r\n createDebug.formatArgs.call(self,args);\r\n var logFn=self.log||createDebug.log;\r\n logFn.apply(self,args);\r\n}\r\n\r\n debug.namespace=namespace;\r\n debug.enabled=createDebug.enabled(namespace);\r\n debug.useColors=createDebug.useColors();\r\n debug.color=selectColor(namespace);\r\n debug.destroy=destroy;\r\n debug.extend=extend;//Debug.formatArgs=formatArgs;\r\n//debug.rawLog=rawLog;\r\n//env-specific initialization logic for debug instances\r\n\r\n if(typeof createDebug.init==='function'){\r\n createDebug.init(debug);\r\n}\r\n\r\n createDebug.instances.push(debug);\r\n return debug;\r\n}\r\n\r\n function destroy(){\r\n var index=createDebug.instances.indexOf(this);\r\n\r\n if(index!==-1){\r\n createDebug.instances.splice(index,1);\r\n return true;\r\n}\r\n\r\n return false;\r\n}\r\n\r\n function extend(namespace,delimiter){\r\n return createDebug(this.namespace+(typeof delimiter==='undefined'?':':delimiter)+namespace);\r\n}\r\n/**\r\n*Enables a debug mode by namespaces.This can include modes\r\n*separated by a colon and wildcards.\r\n*\r\n*@param{String}namespaces\r\n*@api public\r\n*/\r\n\r\n\r\n function enable(namespaces){\r\n createDebug.save(namespaces);\r\n createDebug.names=[];\r\n createDebug.skips=[];\r\n var i;\r\n var split=(typeof namespaces==='string'?namespaces:'').split(/[\\s,]+/);\r\n var len=split.length;\r\n\r\n for(i=0;i<len;i++){\r\n if(!split[i]){\r\n//ignore empty strings\r\n continue;\r\n}\r\n\r\n namespaces=split[i].replace(/\\*/g,'.*?');\r\n\r\n if(namespaces[0]==='-'){\r\n createDebug.skips.push(new RegExp('^'+namespaces.substr(1)+'$'));\r\n}else{\r\n createDebug.names.push(new RegExp('^'+namespaces+'$'));\r\n}\r\n}\r\n\r\n for(i=0;i<createDebug.instances.length;i++){\r\n var instance=createDebug.instances[i];\r\n instance.enabled=createDebug.enabled(instance.namespace);\r\n}\r\n}\r\n/**\r\n*Disable debug output.\r\n*\r\n*@api public\r\n*/\r\n\r\n\r\n function disable(){\r\n createDebug.enable('');\r\n}\r\n/**\r\n*Returns true if the given mode name is enabled,false otherwise.\r\n*\r\n*@param{String}name\r\n*@return{Boolean}\r\n*@api public\r\n*/\r\n\r\n\r\n function enabled(name){\r\n if(name[name.length-1]==='*'){\r\n return true;\r\n}\r\n\r\n var i;\r\n var len;\r\n\r\n for(i=0,len=createDebug.skips.length;i<len;i++){\r\n if(createDebug.skips[i].test(name)){\r\n return false;\r\n}\r\n}\r\n\r\n for(i=0,len=createDebug.names.length;i<len;i++){\r\n if(createDebug.names[i].test(name)){\r\n return true;\r\n}\r\n}\r\n\r\n return false;\r\n}\r\n/**\r\n*Coerce`val`.\r\n*\r\n*@param{Mixed}val\r\n*@return{Mixed}\r\n*@api private\r\n*/\r\n\r\n\r\n function coerce(val){\r\n if(val instanceof Error){\r\n return val.stack||val.message;\r\n}\r\n\r\n return val;\r\n}\r\n\r\n createDebug.enable(createDebug.load());\r\n return createDebug;\r\n}\r\n\r\nmodule.exports=setup;\r\n\r\n\r\n},{\"ms\":54}],57:[function(require,module,exports){\r\nif(typeof Object.create==='function'){\r\n//implementation from standard node.js'util'module\r\n module.exports=function inherits(ctor,superCtor){\r\n ctor.super_=superCtor\r\n ctor.prototype=Object.create(superCtor.prototype,{\r\n constructor:{\r\n value:ctor,\r\n enumerable:false,\r\n writable:true,\r\n configurable:true\r\n}\r\n});\r\n};\r\n}else{\r\n//old school shim for old browsers\r\n module.exports=function inherits(ctor,superCtor){\r\n ctor.super_=superCtor\r\n var TempCtor=function(){}\r\n TempCtor.prototype=superCtor.prototype\r\n ctor.prototype=new TempCtor()\r\n ctor.prototype.constructor=ctor\r\n}\r\n}\r\n\r\n},{}],58:[function(require,module,exports){\r\n(function(global){\r\n/*!JSON v3.3.2|http://bestiejs.github.io/json3|Copyright 2012-2014,Kit Cambridge|http://kit.mit-license.org*/\r\n;(function(){\r\n//Detect the`define`function exposed by asynchronous module loaders.The\r\n//strict`define`check is necessary for compatibility with`r.js`.\r\n var isLoader=typeof define===\"function\"&&define.amd;\r\n\r\n//A set of types used to distinguish objects from primitives.\r\n var objectTypes={\r\n\"function\":true,\r\n\"object\":true\r\n};\r\n\r\n//Detect the`exports`object exposed by CommonJS implementations.\r\n var freeExports=objectTypes[typeof exports]&&exports&&!exports.nodeType&&exports;\r\n\r\n//Use the`global`object exposed by Node(including Browserify via\r\n//`insert-module-globals`),Narwhal,and Ringo as the default context,\r\n//and the`window`object in browsers.Rhino exports a`global`function\r\n//instead.\r\n var root=objectTypes[typeof window]&&window||this,\r\n freeGlobal=freeExports&&objectTypes[typeof module]&&module&&!module.nodeType&&typeof global==\"object\"&&global;\r\n\r\n if(freeGlobal&&(freeGlobal[\"global\"]===freeGlobal||freeGlobal[\"window\"]===freeGlobal||freeGlobal[\"self\"]===freeGlobal)){\r\n root=freeGlobal;\r\n}\r\n\r\n//Public:Initializes JSON 3 using the given`context`object,attaching the\r\n//`stringify`and`parse`functions to the specified`exports`object.\r\n function runInContext(context,exports){\r\n context||(context=root[\"Object\"]());\r\n exports||(exports=root[\"Object\"]());\r\n\r\n//Native constructor aliases.\r\n var Number=context[\"Number\"]||root[\"Number\"],\r\n String=context[\"String\"]||root[\"String\"],\r\n Object=context[\"Object\"]||root[\"Object\"],\r\n Date=context[\"Date\"]||root[\"Date\"],\r\n SyntaxError=context[\"SyntaxError\"]||root[\"SyntaxError\"],\r\n TypeError=context[\"TypeError\"]||root[\"TypeError\"],\r\n Math=context[\"Math\"]||root[\"Math\"],\r\n nativeJSON=context[\"JSON\"]||root[\"JSON\"];\r\n\r\n//Delegate to the native`stringify`and`parse`implementations.\r\n if(typeof nativeJSON==\"object\"&&nativeJSON){\r\n exports.stringify=nativeJSON.stringify;\r\n exports.parse=nativeJSON.parse;\r\n}\r\n\r\n//Convenience aliases.\r\n var objectProto=Object.prototype,\r\n getClass=objectProto.toString,\r\n isProperty,forEach,undef;\r\n\r\n//Test the`Date#getUTC*`methods.Based on work by@Yaffle.\r\n var isExtended=new Date(-3509827334573292);\r\n try{\r\n//The`getUTCFullYear`,`Month`,and`Date`methods return nonsensical\r\n//results for certain dates in Opera>=10.53.\r\n isExtended=isExtended.getUTCFullYear()==-109252&&isExtended.getUTCMonth()===0&&isExtended.getUTCDate()===1&&\r\n//Safari<2.0.2 stores the internal millisecond time value correctly,\r\n//but clips the values returned by the date methods to the range of\r\n//signed 32-bit integers([-2**31,2**31-1]).\r\n isExtended.getUTCHours()==10&&isExtended.getUTCMinutes()==37&&isExtended.getUTCSeconds()==6&&isExtended.getUTCMilliseconds()==708;\r\n}catch(exception){}\r\n\r\n//Internal:Determines whether the native`JSON.stringify`and`parse`\r\n//implementations are spec-compliant.Based on work by Ken Snyder.\r\n function has(name){\r\n if(has[name]!==undef){\r\n//Return cached feature test result.\r\n return has[name];\r\n}\r\n var isSupported;\r\n if(name==\"bug-string-char-index\"){\r\n//IE<=7 doesn't support accessing string characters using square\r\n//bracket notation.IE 8 only supports this for primitives.\r\n isSupported=\"a\"[0]!=\"a\";\r\n}else if(name==\"json\"){\r\n//Indicates whether both`JSON.stringify`and`JSON.parse`are\r\n//supported.\r\n isSupported=has(\"json-stringify\")&&has(\"json-parse\");\r\n}else{\r\n var value,serialized='{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\r\n//Test`JSON.stringify`.\r\n if(name==\"json-stringify\"){\r\n var stringify=exports.stringify,stringifySupported=typeof stringify==\"function\"&&isExtended;\r\n if(stringifySupported){\r\n//A test function object with a custom`toJSON`method.\r\n(value=function(){\r\n return 1;\r\n}).toJSON=value;\r\n try{\r\n stringifySupported=\r\n//Firefox 3.1b1 and b2 serialize string,number,and boolean\r\n//primitives as object literals.\r\n stringify(0)===\"0\"&&\r\n//FF 3.1b1,b2,and JSON 2 serialize wrapped primitives as object\r\n//literals.\r\n stringify(new Number())===\"0\"&&\r\n stringify(new String())=='\"\"'&&\r\n//FF 3.1b1,2 throw an error if the value is`null`,`undefined`,or\r\n//does not define a canonical JSON representation(this applies to\r\n//objects with`toJSON`properties as well,*unless*they are nested\r\n//within an object or array).\r\n stringify(getClass)===undef&&\r\n//IE 8 serializes`undefined`as`\"undefined\"`.Safari<=5.1.7 and\r\n//FF 3.1b3 pass this test.\r\n stringify(undef)===undef&&\r\n//Safari<=5.1.7 and FF 3.1b3 throw`Error`s and`TypeError`s,\r\n//respectively,if the value is omitted entirely.\r\n stringify()===undef&&\r\n//FF 3.1b1,2 throw an error if the given value is not a number,\r\n//string,array,object,Boolean,or`null`literal.This applies to\r\n//objects with custom`toJSON`methods as well,unless they are nested\r\n//inside object or array literals.YUI 3.0.0b1 ignores custom`toJSON`\r\n//methods entirely.\r\n stringify(value)===\"1\"&&\r\n stringify([value])==\"[1]\"&&\r\n//Prototype<=1.6.1 serializes`[undefined]`as`\"[]\"`instead of\r\n//`\"[null]\"`.\r\n stringify([undef])==\"[null]\"&&\r\n//YUI 3.0.0b1 fails to serialize`null`literals.\r\n stringify(null)==\"null\"&&\r\n//FF 3.1b1,2 halts serialization if an array contains a function:\r\n//`[1,true,getClass,1]`serializes as\"[1,true,],\".FF 3.1b3\r\n//elides non-JSON values from objects and arrays,unless they\r\n//define custom`toJSON`methods.\r\n stringify([undef,getClass,null])==\"[null,null,null]\"&&\r\n//Simple serialization test.FF 3.1b1 uses Unicode escape sequences\r\n//where character escape codes are expected(e.g.,`\\b`=>`\\u0008`).\r\n stringify({\"a\":[value,true,false,null,\"\\x00\\b\\n\\f\\r\\t\"]})==serialized&&\r\n//FF 3.1b1 and b2 ignore the`filter`and`width`arguments.\r\n stringify(null,value)===\"1\"&&\r\n stringify([1,2],null,1)==\"[\\n 1,\\n 2\\n]\"&&\r\n//JSON 2,Prototype<=1.7,and older WebKit builds incorrectly\r\n//serialize extended years.\r\n stringify(new Date(-8.64e15))=='\"-271821-04-20T00:00:00.000Z\"'&&\r\n//The milliseconds are optional in ES 5,but required in 5.1.\r\n stringify(new Date(8.64e15))=='\"+275760-09-13T00:00:00.000Z\"'&&\r\n//Firefox<=11.0 incorrectly serializes years prior to 0 as negative\r\n//four-digit years instead of six-digit years.Credits:@Yaffle.\r\n stringify(new Date(-621987552e5))=='\"-000001-01-01T00:00:00.000Z\"'&&\r\n//Safari<=5.1.5 and Opera>=10.53 incorrectly serialize millisecond\r\n//values less than 1000.Credits:@Yaffle.\r\n stringify(new Date(-1))=='\"1969-12-31T23:59:59.999Z\"';\r\n}catch(exception){\r\n stringifySupported=false;\r\n}\r\n}\r\n isSupported=stringifySupported;\r\n}\r\n//Test`JSON.parse`.\r\n if(name==\"json-parse\"){\r\n var parse=exports.parse;\r\n if(typeof parse==\"function\"){\r\n try{\r\n//FF 3.1b1,b2 will throw an exception if a bare literal is provided.\r\n//Conforming implementations should also coerce the initial argument to\r\n//a string prior to parsing.\r\n if(parse(\"0\")===0&&!parse(false)){\r\n//Simple parsing test.\r\n value=parse(serialized);\r\n var parseSupported=value[\"a\"].length==5&&value[\"a\"][0]===1;\r\n if(parseSupported){\r\n try{\r\n//Safari<=5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\r\n parseSupported=!parse('\"\\t\"');\r\n}catch(exception){}\r\n if(parseSupported){\r\n try{\r\n//FF 4.0 and 4.0.1 allow leading`+`signs and leading\r\n//decimal points.FF 4.0,4.0.1,and IE 9-10 also allow\r\n//certain octal literals.\r\n parseSupported=parse(\"01\")!==1;\r\n}catch(exception){}\r\n}\r\n if(parseSupported){\r\n try{\r\n//FF 4.0,4.0.1,and Rhino 1.7R3-R4 allow trailing decimal\r\n//points.These environments,along with FF 3.1b1 and 2,\r\n//also allow trailing commas in JSON objects and arrays.\r\n parseSupported=parse(\"1.\")!==1;\r\n}catch(exception){}\r\n}\r\n}\r\n}\r\n}catch(exception){\r\n parseSupported=false;\r\n}\r\n}\r\n isSupported=parseSupported;\r\n}\r\n}\r\n return has[name]=!!isSupported;\r\n}\r\n\r\n if(!has(\"json\")){\r\n//Common`[[Class]]`name aliases.\r\n var functionClass=\"[object Function]\",\r\n dateClass=\"[object Date]\",\r\n numberClass=\"[object Number]\",\r\n stringClass=\"[object String]\",\r\n arrayClass=\"[object Array]\",\r\n booleanClass=\"[object Boolean]\";\r\n\r\n//Detect incomplete support for accessing string characters by index.\r\n var charIndexBuggy=has(\"bug-string-char-index\");\r\n\r\n//Define additional utility methods if the`Date`methods are buggy.\r\n if(!isExtended){\r\n var floor=Math.floor;\r\n//A mapping between the months of the year and the number of days between\r\n//January 1st and the first of the respective month.\r\n var Months=[0,31,59,90,120,151,181,212,243,273,304,334];\r\n//Internal:Calculates the number of days between the Unix epoch and the\r\n//first day of the given month.\r\n var getDay=function(year,month){\r\n return Months[month]+365*(year-1970)+floor((year-1969+(month=+(month>1)))/4)-floor((year-1901+month)/100)+floor((year-1601+month)/400);\r\n};\r\n}\r\n\r\n//Internal:Determines if a property is a direct property of the given\r\n//object.Delegates to the native`Object#hasOwnProperty`method.\r\n if(!(isProperty=objectProto.hasOwnProperty)){\r\n isProperty=function(property){\r\n var members={},constructor;\r\n if((members.__proto__=null,members.__proto__={\r\n//The*proto*property cannot be set multiple times in recent\r\n//versions of Firefox and SeaMonkey.\r\n\"toString\":1\r\n},members).toString!=getClass){\r\n//Safari<=2.0.3 doesn't implement`Object#hasOwnProperty`,but\r\n//supports the mutable*proto*property.\r\n isProperty=function(property){\r\n//Capture and break the object's prototype chain(see section 8.6.2\r\n//of the ES 5.1 spec).The parenthesized expression prevents an\r\n//unsafe transformation by the Closure Compiler.\r\n var original=this.__proto__,result=property in(this.__proto__=null,this);\r\n//Restore the original prototype chain.\r\n this.__proto__=original;\r\n return result;\r\n};\r\n}else{\r\n//Capture a reference to the top-level`Object`constructor.\r\n constructor=members.constructor;\r\n//Use the`constructor`property to simulate`Object#hasOwnProperty`in\r\n//other environments.\r\n isProperty=function(property){\r\n var parent=(this.constructor||constructor).prototype;\r\n return property in this&&!(property in parent&&this[property]===parent[property]);\r\n};\r\n}\r\n members=null;\r\n return isProperty.call(this,property);\r\n};\r\n}\r\n\r\n//Internal:Normalizes the`for...in`iteration algorithm across\r\n//environments.Each enumerated key is yielded to a`callback`function.\r\n forEach=function(object,callback){\r\n var size=0,Properties,members,property;\r\n\r\n//Tests for bugs in the current environment's`for...in`algorithm.The\r\n//`valueOf`property inherits the non-enumerable flag from\r\n//`Object.prototype`in older versions of IE,Netscape,and Mozilla.\r\n(Properties=function(){\r\n this.valueOf=0;\r\n}).prototype.valueOf=0;\r\n\r\n//Iterate over a new instance of the`Properties`class.\r\n members=new Properties();\r\n for(property in members){\r\n//Ignore all properties inherited from`Object.prototype`.\r\n if(isProperty.call(members,property)){\r\n size++;\r\n}\r\n}\r\n Properties=members=null;\r\n\r\n//Normalize the iteration algorithm.\r\n if(!size){\r\n//A list of non-enumerable properties inherited from`Object.prototype`.\r\n members=[\"valueOf\",\"toString\",\"toLocaleString\",\"propertyIsEnumerable\",\"isPrototypeOf\",\"hasOwnProperty\",\"constructor\"];\r\n//IE<=8,Mozilla 1.0,and Netscape 6.2 ignore shadowed non-enumerable\r\n//properties.\r\n forEach=function(object,callback){\r\n var isFunction=getClass.call(object)==functionClass,property,length;\r\n var hasProperty=!isFunction&&typeof object.constructor!=\"function\"&&objectTypes[typeof object.hasOwnProperty]&&object.hasOwnProperty||isProperty;\r\n for(property in object){\r\n//Gecko<=1.0 enumerates the`prototype`property of functions under\r\n//certain conditions;IE does not.\r\n if(!(isFunction&&property==\"prototype\")&&hasProperty.call(object,property)){\r\n callback(property);\r\n}\r\n}\r\n//Manually invoke the callback for each non-enumerable property.\r\n for(length=members.length;property=members[--length];hasProperty.call(object,property)&&callback(property));\r\n};\r\n}else if(size==2){\r\n//Safari<=2.0.4 enumerates shadowed properties twice.\r\n forEach=function(object,callback){\r\n//Create a set of iterated properties.\r\n var members={},isFunction=getClass.call(object)==functionClass,property;\r\n for(property in object){\r\n//Store each property name to prevent double enumeration.The\r\n//`prototype`property of functions is not enumerated due to cross-\r\n//environment inconsistencies.\r\n if(!(isFunction&&property==\"prototype\")&&!isProperty.call(members,property)&&(members[property]=1)&&isProperty.call(object,property)){\r\n callback(property);\r\n}\r\n}\r\n};\r\n}else{\r\n//No bugs detected;use the standard`for...in`algorithm.\r\n forEach=function(object,callback){\r\n var isFunction=getClass.call(object)==functionClass,property,isConstructor;\r\n for(property in object){\r\n if(!(isFunction&&property==\"prototype\")&&isProperty.call(object,property)&&!(isConstructor=property===\"constructor\")){\r\n callback(property);\r\n}\r\n}\r\n//Manually invoke the callback for the`constructor`property due to\r\n//cross-environment inconsistencies.\r\n if(isConstructor||isProperty.call(object,(property=\"constructor\"))){\r\n callback(property);\r\n}\r\n};\r\n}\r\n return forEach(object,callback);\r\n};\r\n\r\n//Public:Serializes a JavaScript`value`as a JSON string.The optional\r\n//`filter`argument may specify either a function that alters how object and\r\n//array members are serialized,or an array of strings and numbers that\r\n//indicates which properties should be serialized.The optional`width`\r\n//argument may be either a string or number that specifies the indentation\r\n//level of the output.\r\n if(!has(\"json-stringify\")){\r\n//Internal:A map of control characters and their escaped equivalents.\r\n var Escapes={\r\n 92:\"\\\\\\\\\",\r\n 34:'\\\\\"',\r\n 8:\"\\\\b\",\r\n 12:\"\\\\f\",\r\n 10:\"\\\\n\",\r\n 13:\"\\\\r\",\r\n 9:\"\\\\t\"\r\n};\r\n\r\n//Internal:Converts`value`into a zero-padded string such that its\r\n//length is at least equal to`width`.The`width`must be<=6.\r\n var leadingZeroes=\"000000\";\r\n var toPaddedString=function(width,value){\r\n//The`||0`expression is necessary to work around a bug in\r\n//Opera<=7.54u2 where`0==-0`,but`String(-0)!==\"0\"`.\r\n return(leadingZeroes+(value||0)).slice(-width);\r\n};\r\n\r\n//Internal:Double-quotes a string`value`,replacing all ASCII control\r\n//characters(characters with code unit values between 0 and 31)with\r\n//their escaped equivalents.This is an implementation of the\r\n//`Quote(value)`operation defined in ES 5.1 section 15.12.3.\r\n var unicodePrefix=\"\\\\u00\";\r\n var quote=function(value){\r\n var result='\"',index=0,length=value.length,useCharIndex=!charIndexBuggy||length>10;\r\n var symbols=useCharIndex&&(charIndexBuggy?value.split(\"\"):value);\r\n for(;index<length;index++){\r\n var charCode=value.charCodeAt(index);\r\n//If the character is a control character,append its Unicode or\r\n//shorthand escape sequence;otherwise,append the character as-is.\r\n switch(charCode){\r\n case 8:case 9:case 10:case 12:case 13:case 34:case 92:\r\n result+=Escapes[charCode];\r\n break;\r\n default:\r\n if(charCode<32){\r\n result+=unicodePrefix+toPaddedString(2,charCode.toString(16));\r\n break;\r\n}\r\n result+=useCharIndex?symbols[index]:value.charAt(index);\r\n}\r\n}\r\n return result+'\"';\r\n};\r\n\r\n//Internal:Recursively serializes an object.Implements the\r\n//`Str(key,holder)`,`JO(value)`,and`JA(value)`operations.\r\n var serialize=function(property,object,callback,properties,whitespace,indentation,stack){\r\n var value,className,year,month,date,time,hours,minutes,seconds,milliseconds,results,element,index,length,prefix,result;\r\n try{\r\n//Necessary for host object support.\r\n value=object[property];\r\n}catch(exception){}\r\n if(typeof value==\"object\"&&value){\r\n className=getClass.call(value);\r\n if(className==dateClass&&!isProperty.call(value,\"toJSON\")){\r\n if(value>-1/0&&value<1/0){\r\n//Dates are serialized according to the`Date#toJSON`method\r\n//specified in ES 5.1 section 15.9.5.44.See section 15.9.1.15\r\n//for the ISO 8601 date time string format.\r\n if(getDay){\r\n//Manually compute the year,month,date,hours,minutes,\r\n//seconds,and milliseconds if the`getUTC*`methods are\r\n//buggy.Adapted from@Yaffle's`date-shim`project.\r\n date=floor(value/864e5);\r\n for(year=floor(date/365.2425)+1970-1;getDay(year+1,0)<=date;year++);\r\n for(month=floor((date-getDay(year,0))/30.42);getDay(year,month+1)<=date;month++);\r\n date=1+date-getDay(year,month);\r\n//The`time`value specifies the time within the day(see ES\r\n//5.1 section 15.9.1.2).The formula`(A%B+B)%B`is used\r\n//to compute`A modulo B`,as the`%`operator does not\r\n//correspond to the`modulo`operation for negative numbers.\r\n time=(value%864e5+864e5)%864e5;\r\n//The hours,minutes,seconds,and milliseconds are obtained by\r\n//decomposing the time within the day.See section 15.9.1.10.\r\n hours=floor(time/36e5)%24;\r\n minutes=floor(time/6e4)%60;\r\n seconds=floor(time/1e3)%60;\r\n milliseconds=time%1e3;\r\n}else{\r\n year=value.getUTCFullYear();\r\n month=value.getUTCMonth();\r\n date=value.getUTCDate();\r\n hours=value.getUTCHours();\r\n minutes=value.getUTCMinutes();\r\n seconds=value.getUTCSeconds();\r\n milliseconds=value.getUTCMilliseconds();\r\n}\r\n//Serialize extended years correctly.\r\n value=(year<=0||year>=1e4?(year<0?\"-\":\"+\")+toPaddedString(6,year<0?-year:year):toPaddedString(4,year))+\r\n\"-\"+toPaddedString(2,month+1)+\"-\"+toPaddedString(2,date)+\r\n//Months,dates,hours,minutes,and seconds should have two\r\n//digits;milliseconds should have three.\r\n\"T\"+toPaddedString(2,hours)+\":\"+toPaddedString(2,minutes)+\":\"+toPaddedString(2,seconds)+\r\n//Milliseconds are optional in ES 5.0,but required in 5.1.\r\n\".\"+toPaddedString(3,milliseconds)+\"Z\";\r\n}else{\r\n value=null;\r\n}\r\n}else if(typeof value.toJSON==\"function\"&&((className!=numberClass&&className!=stringClass&&className!=arrayClass)||isProperty.call(value,\"toJSON\"))){\r\n//Prototype<=1.6.1 adds non-standard`toJSON`methods to the\r\n//`Number`,`String`,`Date`,and`Array`prototypes.JSON 3\r\n//ignores all`toJSON`methods on these objects unless they are\r\n//defined directly on an instance.\r\n value=value.toJSON(property);\r\n}\r\n}\r\n if(callback){\r\n//If a replacement function was provided,call it to obtain the value\r\n//for serialization.\r\n value=callback.call(object,property,value);\r\n}\r\n if(value===null){\r\n return\"null\";\r\n}\r\n className=getClass.call(value);\r\n if(className==booleanClass){\r\n//Booleans are represented literally.\r\n return\"\"+value;\r\n}else if(className==numberClass){\r\n//JSON numbers must be finite.`Infinity`and`NaN`are serialized as\r\n//`\"null\"`.\r\n return value>-1/0&&value<1/0?\"\"+value:\"null\";\r\n}else if(className==stringClass){\r\n//Strings are double-quoted and escaped.\r\n return quote(\"\"+value);\r\n}\r\n//Recursively serialize objects and arrays.\r\n if(typeof value==\"object\"){\r\n//Check for cyclic structures.This is a linear search;performance\r\n//is inversely proportional to the number of unique nested objects.\r\n for(length=stack.length;length--;){\r\n if(stack[length]===value){\r\n//Cyclic structures cannot be serialized by`JSON.stringify`.\r\n throw TypeError();\r\n}\r\n}\r\n//Add the object to the stack of traversed objects.\r\n stack.push(value);\r\n results=[];\r\n//Save the current indentation level and indent one additional level.\r\n prefix=indentation;\r\n indentation+=whitespace;\r\n if(className==arrayClass){\r\n//Recursively serialize array elements.\r\n for(index=0,length=value.length;index<length;index++){\r\n element=serialize(index,value,callback,properties,whitespace,indentation,stack);\r\n results.push(element===undef?\"null\":element);\r\n}\r\n result=results.length?(whitespace?\"[\\n\"+indentation+results.join(\",\\n\"+indentation)+\"\\n\"+prefix+\"]\":(\"[\"+results.join(\",\")+\"]\")):\"[]\";\r\n}else{\r\n//Recursively serialize object members.Members are selected from\r\n//either a user-specified list of property names,or the object\r\n//itself.\r\n forEach(properties||value,function(property){\r\n var element=serialize(property,value,callback,properties,whitespace,indentation,stack);\r\n if(element!==undef){\r\n//According to ES 5.1 section 15.12.3:\"If`gap`{whitespace}\r\n//is not the empty string,let`member`{quote(property)+\":\"}\r\n//be the concatenation of`member`and the`space`character.\"\r\n//The\"`space`character\"refers to the literal space\r\n//character,not the`space`{width}argument provided to\r\n//`JSON.stringify`.\r\n results.push(quote(property)+\":\"+(whitespace?\"\":\"\")+element);\r\n}\r\n});\r\n result=results.length?(whitespace?\"{\\n\"+indentation+results.join(\",\\n\"+indentation)+\"\\n\"+prefix+\"}\":(\"{\"+results.join(\",\")+\"}\")):\"{}\";\r\n}\r\n//Remove the object from the traversed object stack.\r\n stack.pop();\r\n return result;\r\n}\r\n};\r\n\r\n//Public:`JSON.stringify`.See ES 5.1 section 15.12.3.\r\n exports.stringify=function(source,filter,width){\r\n var whitespace,callback,properties,className;\r\n if(objectTypes[typeof filter]&&filter){\r\n if((className=getClass.call(filter))==functionClass){\r\n callback=filter;\r\n}else if(className==arrayClass){\r\n//Convert the property names array into a makeshift set.\r\n properties={};\r\n for(var index=0,length=filter.length,value;index<length;value=filter[index++],((className=getClass.call(value)),className==stringClass||className==numberClass)&&(properties[value]=1));\r\n}\r\n}\r\n if(width){\r\n if((className=getClass.call(width))==numberClass){\r\n//Convert the`width`to an integer and create a string containing\r\n//`width`number of space characters.\r\n if((width-=width%1)>0){\r\n for(whitespace=\"\",width>10&&(width=10);whitespace.length<width;whitespace+=\"\");\r\n}\r\n}else if(className==stringClass){\r\n whitespace=width.length<=10?width:width.slice(0,10);\r\n}\r\n}\r\n//Opera<=7.54u2 discards the values associated with empty string keys\r\n//(`\"\"`)only if they are used directly within an object member list\r\n//(e.g.,`!(\"\"in{\"\":1})`).\r\n return serialize(\"\",(value={},value[\"\"]=source,value),callback,properties,whitespace,\"\",[]);\r\n};\r\n}\r\n\r\n//Public:Parses a JSON source string.\r\n if(!has(\"json-parse\")){\r\n var fromCharCode=String.fromCharCode;\r\n\r\n//Internal:A map of escaped control characters and their unescaped\r\n//equivalents.\r\n var Unescapes={\r\n 92:\"\\\\\",\r\n 34:'\"',\r\n 47:\"/\",\r\n 98:\"\\b\",\r\n 116:\"\\t\",\r\n 110:\"\\n\",\r\n 102:\"\\f\",\r\n 114:\"\\r\"\r\n};\r\n\r\n//Internal:Stores the parser state.\r\n var Index,Source;\r\n\r\n//Internal:Resets the parser state and throws a`SyntaxError`.\r\n var abort=function(){\r\n Index=Source=null;\r\n throw SyntaxError();\r\n};\r\n\r\n//Internal:Returns the next token,or`\"$\"`if the parser has reached\r\n//the end of the source string.A token may be a string,number,`null`\r\n//literal,or Boolean literal.\r\n var lex=function(){\r\n var source=Source,length=source.length,value,begin,position,isSigned,charCode;\r\n while(Index<length){\r\n charCode=source.charCodeAt(Index);\r\n switch(charCode){\r\n case 9:case 10:case 13:case 32:\r\n//Skip whitespace tokens,including tabs,carriage returns,line\r\n//feeds,and space characters.\r\n Index++;\r\n break;\r\n case 123:case 125:case 91:case 93:case 58:case 44:\r\n//Parse a punctuator token(`{`,`}`,`[`,`]`,`:`,or`,`)at\r\n//the current position.\r\n value=charIndexBuggy?source.charAt(Index):source[Index];\r\n Index++;\r\n return value;\r\n case 34:\r\n//`\"`delimits a JSON string;advance to the next character and\r\n//begin parsing the string.String tokens are prefixed with the\r\n//sentinel`@`character to distinguish them from punctuators and\r\n//end-of-string tokens.\r\n for(value=\"@\",Index++;Index<length;){\r\n charCode=source.charCodeAt(Index);\r\n if(charCode<32){\r\n//Unescaped ASCII control characters(those with a code unit\r\n//less than the space character)are not permitted.\r\n abort();\r\n}else if(charCode==92){\r\n//A reverse solidus(`\\`)marks the beginning of an escaped\r\n//control character(including`\"`,`\\`,and`/`)or Unicode\r\n//escape sequence.\r\n charCode=source.charCodeAt(++Index);\r\n switch(charCode){\r\n case 92:case 34:case 47:case 98:case 116:case 110:case 102:case 114:\r\n//Revive escaped control characters.\r\n value+=Unescapes[charCode];\r\n Index++;\r\n break;\r\n case 117:\r\n//`\\u`marks the beginning of a Unicode escape sequence.\r\n//Advance to the first character and validate the\r\n//four-digit code point.\r\n begin=++Index;\r\n for(position=Index+4;Index<position;Index++){\r\n charCode=source.charCodeAt(Index);\r\n//A valid sequence comprises four hexdigits(case-\r\n//insensitive)that form a single hexadecimal value.\r\n if(!(charCode>=48&&charCode<=57||charCode>=97&&charCode<=102||charCode>=65&&charCode<=70)){\r\n//Invalid Unicode escape sequence.\r\n abort();\r\n}\r\n}\r\n//Revive the escaped character.\r\n value+=fromCharCode(\"0x\"+source.slice(begin,Index));\r\n break;\r\n default:\r\n//Invalid escape sequence.\r\n abort();\r\n}\r\n}else{\r\n if(charCode==34){\r\n//An unescaped double-quote character marks the end of the\r\n//string.\r\n break;\r\n}\r\n charCode=source.charCodeAt(Index);\r\n begin=Index;\r\n//Optimize for the common case where a string is valid.\r\n while(charCode>=32&&charCode!=92&&charCode!=34){\r\n charCode=source.charCodeAt(++Index);\r\n}\r\n//Append the string as-is.\r\n value+=source.slice(begin,Index);\r\n}\r\n}\r\n if(source.charCodeAt(Index)==34){\r\n//Advance to the next character and return the revived string.\r\n Index++;\r\n return value;\r\n}\r\n//Unterminated string.\r\n abort();\r\n default:\r\n//Parse numbers and literals.\r\n begin=Index;\r\n//Advance past the negative sign,if one is specified.\r\n if(charCode==45){\r\n isSigned=true;\r\n charCode=source.charCodeAt(++Index);\r\n}\r\n//Parse an integer or floating-point value.\r\n if(charCode>=48&&charCode<=57){\r\n//Leading zeroes are interpreted as octal literals.\r\n if(charCode==48&&((charCode=source.charCodeAt(Index+1)),charCode>=48&&charCode<=57)){\r\n//Illegal octal literal.\r\n abort();\r\n}\r\n isSigned=false;\r\n//Parse the integer component.\r\n for(;Index<length&&((charCode=source.charCodeAt(Index)),charCode>=48&&charCode<=57);Index++);\r\n//Floats cannot contain a leading decimal point;however,this\r\n//case is already accounted for by the parser.\r\n if(source.charCodeAt(Index)==46){\r\n position=++Index;\r\n//Parse the decimal component.\r\n for(;position<length&&((charCode=source.charCodeAt(position)),charCode>=48&&charCode<=57);position++);\r\n if(position==Index){\r\n//Illegal trailing decimal.\r\n abort();\r\n}\r\n Index=position;\r\n}\r\n//Parse exponents.The`e`denoting the exponent is\r\n//case-insensitive.\r\n charCode=source.charCodeAt(Index);\r\n if(charCode==101||charCode==69){\r\n charCode=source.charCodeAt(++Index);\r\n//Skip past the sign following the exponent,if one is\r\n//specified.\r\n if(charCode==43||charCode==45){\r\n Index++;\r\n}\r\n//Parse the exponential component.\r\n for(position=Index;position<length&&((charCode=source.charCodeAt(position)),charCode>=48&&charCode<=57);position++);\r\n if(position==Index){\r\n//Illegal empty exponent.\r\n abort();\r\n}\r\n Index=position;\r\n}\r\n//Coerce the parsed value to a JavaScript number.\r\n return+source.slice(begin,Index);\r\n}\r\n//A negative sign may only precede numbers.\r\n if(isSigned){\r\n abort();\r\n}\r\n//`true`,`false`,and`null`literals.\r\n if(source.slice(Index,Index+4)==\"true\"){\r\n Index+=4;\r\n return true;\r\n}else if(source.slice(Index,Index+5)==\"false\"){\r\n Index+=5;\r\n return false;\r\n}else if(source.slice(Index,Index+4)==\"null\"){\r\n Index+=4;\r\n return null;\r\n}\r\n//Unrecognized token.\r\n abort();\r\n}\r\n}\r\n//Return the sentinel`$`character if the parser has reached the end\r\n//of the source string.\r\n return\"$\";\r\n};\r\n\r\n//Internal:Parses a JSON`value`token.\r\n var get=function(value){\r\n var results,hasMembers;\r\n if(value==\"$\"){\r\n//Unexpected end of input.\r\n abort();\r\n}\r\n if(typeof value==\"string\"){\r\n if((charIndexBuggy?value.charAt(0):value[0])==\"@\"){\r\n//Remove the sentinel`@`character.\r\n return value.slice(1);\r\n}\r\n//Parse object and array literals.\r\n if(value==\"[\"){\r\n//Parses a JSON array,returning a new JavaScript array.\r\n results=[];\r\n for(;;hasMembers||(hasMembers=true)){\r\n value=lex();\r\n//A closing square bracket marks the end of the array literal.\r\n if(value==\"]\"){\r\n break;\r\n}\r\n//If the array literal contains elements,the current token\r\n//should be a comma separating the previous element from the\r\n//next.\r\n if(hasMembers){\r\n if(value==\",\"){\r\n value=lex();\r\n if(value==\"]\"){\r\n//Unexpected trailing`,`in array literal.\r\n abort();\r\n}\r\n}else{\r\n//A`,`must separate each array element.\r\n abort();\r\n}\r\n}\r\n//Elisions and leading commas are not permitted.\r\n if(value==\",\"){\r\n abort();\r\n}\r\n results.push(get(value));\r\n}\r\n return results;\r\n}else if(value==\"{\"){\r\n//Parses a JSON object,returning a new JavaScript object.\r\n results={};\r\n for(;;hasMembers||(hasMembers=true)){\r\n value=lex();\r\n//A closing curly brace marks the end of the object literal.\r\n if(value==\"}\"){\r\n break;\r\n}\r\n//If the object literal contains members,the current token\r\n//should be a comma separator.\r\n if(hasMembers){\r\n if(value==\",\"){\r\n value=lex();\r\n if(value==\"}\"){\r\n//Unexpected trailing`,`in object literal.\r\n abort();\r\n}\r\n}else{\r\n//A`,`must separate each object member.\r\n abort();\r\n}\r\n}\r\n//Leading commas are not permitted,object property names must be\r\n//double-quoted strings,and a`:`must separate each property\r\n//name and value.\r\n if(value==\",\"||typeof value!=\"string\"||(charIndexBuggy?value.charAt(0):value[0])!=\"@\"||lex()!=\":\"){\r\n abort();\r\n}\r\n results[value.slice(1)]=get(lex());\r\n}\r\n return results;\r\n}\r\n//Unexpected token encountered.\r\n abort();\r\n}\r\n return value;\r\n};\r\n\r\n//Internal:Updates a traversed object member.\r\n var update=function(source,property,callback){\r\n var element=walk(source,property,callback);\r\n if(element===undef){\r\n delete source[property];\r\n}else{\r\n source[property]=element;\r\n}\r\n};\r\n\r\n//Internal:Recursively traverses a parsed JSON object,invoking the\r\n//`callback`function for each value.This is an implementation of the\r\n//`Walk(holder,name)`operation defined in ES 5.1 section 15.12.2.\r\n var walk=function(source,property,callback){\r\n var value=source[property],length;\r\n if(typeof value==\"object\"&&value){\r\n//`forEach`can't be used to traverse an array in Opera<=8.54\r\n//because its`Object#hasOwnProperty`implementation returns`false`\r\n//for array indices(e.g.,`![1,2,3].hasOwnProperty(\"0\")`).\r\n if(getClass.call(value)==arrayClass){\r\n for(length=value.length;length--;){\r\n update(value,length,callback);\r\n}\r\n}else{\r\n forEach(value,function(property){\r\n update(value,property,callback);\r\n});\r\n}\r\n}\r\n return callback.call(source,property,value);\r\n};\r\n\r\n//Public:`JSON.parse`.See ES 5.1 section 15.12.2.\r\n exports.parse=function(source,callback){\r\n var result,value;\r\n Index=0;\r\n Source=\"\"+source;\r\n result=get(lex());\r\n//If a JSON string contains multiple tokens,it is invalid.\r\n if(lex()!=\"$\"){\r\n abort();\r\n}\r\n//Reset the parser state.\r\n Index=Source=null;\r\n return callback&&getClass.call(callback)==functionClass?walk((value={},value[\"\"]=result,value),\"\",callback):result;\r\n};\r\n}\r\n}\r\n\r\n exports[\"runInContext\"]=runInContext;\r\n return exports;\r\n}\r\n\r\n if(freeExports&&!isLoader){\r\n//Export for CommonJS environments.\r\n runInContext(root,freeExports);\r\n}else{\r\n//Export for web browsers and JavaScript engines.\r\n var nativeJSON=root.JSON,\r\n previousJSON=root[\"JSON3\"],\r\n isRestored=false;\r\n\r\n var JSON3=runInContext(root,(root[\"JSON3\"]={\r\n//Public:Restores the original value of the global`JSON`object and\r\n//returns a reference to the`JSON3`object.\r\n\"noConflict\":function(){\r\n if(!isRestored){\r\n isRestored=true;\r\n root.JSON=nativeJSON;\r\n root[\"JSON3\"]=previousJSON;\r\n nativeJSON=previousJSON=null;\r\n}\r\n return JSON3;\r\n}\r\n}));\r\n\r\n root.JSON={\r\n\"parse\":JSON3.parse,\r\n\"stringify\":JSON3.stringify\r\n};\r\n}\r\n\r\n//Export for asynchronous module loaders.\r\n if(isLoader){\r\n define(function(){\r\n return JSON3;\r\n});\r\n}\r\n}).call(this);\r\n\r\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{}],59:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar has=Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n*Decode a URI encoded string.\r\n*\r\n*@param{String}input The URI encoded string.\r\n*@returns{String}The decoded string.\r\n*@api private\r\n*/\r\nfunction decode(input){\r\n return decodeURIComponent(input.replace(/\\+/g,''));\r\n}\r\n\r\n/**\r\n*Simple query string parser.\r\n*\r\n*@param{String}query The query string that needs to be parsed.\r\n*@returns{Object}\r\n*@api public\r\n*/\r\nfunction querystring(query){\r\n var parser=/([^=?&]+)=?([^&]*)/g\r\n,result={}\r\n,part;\r\n\r\n while(part=parser.exec(query)){\r\n var key=decode(part[1])\r\n,value=decode(part[2]);\r\n\r\n//\r\n//Prevent overriding of existing properties.This ensures that build-in\r\n//methods like`toString`or __proto__ are not overriden by malicious\r\n//querystrings.\r\n//\r\n if(key in result)continue;\r\n result[key]=value;\r\n}\r\n\r\n return result;\r\n}\r\n\r\n/**\r\n*Transform a query string to an object.\r\n*\r\n*@param{Object}obj Object that should be transformed.\r\n*@param{String}prefix Optional prefix.\r\n*@returns{String}\r\n*@api public\r\n*/\r\nfunction querystringify(obj,prefix){\r\n prefix=prefix||'';\r\n\r\n var pairs=[];\r\n\r\n//\r\n//Optionally prefix with a'?'if needed\r\n//\r\n if('string'!==typeof prefix)prefix='?';\r\n\r\n for(var key in obj){\r\n if(has.call(obj,key)){\r\n pairs.push(encodeURIComponent(key)+'='+encodeURIComponent(obj[key]));\r\n}\r\n}\r\n\r\n return pairs.length?prefix+pairs.join('&'):'';\r\n}\r\n\r\n//\r\n//Expose the module.\r\n//\r\nexports.stringify=querystringify;\r\nexports.parse=querystring;\r\n\r\n},{}],60:[function(require,module,exports){\r\n'use strict';\r\n\r\n/**\r\n*Check if we're required to add a port number.\r\n*\r\n*@see https://url.spec.whatwg.org/#default-port\r\n*@param{Number|String}port Port number we need to check\r\n*@param{String}protocol Protocol we need to check against.\r\n*@returns{Boolean}Is it a default port for the given protocol\r\n*@api private\r\n*/\r\nmodule.exports=function required(port,protocol){\r\n protocol=protocol.split(':')[0];\r\n port=+port;\r\n\r\n if(!port)return false;\r\n\r\n switch(protocol){\r\n case'http':\r\n case'ws':\r\n return port!==80;\r\n\r\n case'https':\r\n case'wss':\r\n return port!==443;\r\n\r\n case'ftp':\r\n return port!==21;\r\n\r\n case'gopher':\r\n return port!==70;\r\n\r\n case'file':\r\n return false;\r\n}\r\n\r\n return port!==0;\r\n};\r\n\r\n},{}],61:[function(require,module,exports){\r\n(function(global){\r\n'use strict';\r\n\r\nvar required=require('requires-port')\r\n,qs=require('querystringify')\r\n,protocolre=/^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\r\n,slashes=/^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\r\n\r\n/**\r\n*These are the parse rules for the URL parser,it informs the parser\r\n*about:\r\n*\r\n*0.The char it Needs to parse,if it's a string it should be done using\r\n*indexOf,RegExp using exec and NaN means set as current value.\r\n*1.The property we should set when parsing this value.\r\n*2.Indication if it's backwards or forward parsing,when set as number it's\r\n*the value of extra chars that should be split off.\r\n*3.Inherit from location if non existing in the parser.\r\n*4.`toLowerCase`the resulting value.\r\n*/\r\nvar rules=[\r\n['#','hash'],//Extract from the back.\r\n['?','query'],//Extract from the back.\r\n function sanitize(address){//Sanitize what is left of the address\r\n return address.replace('\\\\','/');\r\n},\r\n['/','pathname'],//Extract from the back.\r\n['@','auth',1],//Extract from the front.\r\n[NaN,'host',undefined,1,1],//Set left over value.\r\n[/:(\\d+)$/,'port',undefined,1],//RegExp the back.\r\n[NaN,'hostname',undefined,1,1]//Set left over.\r\n];\r\n\r\n/**\r\n*These properties should not be copied or inherited from.This is only needed\r\n*for all non blob URL's as a blob URL does not include a hash,only the\r\n*origin.\r\n*\r\n*@type{Object}\r\n*@private\r\n*/\r\nvar ignore={hash:1,query:1};\r\n\r\n/**\r\n*The location object differs when your code is loaded through a normal page,\r\n*Worker or through a worker using a blob.And with the blobble begins the\r\n*trouble as the location object will contain the URL of the blob,not the\r\n*location of the page where our code is loaded in.The actual origin is\r\n*encoded in the`pathname`so we can thankfully generate a good\"default\"\r\n*location from it so we can generate proper relative URL's again.\r\n*\r\n*@param{Object|String}loc Optional default location object.\r\n*@returns{Object}lolcation object.\r\n*@public\r\n*/\r\nfunction lolcation(loc){\r\n var location=global&&global.location||{};\r\n loc=loc||location;\r\n\r\n var finaldestination={}\r\n,type=typeof loc\r\n,key;\r\n\r\n if('blob:'===loc.protocol){\r\n finaldestination=new Url(unescape(loc.pathname),{});\r\n}else if('string'===type){\r\n finaldestination=new Url(loc,{});\r\n for(key in ignore)delete finaldestination[key];\r\n}else if('object'===type){\r\n for(key in loc){\r\n if(key in ignore)continue;\r\n finaldestination[key]=loc[key];\r\n}\r\n\r\n if(finaldestination.slashes===undefined){\r\n finaldestination.slashes=slashes.test(loc.href);\r\n}\r\n}\r\n\r\n return finaldestination;\r\n}\r\n\r\n/**\r\n*@typedef ProtocolExtract\r\n*@type Object\r\n*@property{String}protocol Protocol matched in the URL,in lowercase.\r\n*@property{Boolean}slashes`true`if protocol is followed by\"//\",else`false`.\r\n*@property{String}rest Rest of the URL that is not part of the protocol.\r\n*/\r\n\r\n/**\r\n*Extract protocol information from a URL with/without double slash(\"//\").\r\n*\r\n*@param{String}address URL we want to extract from.\r\n*@return{ProtocolExtract}Extracted information.\r\n*@private\r\n*/\r\nfunction extractProtocol(address){\r\n var match=protocolre.exec(address);\r\n\r\n return{\r\n protocol:match[1]?match[1].toLowerCase():'',\r\n slashes:!!match[2],\r\n rest:match[3]\r\n};\r\n}\r\n\r\n/**\r\n*Resolve a relative URL pathname against a base URL pathname.\r\n*\r\n*@param{String}relative Pathname of the relative URL.\r\n*@param{String}base Pathname of the base URL.\r\n*@return{String}Resolved pathname.\r\n*@private\r\n*/\r\nfunction resolve(relative,base){\r\n var path=(base||'/').split('/').slice(0,-1).concat(relative.split('/'))\r\n,i=path.length\r\n,last=path[i-1]\r\n,unshift=false\r\n,up=0;\r\n\r\n while(i--){\r\n if(path[i]==='.'){\r\n path.splice(i,1);\r\n}else if(path[i]==='..'){\r\n path.splice(i,1);\r\n up++;\r\n}else if(up){\r\n if(i===0)unshift=true;\r\n path.splice(i,1);\r\n up--;\r\n}\r\n}\r\n\r\n if(unshift)path.unshift('');\r\n if(last==='.'||last==='..')path.push('');\r\n\r\n return path.join('/');\r\n}\r\n\r\n/**\r\n*The actual URL instance.Instead of returning an object we've opted-in to\r\n*create an actual constructor as it's much more memory efficient and\r\n*faster and it pleases my OCD.\r\n*\r\n*It is worth noting that we should not use`URL`as class name to prevent\r\n*clashes with the global URL instance that got introduced in browsers.\r\n*\r\n*@constructor\r\n*@param{String}address URL we want to parse.\r\n*@param{Object|String}location Location defaults for relative paths.\r\n*@param{Boolean|Function}parser Parser for the query string.\r\n*@private\r\n*/\r\nfunction Url(address,location,parser){\r\n if(!(this instanceof Url)){\r\n return new Url(address,location,parser);\r\n}\r\n\r\n var relative,extracted,parse,instruction,index,key\r\n,instructions=rules.slice()\r\n,type=typeof location\r\n,url=this\r\n,i=0;\r\n\r\n//\r\n//The following if statements allows this module two have compatibility with\r\n//2 different API:\r\n//\r\n//1.Node.js's`url.parse`api which accepts a URL,boolean as arguments\r\n//where the boolean indicates that the query string should also be parsed.\r\n//\r\n//2.The`URL`interface of the browser which accepts a URL,object as\r\n//arguments.The supplied object will be used as default values/fall-back\r\n//for relative paths.\r\n//\r\n if('object'!==type&&'string'!==type){\r\n parser=location;\r\n location=null;\r\n}\r\n\r\n if(parser&&'function'!==typeof parser)parser=qs.parse;\r\n\r\n location=lolcation(location);\r\n\r\n//\r\n//Extract protocol information before running the instructions.\r\n//\r\n extracted=extractProtocol(address||'');\r\n relative=!extracted.protocol&&!extracted.slashes;\r\n url.slashes=extracted.slashes||relative&&location.slashes;\r\n url.protocol=extracted.protocol||location.protocol||'';\r\n address=extracted.rest;\r\n\r\n//\r\n//When the authority component is absent the URL starts with a path\r\n//component.\r\n//\r\n if(!extracted.slashes)instructions[3]=[/(.*)/,'pathname'];\r\n\r\n for(;i<instructions.length;i++){\r\n instruction=instructions[i];\r\n\r\n if(typeof instruction==='function'){\r\n address=instruction(address);\r\n continue;\r\n}\r\n\r\n parse=instruction[0];\r\n key=instruction[1];\r\n\r\n if(parse!==parse){\r\n url[key]=address;\r\n}else if('string'===typeof parse){\r\n if(~(index=address.indexOf(parse))){\r\n if('number'===typeof instruction[2]){\r\n url[key]=address.slice(0,index);\r\n address=address.slice(index+instruction[2]);\r\n}else{\r\n url[key]=address.slice(index);\r\n address=address.slice(0,index);\r\n}\r\n}\r\n}else if((index=parse.exec(address))){\r\n url[key]=index[1];\r\n address=address.slice(0,index.index);\r\n}\r\n\r\n url[key]=url[key]||(\r\n relative&&instruction[3]?location[key]||'':''\r\n);\r\n\r\n//\r\n//Hostname,host and protocol should be lowercased so they can be used to\r\n//create a proper`origin`.\r\n//\r\n if(instruction[4])url[key]=url[key].toLowerCase();\r\n}\r\n\r\n//\r\n//Also parse the supplied query string in to an object.If we're supplied\r\n//with a custom parser as function use that instead of the default build-in\r\n//parser.\r\n//\r\n if(parser)url.query=parser(url.query);\r\n\r\n//\r\n//If the URL is relative,resolve the pathname against the base URL.\r\n//\r\n if(\r\n relative\r\n&&location.slashes\r\n&&url.pathname.charAt(0)!=='/'\r\n&&(url.pathname!==''||location.pathname!=='')\r\n){\r\n url.pathname=resolve(url.pathname,location.pathname);\r\n}\r\n\r\n//\r\n//We should not add port numbers if they are already the default port number\r\n//for a given protocol.As the host also contains the port number we're going\r\n//override it with the hostname which contains no port number.\r\n//\r\n if(!required(url.port,url.protocol)){\r\n url.host=url.hostname;\r\n url.port='';\r\n}\r\n\r\n//\r\n//Parse down the`auth`for the username and password.\r\n//\r\n url.username=url.password='';\r\n if(url.auth){\r\n instruction=url.auth.split(':');\r\n url.username=instruction[0]||'';\r\n url.password=instruction[1]||'';\r\n}\r\n\r\n url.origin=url.protocol&&url.host&&url.protocol!=='file:'\r\n?url.protocol+'//'+url.host\r\n:'null';\r\n\r\n//\r\n//The href is just the compiled result.\r\n//\r\n url.href=url.toString();\r\n}\r\n\r\n/**\r\n*This is convenience method for changing properties in the URL instance to\r\n*insure that they all propagate correctly.\r\n*\r\n*@param{String}part Property we need to adjust.\r\n*@param{Mixed}value The newly assigned value.\r\n*@param{Boolean|Function}fn When setting the query,it will be the function\r\n*used to parse the query.\r\n*When setting the protocol,double slash will be\r\n*removed from the final url if it is true.\r\n*@returns{URL}URL instance for chaining.\r\n*@public\r\n*/\r\nfunction set(part,value,fn){\r\n var url=this;\r\n\r\n switch(part){\r\n case'query':\r\n if('string'===typeof value&&value.length){\r\n value=(fn||qs.parse)(value);\r\n}\r\n\r\n url[part]=value;\r\n break;\r\n\r\n case'port':\r\n url[part]=value;\r\n\r\n if(!required(value,url.protocol)){\r\n url.host=url.hostname;\r\n url[part]='';\r\n}else if(value){\r\n url.host=url.hostname+':'+value;\r\n}\r\n\r\n break;\r\n\r\n case'hostname':\r\n url[part]=value;\r\n\r\n if(url.port)value+=':'+url.port;\r\n url.host=value;\r\n break;\r\n\r\n case'host':\r\n url[part]=value;\r\n\r\n if(/:\\d+$/.test(value)){\r\n value=value.split(':');\r\n url.port=value.pop();\r\n url.hostname=value.join(':');\r\n}else{\r\n url.hostname=value;\r\n url.port='';\r\n}\r\n\r\n break;\r\n\r\n case'protocol':\r\n url.protocol=value.toLowerCase();\r\n url.slashes=!fn;\r\n break;\r\n\r\n case'pathname':\r\n case'hash':\r\n if(value){\r\n var char=part==='pathname'?'/':'#';\r\n url[part]=value.charAt(0)!==char?char+value:value;\r\n}else{\r\n url[part]=value;\r\n}\r\n break;\r\n\r\n default:\r\n url[part]=value;\r\n}\r\n\r\n for(var i=0;i<rules.length;i++){\r\n var ins=rules[i];\r\n\r\n if(ins[4])url[ins[1]]=url[ins[1]].toLowerCase();\r\n}\r\n\r\n url.origin=url.protocol&&url.host&&url.protocol!=='file:'\r\n?url.protocol+'//'+url.host\r\n:'null';\r\n\r\n url.href=url.toString();\r\n\r\n return url;\r\n}\r\n\r\n/**\r\n*Transform the properties back in to a valid and full URL string.\r\n*\r\n*@param{Function}stringify Optional query stringify function.\r\n*@returns{String}Compiled version of the URL.\r\n*@public\r\n*/\r\nfunction toString(stringify){\r\n if(!stringify||'function'!==typeof stringify)stringify=qs.stringify;\r\n\r\n var query\r\n,url=this\r\n,protocol=url.protocol;\r\n\r\n if(protocol&&protocol.charAt(protocol.length-1)!==':')protocol+=':';\r\n\r\n var result=protocol+(url.slashes?'//':'');\r\n\r\n if(url.username){\r\n result+=url.username;\r\n if(url.password)result+=':'+url.password;\r\n result+='@';\r\n}\r\n\r\n result+=url.host+url.pathname;\r\n\r\n query='object'===typeof url.query?stringify(url.query):url.query;\r\n if(query)result+='?'!==query.charAt(0)?'?'+query:query;\r\n\r\n if(url.hash)result+=url.hash;\r\n\r\n return result;\r\n}\r\n\r\nUrl.prototype={set:set,toString:toString};\r\n\r\n//\r\n//Expose the URL parser and some additional properties that might be useful for\r\n//others or testing.\r\n//\r\nUrl.extractProtocol=extractProtocol;\r\nUrl.location=lolcation;\r\nUrl.qs=qs;\r\n\r\nmodule.exports=Url;\r\n\r\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})\r\n\r\n},{\"querystringify\":59,\"requires-port\":60}]},{},[1])(1)\r\n});\r\n\r\n\r\n//#sourceMappingURL=sockjs.js.map\r\n\n/*WEBPACK VAR INJECTION*/}.call(this,__webpack_require__(/*!./../../webpack/buildin/global.js*/\"./node_modules/webpack/buildin/global.js\")))//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,\n//#sourceURL=webpack-internal:///./node_modules/sockjs-client/dist/sockjs.js\n");/***/}),/***/"./node_modules/strip-ansi/index.js":/*!******************************************!*\;!***./node_modules/strip-ansi/index.js***!;\******************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){"use strict";eval("\r\nvar ansiRegex=__webpack_require__(/*!ansi-regex*/\"./node_modules/ansi-regex/index.js\")();\r\n\r\nmodule.exports=function(str){\r\n\treturn typeof str==='string'?str.replace(ansiRegex,''):str;\r\n};\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyaXAtYW5zaS9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHJpcC1hbnNpL2luZGV4LmpzPzc2NzEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG52YXIgYW5zaVJlZ2V4ID0gcmVxdWlyZSgnYW5zaS1yZWdleCcpKCk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzdHIpIHtcclxuXHRyZXR1cm4gdHlwZW9mIHN0ciA9PT0gJ3N0cmluZycgPyBzdHIucmVwbGFjZShhbnNpUmVnZXgsICcnKSA6IHN0cjtcclxufTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//#sourceURL=webpack-internal:///./node_modules/strip-ansi/index.js\n");/***/}),/***/"./node_modules/url/url.js":/*!*********************************!*\;!***./node_modules/url/url.js***!;\*********************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){"use strict";eval("//Copyright Joyent,Inc.and other Node contributors.\r\n//\r\n//Permission is hereby granted,free of charge,to any person obtaining a\r\n//copy of this software and associated documentation files(the\r\n//\"Software\"),to deal in the Software without restriction,including\r\n//without limitation the rights to use,copy,modify,merge,publish,\r\n//distribute,sublicense,and/or sell copies of the Software,and to permit\r\n//persons to whom the Software is furnished to do so,subject to the\r\n//following conditions:\r\n//\r\n//The above copyright notice and this permission notice shall be included\r\n//in all copies or substantial portions of the Software.\r\n//\r\n//THE SOFTWARE IS PROVIDED\"AS IS\",WITHOUT WARRANTY OF ANY KIND,EXPRESS\r\n//OR IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n//MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN\r\n//NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n//DAMAGES OR OTHER LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR\r\n//OTHERWISE,ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n//USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n\r\n\r\nvar punycode=__webpack_require__(/*!punycode*/\"./node_modules/node-libs-browser/node_modules/punycode/punycode.js\");\r\nvar util=__webpack_require__(/*!./util*/\"./node_modules/url/util.js\");\r\n\r\nexports.parse=urlParse;\r\nexports.resolve=urlResolve;\r\nexports.resolveObject=urlResolveObject;\r\nexports.format=urlFormat;\r\n\r\nexports.Url=Url;\r\n\r\nfunction Url(){\r\n this.protocol=null;\r\n this.slashes=null;\r\n this.auth=null;\r\n this.host=null;\r\n this.port=null;\r\n this.hostname=null;\r\n this.hash=null;\r\n this.search=null;\r\n this.query=null;\r\n this.pathname=null;\r\n this.path=null;\r\n this.href=null;\r\n}\r\n\r\n//Reference:RFC 3986,RFC 1808,RFC 2396\r\n\r\n//define these here so at least they only have to be\r\n//compiled once on the first module load.\r\nvar protocolPattern=/^([a-z0-9.+-]+:)/i,\r\n portPattern=/:[0-9]*$/,\r\n\r\n//Special case for a simple path URL\r\n simplePathPattern=/^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\r\n\r\n//RFC 2396:characters reserved for delimiting URLs.\r\n//We actually just auto-escape these.\r\n delims=['<','>','\"','`','','\\r','\\n','\\t'],\r\n\r\n//RFC 2396:characters not allowed for various reasons.\r\n unwise=['{','}','|','\\\\','^','`'].concat(delims),\r\n\r\n//Allowed by RFCs,but cause of XSS attacks.Always escape these.\r\n autoEscape=['\\''].concat(unwise),\r\n//Characters that are never ever allowed in a hostname.\r\n//Note that any invalid chars are also handled,but these\r\n//are the ones that are*expected*to be seen,so we fast-path\r\n//them.\r\n nonHostChars=['%','/','?',';','#'].concat(autoEscape),\r\n hostEndingChars=['/','?','#'],\r\n hostnameMaxLen=255,\r\n hostnamePartPattern=/^[+a-z0-9A-Z_-]{0,63}$/,\r\n hostnamePartStart=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,\r\n//protocols that can allow\"unsafe\"and\"unwise\"chars.\r\n unsafeProtocol={\r\n'javascript':true,\r\n'javascript:':true\r\n},\r\n//protocols that never have a hostname.\r\n hostlessProtocol={\r\n'javascript':true,\r\n'javascript:':true\r\n},\r\n//protocols that always contain a//bit.\r\n slashedProtocol={\r\n'http':true,\r\n'https':true,\r\n'ftp':true,\r\n'gopher':true,\r\n'file':true,\r\n'http:':true,\r\n'https:':true,\r\n'ftp:':true,\r\n'gopher:':true,\r\n'file:':true\r\n},\r\n querystring=__webpack_require__(/*!querystring*/\"./node_modules/querystring-es3/index.js\");\r\n\r\nfunction urlParse(url,parseQueryString,slashesDenoteHost){\r\n if(url&&util.isObject(url)&&url instanceof Url)return url;\r\n\r\n var u=new Url;\r\n u.parse(url,parseQueryString,slashesDenoteHost);\r\n return u;\r\n}\r\n\r\nUrl.prototype.parse=function(url,parseQueryString,slashesDenoteHost){\r\n if(!util.isString(url)){\r\n throw new TypeError(\"Parameter'url'must be a string,not\"+typeof url);\r\n}\r\n\r\n//Copy chrome,IE,opera backslash-handling behavior.\r\n//Back slashes before the query string get converted to forward slashes\r\n//See:https://code.google.com/p/chromium/issues/detail?id=25916\r\n var queryIndex=url.indexOf('?'),\r\n splitter=\r\n(queryIndex!==-1&&queryIndex<url.indexOf('#'))?'?':'#',\r\n uSplit=url.split(splitter),\r\n slashRegex=/\\\\/g;\r\n uSplit[0]=uSplit[0].replace(slashRegex,'/');\r\n url=uSplit.join(splitter);\r\n\r\n var rest=url;\r\n\r\n//trim before proceeding.\r\n//This is to support parse stuff like\"http://foo.com\\n\"\r\n rest=rest.trim();\r\n\r\n if(!slashesDenoteHost&&url.split('#').length===1){\r\n//Try fast path regexp\r\n var simplePath=simplePathPattern.exec(rest);\r\n if(simplePath){\r\n this.path=rest;\r\n this.href=rest;\r\n this.pathname=simplePath[1];\r\n if(simplePath[2]){\r\n this.search=simplePath[2];\r\n if(parseQueryString){\r\n this.query=querystring.parse(this.search.substr(1));\r\n}else{\r\n this.query=this.search.substr(1);\r\n}\r\n}else if(parseQueryString){\r\n this.search='';\r\n this.query={};\r\n}\r\n return this;\r\n}\r\n}\r\n\r\n var proto=protocolPattern.exec(rest);\r\n if(proto){\r\n proto=proto[0];\r\n var lowerProto=proto.toLowerCase();\r\n this.protocol=lowerProto;\r\n rest=rest.substr(proto.length);\r\n}\r\n\r\n//figure out if it's got a host\r\n//user@server is*always*interpreted as a hostname,and url\r\n//resolution will treat//foo/bar as host=foo,path=bar because that's\r\n//how the browser resolves relative URLs.\r\n if(slashesDenoteHost||proto||rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)){\r\n var slashes=rest.substr(0,2)==='//';\r\n if(slashes&&!(proto&&hostlessProtocol[proto])){\r\n rest=rest.substr(2);\r\n this.slashes=true;\r\n}\r\n}\r\n\r\n if(!hostlessProtocol[proto]&&\r\n(slashes||(proto&&!slashedProtocol[proto]))){\r\n\r\n//there's a hostname.\r\n//the first instance of/,?,;,or#ends the host.\r\n//\r\n//If there is an@in the hostname,then non-host chars*are*allowed\r\n//to the left of the last@sign,unless some host-ending character\r\n//comes*before*the@-sign.\r\n//URLs are obnoxious.\r\n//\r\n//ex:\r\n//http://a@b@c/=>user:a@b host:c\r\n//http://a@b?@c=>user:a host:c path:/?@c\r\n\r\n//v0.12 TODO(isaacs):This is not quite how Chrome does things.\r\n//Review our test case against browsers more comprehensively.\r\n\r\n//find the first instance of any hostEndingChars\r\n var hostEnd=-1;\r\n for(var i=0;i<hostEndingChars.length;i++){\r\n var hec=rest.indexOf(hostEndingChars[i]);\r\n if(hec!==-1&&(hostEnd===-1||hec<hostEnd))\r\n hostEnd=hec;\r\n}\r\n\r\n//at this point,either we have an explicit point where the\r\n//auth portion cannot go past,or the last@char is the decider.\r\n var auth,atSign;\r\n if(hostEnd===-1){\r\n//atSign can be anywhere.\r\n atSign=rest.lastIndexOf('@');\r\n}else{\r\n//atSign must be in auth portion.\r\n//http://a@b/c@d=>host:b auth:a path:/c@d\r\n atSign=rest.lastIndexOf('@',hostEnd);\r\n}\r\n\r\n//Now we have a portion which is definitely the auth.\r\n//Pull that off.\r\n if(atSign!==-1){\r\n auth=rest.slice(0,atSign);\r\n rest=rest.slice(atSign+1);\r\n this.auth=decodeURIComponent(auth);\r\n}\r\n\r\n//the host is the remaining to the left of the first non-host char\r\n hostEnd=-1;\r\n for(var i=0;i<nonHostChars.length;i++){\r\n var hec=rest.indexOf(nonHostChars[i]);\r\n if(hec!==-1&&(hostEnd===-1||hec<hostEnd))\r\n hostEnd=hec;\r\n}\r\n//if we still have not hit it,then the entire thing is a host.\r\n if(hostEnd===-1)\r\n hostEnd=rest.length;\r\n\r\n this.host=rest.slice(0,hostEnd);\r\n rest=rest.slice(hostEnd);\r\n\r\n//pull out port.\r\n this.parseHost();\r\n\r\n//we've indicated that there is a hostname,\r\n//so even if it's empty,it has to be present.\r\n this.hostname=this.hostname||'';\r\n\r\n//if hostname begins with[and ends with]\r\n//assume that it's an IPv6 address.\r\n var ipv6Hostname=this.hostname[0]==='['&&\r\n this.hostname[this.hostname.length-1]===']';\r\n\r\n//validate a little.\r\n if(!ipv6Hostname){\r\n var hostparts=this.hostname.split(/\\./);\r\n for(var i=0,l=hostparts.length;i<l;i++){\r\n var part=hostparts[i];\r\n if(!part)continue;\r\n if(!part.match(hostnamePartPattern)){\r\n var newpart='';\r\n for(var j=0,k=part.length;j<k;j++){\r\n if(part.charCodeAt(j)>127){\r\n//we replace non-ASCII char with a temporary placeholder\r\n//we need this to make sure size of hostname is not\r\n//broken by replacing non-ASCII by nothing\r\n newpart+='x';\r\n}else{\r\n newpart+=part[j];\r\n}\r\n}\r\n//we test again with ASCII char only\r\n if(!newpart.match(hostnamePartPattern)){\r\n var validParts=hostparts.slice(0,i);\r\n var notHost=hostparts.slice(i+1);\r\n var bit=part.match(hostnamePartStart);\r\n if(bit){\r\n validParts.push(bit[1]);\r\n notHost.unshift(bit[2]);\r\n}\r\n if(notHost.length){\r\n rest='/'+notHost.join('.')+rest;\r\n}\r\n this.hostname=validParts.join('.');\r\n break;\r\n}\r\n}\r\n}\r\n}\r\n\r\n if(this.hostname.length>hostnameMaxLen){\r\n this.hostname='';\r\n}else{\r\n//hostnames are always lower case.\r\n this.hostname=this.hostname.toLowerCase();\r\n}\r\n\r\n if(!ipv6Hostname){\r\n//IDNA Support:Returns a punycoded representation of\"domain\".\r\n//It only converts parts of the domain name that\r\n//have non-ASCII characters,i.e.it doesn't matter if\r\n//you call it with a domain that already is ASCII-only.\r\n this.hostname=punycode.toASCII(this.hostname);\r\n}\r\n\r\n var p=this.port?':'+this.port:'';\r\n var h=this.hostname||'';\r\n this.host=h+p;\r\n this.href+=this.host;\r\n\r\n//strip[and]from the hostname\r\n//the host field still retains them,though\r\n if(ipv6Hostname){\r\n this.hostname=this.hostname.substr(1,this.hostname.length-2);\r\n if(rest[0]!=='/'){\r\n rest='/'+rest;\r\n}\r\n}\r\n}\r\n\r\n//now rest is set to the post-host stuff.\r\n//chop off any delim chars.\r\n if(!unsafeProtocol[lowerProto]){\r\n\r\n//First,make 100%sure that any\"autoEscape\"chars get\r\n//escaped,even if encodeURIComponent doesn't think they\r\n//need to be.\r\n for(var i=0,l=autoEscape.length;i<l;i++){\r\n var ae=autoEscape[i];\r\n if(rest.indexOf(ae)===-1)\r\n continue;\r\n var esc=encodeURIComponent(ae);\r\n if(esc===ae){\r\n esc=escape(ae);\r\n}\r\n rest=rest.split(ae).join(esc);\r\n}\r\n}\r\n\r\n\r\n//chop off from the tail first.\r\n var hash=rest.indexOf('#');\r\n if(hash!==-1){\r\n//got a fragment string.\r\n this.hash=rest.substr(hash);\r\n rest=rest.slice(0,hash);\r\n}\r\n var qm=rest.indexOf('?');\r\n if(qm!==-1){\r\n this.search=rest.substr(qm);\r\n this.query=rest.substr(qm+1);\r\n if(parseQueryString){\r\n this.query=querystring.parse(this.query);\r\n}\r\n rest=rest.slice(0,qm);\r\n}else if(parseQueryString){\r\n//no query string,but parseQueryString still requested\r\n this.search='';\r\n this.query={};\r\n}\r\n if(rest)this.pathname=rest;\r\n if(slashedProtocol[lowerProto]&&\r\n this.hostname&&!this.pathname){\r\n this.pathname='/';\r\n}\r\n\r\n//to support http.request\r\n if(this.pathname||this.search){\r\n var p=this.pathname||'';\r\n var s=this.search||'';\r\n this.path=p+s;\r\n}\r\n\r\n//finally,reconstruct the href based on what has been validated.\r\n this.href=this.format();\r\n return this;\r\n};\r\n\r\n//format a parsed object into a url string\r\nfunction urlFormat(obj){\r\n//ensure it's an object,and not a string url.\r\n//If it's an obj,this is a no-op.\r\n//this way,you can call url_format()on strings\r\n//to clean up potentially wonky urls.\r\n if(util.isString(obj))obj=urlParse(obj);\r\n if(!(obj instanceof Url))return Url.prototype.format.call(obj);\r\n return obj.format();\r\n}\r\n\r\nUrl.prototype.format=function(){\r\n var auth=this.auth||'';\r\n if(auth){\r\n auth=encodeURIComponent(auth);\r\n auth=auth.replace(/%3A/i,':');\r\n auth+='@';\r\n}\r\n\r\n var protocol=this.protocol||'',\r\n pathname=this.pathname||'',\r\n hash=this.hash||'',\r\n host=false,\r\n query='';\r\n\r\n if(this.host){\r\n host=auth+this.host;\r\n}else if(this.hostname){\r\n host=auth+(this.hostname.indexOf(':')===-1?\r\n this.hostname:\r\n'['+this.hostname+']');\r\n if(this.port){\r\n host+=':'+this.port;\r\n}\r\n}\r\n\r\n if(this.query&&\r\n util.isObject(this.query)&&\r\n Object.keys(this.query).length){\r\n query=querystring.stringify(this.query);\r\n}\r\n\r\n var search=this.search||(query&&('?'+query))||'';\r\n\r\n if(protocol&&protocol.substr(-1)!==':')protocol+=':';\r\n\r\n//only the slashedProtocols get the//.Not mailto:,xmpp:,etc.\r\n//unless they had them to begin with.\r\n if(this.slashes||\r\n(!protocol||slashedProtocol[protocol])&&host!==false){\r\n host='//'+(host||'');\r\n if(pathname&&pathname.charAt(0)!=='/')pathname='/'+pathname;\r\n}else if(!host){\r\n host='';\r\n}\r\n\r\n if(hash&&hash.charAt(0)!=='#')hash='#'+hash;\r\n if(search&&search.charAt(0)!=='?')search='?'+search;\r\n\r\n pathname=pathname.replace(/[?#]/g,function(match){\r\n return encodeURIComponent(match);\r\n});\r\n search=search.replace('#','%23');\r\n\r\n return protocol+host+pathname+search+hash;\r\n};\r\n\r\nfunction urlResolve(source,relative){\r\n return urlParse(source,false,true).resolve(relative);\r\n}\r\n\r\nUrl.prototype.resolve=function(relative){\r\n return this.resolveObject(urlParse(relative,false,true)).format();\r\n};\r\n\r\nfunction urlResolveObject(source,relative){\r\n if(!source)return relative;\r\n return urlParse(source,false,true).resolveObject(relative);\r\n}\r\n\r\nUrl.prototype.resolveObject=function(relative){\r\n if(util.isString(relative)){\r\n var rel=new Url();\r\n rel.parse(relative,false,true);\r\n relative=rel;\r\n}\r\n\r\n var result=new Url();\r\n var tkeys=Object.keys(this);\r\n for(var tk=0;tk<tkeys.length;tk++){\r\n var tkey=tkeys[tk];\r\n result[tkey]=this[tkey];\r\n}\r\n\r\n//hash is always overridden,no matter what.\r\n//even href=\"\"will remove it.\r\n result.hash=relative.hash;\r\n\r\n//if the relative url is empty,then there's nothing left to do here.\r\n if(relative.href===''){\r\n result.href=result.format();\r\n return result;\r\n}\r\n\r\n//hrefs like//foo/bar always cut to the protocol.\r\n if(relative.slashes&&!relative.protocol){\r\n//take everything except the protocol from relative\r\n var rkeys=Object.keys(relative);\r\n for(var rk=0;rk<rkeys.length;rk++){\r\n var rkey=rkeys[rk];\r\n if(rkey!=='protocol')\r\n result[rkey]=relative[rkey];\r\n}\r\n\r\n//urlParse appends trailing/to urls like http://www.example.com\r\n if(slashedProtocol[result.protocol]&&\r\n result.hostname&&!result.pathname){\r\n result.path=result.pathname='/';\r\n}\r\n\r\n result.href=result.format();\r\n return result;\r\n}\r\n\r\n if(relative.protocol&&relative.protocol!==result.protocol){\r\n//if it's a known url protocol,then changing\r\n//the protocol does weird things\r\n//first,if it's not file:,then we MUST have a host,\r\n//and if there was a path\r\n//to begin with,then we MUST have a path.\r\n//if it is file:,then the host is dropped,\r\n//because that's known to be hostless.\r\n//anything else is assumed to be absolute.\r\n if(!slashedProtocol[relative.protocol]){\r\n var keys=Object.keys(relative);\r\n for(var v=0;v<keys.length;v++){\r\n var k=keys[v];\r\n result[k]=relative[k];\r\n}\r\n result.href=result.format();\r\n return result;\r\n}\r\n\r\n result.protocol=relative.protocol;\r\n if(!relative.host&&!hostlessProtocol[relative.protocol]){\r\n var relPath=(relative.pathname||'').split('/');\r\n while(relPath.length&&!(relative.host=relPath.shift()));\r\n if(!relative.host)relative.host='';\r\n if(!relative.hostname)relative.hostname='';\r\n if(relPath[0]!=='')relPath.unshift('');\r\n if(relPath.length<2)relPath.unshift('');\r\n result.pathname=relPath.join('/');\r\n}else{\r\n result.pathname=relative.pathname;\r\n}\r\n result.search=relative.search;\r\n result.query=relative.query;\r\n result.host=relative.host||'';\r\n result.auth=relative.auth;\r\n result.hostname=relative.hostname||relative.host;\r\n result.port=relative.port;\r\n//to support http.request\r\n if(result.pathname||result.search){\r\n var p=result.pathname||'';\r\n var s=result.search||'';\r\n result.path=p+s;\r\n}\r\n result.slashes=result.slashes||relative.slashes;\r\n result.href=result.format();\r\n return result;\r\n}\r\n\r\n var isSourceAbs=(result.pathname&&result.pathname.charAt(0)==='/'),\r\n isRelAbs=(\r\n relative.host||\r\n relative.pathname&&relative.pathname.charAt(0)==='/'\r\n),\r\n mustEndAbs=(isRelAbs||isSourceAbs||\r\n(result.host&&relative.pathname)),\r\n removeAllDots=mustEndAbs,\r\n srcPath=result.pathname&&result.pathname.split('/')||[],\r\n relPath=relative.pathname&&relative.pathname.split('/')||[],\r\n psychotic=result.protocol&&!slashedProtocol[result.protocol];\r\n\r\n//if the url is a non-slashed url,then relative\r\n//links like../..should be able\r\n//to crawl up to the hostname,as well.This is strange.\r\n//result.protocol has already been set by now.\r\n//Later on,put the first path part into the host field.\r\n if(psychotic){\r\n result.hostname='';\r\n result.port=null;\r\n if(result.host){\r\n if(srcPath[0]==='')srcPath[0]=result.host;\r\n else srcPath.unshift(result.host);\r\n}\r\n result.host='';\r\n if(relative.protocol){\r\n relative.hostname=null;\r\n relative.port=null;\r\n if(relative.host){\r\n if(relPath[0]==='')relPath[0]=relative.host;\r\n else relPath.unshift(relative.host);\r\n}\r\n relative.host=null;\r\n}\r\n mustEndAbs=mustEndAbs&&(relPath[0]===''||srcPath[0]==='');\r\n}\r\n\r\n if(isRelAbs){\r\n//it's absolute.\r\n result.host=(relative.host||relative.host==='')?\r\n relative.host:result.host;\r\n result.hostname=(relative.hostname||relative.hostname==='')?\r\n relative.hostname:result.hostname;\r\n result.search=relative.search;\r\n result.query=relative.query;\r\n srcPath=relPath;\r\n//fall through to the dot-handling below.\r\n}else if(relPath.length){\r\n//it's relative\r\n//throw away the existing file,and take the new path instead.\r\n if(!srcPath)srcPath=[];\r\n srcPath.pop();\r\n srcPath=srcPath.concat(relPath);\r\n result.search=relative.search;\r\n result.query=relative.query;\r\n}else if(!util.isNullOrUndefined(relative.search)){\r\n//just pull out the search.\r\n//like href='?foo'.\r\n//Put this after the other two cases because it simplifies the booleans\r\n if(psychotic){\r\n result.hostname=result.host=srcPath.shift();\r\n//occationaly the auth can get stuck only in host\r\n//this especially happens in cases like\r\n//url.resolveObject('mailto:local1@domain1','local2@domain2')\r\n var authInHost=result.host&&result.host.indexOf('@')>0?\r\n result.host.split('@'):false;\r\n if(authInHost){\r\n result.auth=authInHost.shift();\r\n result.host=result.hostname=authInHost.shift();\r\n}\r\n}\r\n result.search=relative.search;\r\n result.query=relative.query;\r\n//to support http.request\r\n if(!util.isNull(result.pathname)||!util.isNull(result.search)){\r\n result.path=(result.pathname?result.pathname:'')+\r\n(result.search?result.search:'');\r\n}\r\n result.href=result.format();\r\n return result;\r\n}\r\n\r\n if(!srcPath.length){\r\n//no path at all.easy.\r\n//we've already handled the other stuff above.\r\n result.pathname=null;\r\n//to support http.request\r\n if(result.search){\r\n result.path='/'+result.search;\r\n}else{\r\n result.path=null;\r\n}\r\n result.href=result.format();\r\n return result;\r\n}\r\n\r\n//if a url ENDs in.or..,then it must get a trailing slash.\r\n//however,if it ends in anything else non-slashy,\r\n//then it must NOT get a trailing slash.\r\n var last=srcPath.slice(-1)[0];\r\n var hasTrailingSlash=(\r\n(result.host||relative.host||srcPath.length>1)&&\r\n(last==='.'||last==='..')||last==='');\r\n\r\n//strip single dots,resolve double dots to parent dir\r\n//if the path tries to go above the root,`up`ends up>0\r\n var up=0;\r\n for(var i=srcPath.length;i>=0;i--){\r\n last=srcPath[i];\r\n if(last==='.'){\r\n srcPath.splice(i,1);\r\n}else if(last==='..'){\r\n srcPath.splice(i,1);\r\n up++;\r\n}else if(up){\r\n srcPath.splice(i,1);\r\n up--;\r\n}\r\n}\r\n\r\n//if the path is allowed to go above the root,restore leading..s\r\n if(!mustEndAbs&&!removeAllDots){\r\n for(;up--;up){\r\n srcPath.unshift('..');\r\n}\r\n}\r\n\r\n if(mustEndAbs&&srcPath[0]!==''&&\r\n(!srcPath[0]||srcPath[0].charAt(0)!=='/')){\r\n srcPath.unshift('');\r\n}\r\n\r\n if(hasTrailingSlash&&(srcPath.join('/').substr(-1)!=='/')){\r\n srcPath.push('');\r\n}\r\n\r\n var isAbsolute=srcPath[0]===''||\r\n(srcPath[0]&&srcPath[0].charAt(0)==='/');\r\n\r\n//put the host back\r\n if(psychotic){\r\n result.hostname=result.host=isAbsolute?'':\r\n srcPath.length?srcPath.shift():'';\r\n//occationaly the auth can get stuck only in host\r\n//this especially happens in cases like\r\n//url.resolveObject('mailto:local1@domain1','local2@domain2')\r\n var authInHost=result.host&&result.host.indexOf('@')>0?\r\n result.host.split('@'):false;\r\n if(authInHost){\r\n result.auth=authInHost.shift();\r\n result.host=result.hostname=authInHost.shift();\r\n}\r\n}\r\n\r\n mustEndAbs=mustEndAbs||(result.host&&srcPath.length);\r\n\r\n if(mustEndAbs&&!isAbsolute){\r\n srcPath.unshift('');\r\n}\r\n\r\n if(!srcPath.length){\r\n result.pathname=null;\r\n result.path=null;\r\n}else{\r\n result.pathname=srcPath.join('/');\r\n}\r\n\r\n//to support request.http\r\n if(!util.isNull(result.pathname)||!util.isNull(result.search)){\r\n result.path=(result.pathname?result.pathname:'')+\r\n(result.search?result.search:'');\r\n}\r\n result.auth=relative.auth||result.auth;\r\n result.slashes=result.slashes||relative.slashes;\r\n result.href=result.format();\r\n return result;\r\n};\r\n\r\nUrl.prototype.parseHost=function(){\r\n var host=this.host;\r\n var port=portPattern.exec(host);\r\n if(port){\r\n port=port[0];\r\n if(port!==':'){\r\n this.port=port.substr(1);\r\n}\r\n host=host.substr(0,host.length-port.length);\r\n}\r\n if(host)this.hostname=host;\r\n};\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,\n//#sourceURL=webpack-internal:///./node_modules/url/url.js\n");/***/}),/***/"./node_modules/url/util.js":/*!**********************************!*\{!***./node_modules/url/util.js***!}\**********************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\nmodule.exports={\r\n isString:function(arg){\r\n return typeof(arg)==='string';\r\n},\r\n isObject:function(arg){\r\n return typeof(arg)==='object'&&arg!==null;\r\n},\r\n isNull:function(arg){\r\n return arg===null;\r\n},\r\n isNullOrUndefined:function(arg){\r\n return arg==null;\r\n}\r\n};\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsL3V0aWwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXJsL3V0aWwuanM/MzVlOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBpc1N0cmluZzogZnVuY3Rpb24oYXJnKSB7XHJcbiAgICByZXR1cm4gdHlwZW9mKGFyZykgPT09ICdzdHJpbmcnO1xyXG4gIH0sXHJcbiAgaXNPYmplY3Q6IGZ1bmN0aW9uKGFyZykge1xyXG4gICAgcmV0dXJuIHR5cGVvZihhcmcpID09PSAnb2JqZWN0JyAmJiBhcmcgIT09IG51bGw7XHJcbiAgfSxcclxuICBpc051bGw6IGZ1bmN0aW9uKGFyZykge1xyXG4gICAgcmV0dXJuIGFyZyA9PT0gbnVsbDtcclxuICB9LFxyXG4gIGlzTnVsbE9yVW5kZWZpbmVkOiBmdW5jdGlvbihhcmcpIHtcclxuICAgIHJldHVybiBhcmcgPT0gbnVsbDtcclxuICB9XHJcbn07XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//#sourceURL=webpack-internal:///./node_modules/url/util.js\n");/***/}),/***/"./node_modules/webpack-dev-server/client/index.js?http://localhost:8080":/*!*********************************************************!*\;!***(webpack)-dev-server/client?http://localhost:8080***!;\*********************************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){"use strict";eval("/*WEBPACK VAR INJECTION*/(function(__resourceQuery){\r\n\r\n/*global __resourceQuery WorkerGlobalScope self*/\r\n/*eslint prefer-destructuring:off*/\r\n\r\nvar url=__webpack_require__(/*!url*/\"./node_modules/url/url.js\");\r\nvar stripAnsi=__webpack_require__(/*!strip-ansi*/\"./node_modules/strip-ansi/index.js\");\r\nvar log=__webpack_require__(/*!loglevel*/\"./node_modules/loglevel/lib/loglevel.js\").getLogger('webpack-dev-server');\r\nvar socket=__webpack_require__(/*!./socket*/\"./node_modules/webpack-dev-server/client/socket.js\");\r\nvar overlay=__webpack_require__(/*!./overlay*/\"./node_modules/webpack-dev-server/client/overlay.js\");\r\n\r\nfunction getCurrentScriptSource(){\r\n//`document.currentScript`is the most accurate way to find the current script,\r\n//but is not supported in all browsers.\r\n if(document.currentScript){\r\n return document.currentScript.getAttribute('src');\r\n}\r\n//Fall back to getting all scripts in the document.\r\n var scriptElements=document.scripts||[];\r\n var currentScript=scriptElements[scriptElements.length-1];\r\n if(currentScript){\r\n return currentScript.getAttribute('src');\r\n}\r\n//Fail as there was no script to use.\r\n throw new Error('[WDS]Failed to get current script source.');\r\n}\r\n\r\nvar urlParts=void 0;\r\nvar hotReload=true;\r\nif(typeof window!=='undefined'){\r\n var qs=window.location.search.toLowerCase();\r\n hotReload=qs.indexOf('hotreload=false')===-1;\r\n}\r\nif(true){\r\n//If this bundle is inlined,use the resource query to get the correct url.\r\n urlParts=url.parse(__resourceQuery.substr(1));\r\n}else{var scriptHost;}\r\n\r\nif(!urlParts.port||urlParts.port==='0'){\r\n urlParts.port=self.location.port;\r\n}\r\n\r\nvar _hot=false;\r\nvar initial=true;\r\nvar currentHash='';\r\nvar useWarningOverlay=false;\r\nvar useErrorOverlay=false;\r\nvar useProgress=false;\r\n\r\nvar INFO='info';\r\nvar WARNING='warning';\r\nvar ERROR='error';\r\nvar NONE='none';\r\n\r\n//Set the default log level\r\nlog.setDefaultLevel(INFO);\r\n\r\n//Send messages to the outside,so plugins can consume it.\r\nfunction sendMsg(type,data){\r\n if(typeof self!=='undefined'&&(typeof WorkerGlobalScope==='undefined'||!(self instanceof WorkerGlobalScope))){\r\n self.postMessage({\r\n type:'webpack'+type,\r\n data:data\r\n},'*');\r\n}\r\n}\r\n\r\nvar onSocketMsg={\r\n hot:function hot(){\r\n _hot=true;\r\n log.info('[WDS]Hot Module Replacement enabled.');\r\n},\r\n invalid:function invalid(){\r\n log.info('[WDS]App updated.Recompiling...');\r\n//fixes#1042.overlay doesn't clear if errors are fixed but warnings remain.\r\n if(useWarningOverlay||useErrorOverlay)overlay.clear();\r\n sendMsg('Invalid');\r\n},\r\n hash:function hash(_hash){\r\n currentHash=_hash;\r\n},\r\n\r\n'still-ok':function stillOk(){\r\n log.info('[WDS]Nothing changed.');\r\n if(useWarningOverlay||useErrorOverlay)overlay.clear();\r\n sendMsg('StillOk');\r\n},\r\n'log-level':function logLevel(level){\r\n var hotCtx=__webpack_require__(\"./node_modules/webpack/hot sync^\\\\.\\\\/log$\");\r\n if(hotCtx.keys().indexOf('./log')!==-1){\r\n hotCtx('./log').setLogLevel(level);\r\n}\r\n switch(level){\r\n case INFO:\r\n case ERROR:\r\n log.setLevel(level);\r\n break;\r\n case WARNING:\r\n//loglevel's warning name is different from webpack's\r\n log.setLevel('warn');\r\n break;\r\n case NONE:\r\n log.disableAll();\r\n break;\r\n default:\r\n log.error('[WDS]Unknown clientLogLevel\\''+level+'\\'');\r\n}\r\n},\r\n overlay:function overlay(value){\r\n if(typeof document!=='undefined'){\r\n if(typeof value==='boolean'){\r\n useWarningOverlay=false;\r\n useErrorOverlay=value;\r\n}else if(value){\r\n useWarningOverlay=value.warnings;\r\n useErrorOverlay=value.errors;\r\n}\r\n}\r\n},\r\n progress:function progress(_progress){\r\n if(typeof document!=='undefined'){\r\n useProgress=_progress;\r\n}\r\n},\r\n\r\n'progress-update':function progressUpdate(data){\r\n if(useProgress)log.info('[WDS]'+data.percent+'%-'+data.msg+'.');\r\n sendMsg('Progress',data);\r\n},\r\n ok:function ok(){\r\n sendMsg('Ok');\r\n if(useWarningOverlay||useErrorOverlay)overlay.clear();\r\n if(initial)return initial=false;//eslint-disable-line no-return-assign\r\n reloadApp();\r\n},\r\n\r\n'content-changed':function contentChanged(){\r\n log.info('[WDS]Content base changed.Reloading...');\r\n self.location.reload();\r\n},\r\n warnings:function warnings(_warnings){\r\n log.warn('[WDS]Warnings while compiling.');\r\n var strippedWarnings=_warnings.map(function(warning){\r\n return stripAnsi(warning);\r\n});\r\n sendMsg('Warnings',strippedWarnings);\r\n for(var i=0;i<strippedWarnings.length;i++){\r\n log.warn(strippedWarnings[i]);\r\n}\r\n if(useWarningOverlay)overlay.showMessage(_warnings);\r\n\r\n if(initial)return initial=false;//eslint-disable-line no-return-assign\r\n reloadApp();\r\n},\r\n errors:function errors(_errors){\r\n log.error('[WDS]Errors while compiling.Reload prevented.');\r\n var strippedErrors=_errors.map(function(error){\r\n return stripAnsi(error);\r\n});\r\n sendMsg('Errors',strippedErrors);\r\n for(var i=0;i<strippedErrors.length;i++){\r\n log.error(strippedErrors[i]);\r\n}\r\n if(useErrorOverlay)overlay.showMessage(_errors);\r\n initial=false;\r\n},\r\n error:function error(_error){\r\n log.error(_error);\r\n},\r\n close:function close(){\r\n log.error('[WDS]Disconnected!');\r\n sendMsg('Close');\r\n}\r\n};\r\n\r\nvar hostname=urlParts.hostname;\r\nvar protocol=urlParts.protocol;\r\n\r\n//check ipv4 and ipv6`all hostname`\r\nif(hostname==='0.0.0.0'||hostname==='::'){\r\n//why do we need this check?\r\n//hostname n/a for file protocol(example,when using electron,ionic)\r\n//see:https://github.com/webpack/webpack-dev-server/pull/384\r\n//eslint-disable-next-line no-bitwise\r\n if(self.location.hostname&&!!~self.location.protocol.indexOf('http')){\r\n hostname=self.location.hostname;\r\n}\r\n}\r\n\r\n//`hostname`can be empty when the script path is relative.In that case,specifying\r\n//a protocol would result in an invalid URL.\r\n//When https is used in the app,secure websockets are always necessary\r\n//because the browser doesn't accept non-secure websockets.\r\nif(hostname&&(self.location.protocol==='https:'||urlParts.hostname==='0.0.0.0')){\r\n protocol=self.location.protocol;\r\n}\r\n\r\nvar socketUrl=url.format({\r\n protocol:protocol,\r\n auth:urlParts.auth,\r\n hostname:hostname,\r\n port:urlParts.port,\r\n pathname:urlParts.path==null||urlParts.path==='/'?'/sockjs-node':urlParts.path\r\n});\r\n\r\nsocket(socketUrl,onSocketMsg);\r\n\r\nvar isUnloading=false;\r\nself.addEventListener('beforeunload',function(){\r\n isUnloading=true;\r\n});\r\n\r\nfunction reloadApp(){\r\n if(isUnloading||!hotReload){\r\n return;\r\n}\r\n if(_hot){\r\n log.info('[WDS]App hot update...');\r\n//eslint-disable-next-line global-require\r\n var hotEmitter=__webpack_require__(/*!webpack/hot/emitter*/\"./node_modules/webpack/hot/emitter.js\");\r\n hotEmitter.emit('webpackHotUpdate',currentHash);\r\n if(typeof self!=='undefined'&&self.window){\r\n//broadcast update to window\r\n self.postMessage('webpackHotUpdate'+currentHash,'*');\r\n}\r\n}else{\r\n var rootWindow=self;\r\n//use parent window for reload(in case we're in an iframe with no valid src)\r\n var intervalId=self.setInterval(function(){\r\n if(rootWindow.location.protocol!=='about:'){\r\n//reload immediately if protocol is valid\r\n applyReload(rootWindow,intervalId);\r\n}else{\r\n rootWindow=rootWindow.parent;\r\n if(rootWindow.parent===rootWindow){\r\n//if parent equals current window we've reached the root which would continue forever,so trigger a reload anyways\r\n applyReload(rootWindow,intervalId);\r\n}\r\n}\r\n});\r\n}\r\n\r\n function applyReload(rootWindow,intervalId){\r\n clearInterval(intervalId);\r\n log.info('[WDS]App updated.Reloading...');\r\n rootWindow.location.reload();\r\n}\r\n}\n/*WEBPACK VAR INJECTION*/}.call(this,\"?http://localhost:8080\"))//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,\n//#sourceURL=webpack-internal:///./node_modules/webpack-dev-server/client/index.js?http://localhost:8080\n");/***/}),/***/"./node_modules/webpack-dev-server/client/overlay.js":/*!**********************************************!*\;!***(webpack)-dev-server/client/overlay.js***!;\**********************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\n//The error overlay is inspired(and mostly copied)from Create React App(https://github.com/facebookincubator/create-react-app)\r\n//They,in turn,got inspired by webpack-hot-middleware(https://github.com/glenjamin/webpack-hot-middleware).\r\n\r\nvar ansiHTML=__webpack_require__(/*!ansi-html*/\"./node_modules/ansi-html/index.js\");\r\nvar Entities=__webpack_require__(/*!html-entities*/\"./node_modules/html-entities/index.js\").AllHtmlEntities;\r\n\r\nvar entities=new Entities();\r\n\r\nvar colors={\r\n reset:['transparent','transparent'],\r\n black:'181818',\r\n red:'E36049',\r\n green:'B3CB74',\r\n yellow:'FFD080',\r\n blue:'7CAFC2',\r\n magenta:'7FACCA',\r\n cyan:'C3C2EF',\r\n lightgrey:'EBE7E3',\r\n darkgrey:'6D7891'\r\n};\r\nansiHTML.setColors(colors);\r\n\r\nfunction createOverlayIframe(onIframeLoad){\r\n var iframe=document.createElement('iframe');\r\n iframe.id='webpack-dev-server-client-overlay';\r\n iframe.src='about:blank';\r\n iframe.style.position='fixed';\r\n iframe.style.left=0;\r\n iframe.style.top=0;\r\n iframe.style.right=0;\r\n iframe.style.bottom=0;\r\n iframe.style.width='100vw';\r\n iframe.style.height='100vh';\r\n iframe.style.border='none';\r\n iframe.style.zIndex=9999999999;\r\n iframe.onload=onIframeLoad;\r\n return iframe;\r\n}\r\n\r\nfunction addOverlayDivTo(iframe){\r\n var div=iframe.contentDocument.createElement('div');\r\n div.id='webpack-dev-server-client-overlay-div';\r\n div.style.position='fixed';\r\n div.style.boxSizing='border-box';\r\n div.style.left=0;\r\n div.style.top=0;\r\n div.style.right=0;\r\n div.style.bottom=0;\r\n div.style.width='100vw';\r\n div.style.height='100vh';\r\n div.style.backgroundColor='rgba(0,0,0,0.85)';\r\n div.style.color='#E8E8E8';\r\n div.style.fontFamily='Menlo,Consolas,monospace';\r\n div.style.fontSize='large';\r\n div.style.padding='2rem';\r\n div.style.lineHeight='1.2';\r\n div.style.whiteSpace='pre-wrap';\r\n div.style.overflow='auto';\r\n iframe.contentDocument.body.appendChild(div);\r\n return div;\r\n}\r\n\r\nvar overlayIframe=null;\r\nvar overlayDiv=null;\r\nvar lastOnOverlayDivReady=null;\r\n\r\nfunction ensureOverlayDivExists(onOverlayDivReady){\r\n if(overlayDiv){\r\n//Everything is ready,call the callback right away.\r\n onOverlayDivReady(overlayDiv);\r\n return;\r\n}\r\n\r\n//Creating an iframe may be asynchronous so we'll schedule the callback.\r\n//In case of multiple calls,last callback wins.\r\n lastOnOverlayDivReady=onOverlayDivReady;\r\n\r\n if(overlayIframe){\r\n//We're already creating it.\r\n return;\r\n}\r\n\r\n//Create iframe and,when it is ready,a div inside it.\r\n overlayIframe=createOverlayIframe(function(){\r\n overlayDiv=addOverlayDivTo(overlayIframe);\r\n//Now we can talk!\r\n lastOnOverlayDivReady(overlayDiv);\r\n});\r\n\r\n//Zalgo alert:onIframeLoad()will be called either synchronously\r\n//or asynchronously depending on the browser.\r\n//We delay adding it so`overlayIframe`is set when`onIframeLoad`fires.\r\n document.body.appendChild(overlayIframe);\r\n}\r\n\r\nfunction showMessageOverlay(message){\r\n ensureOverlayDivExists(function(div){\r\n//Make it look similar to our terminal.\r\n div.innerHTML='<span style=\"color:#'+colors.red+'\">Failed to compile.</span><br><br>'+ansiHTML(entities.encode(message));\r\n});\r\n}\r\n\r\nfunction destroyErrorOverlay(){\r\n if(!overlayDiv){\r\n//It is not there in the first place.\r\n return;\r\n}\r\n\r\n//Clean up and reset internal state.\r\n document.body.removeChild(overlayIframe);\r\n overlayDiv=null;\r\n overlayIframe=null;\r\n lastOnOverlayDivReady=null;\r\n}\r\n\r\n//Successful compilation.\r\nexports.clear=function handleSuccess(){\r\n destroyErrorOverlay();\r\n};\r\n\r\n//Compilation with errors(e.g.syntax error or missing modules).\r\nexports.showMessage=function handleMessage(messages){\r\n showMessageOverlay(messages[0]);\r\n};//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay1kZXYtc2VydmVyL2NsaWVudC9vdmVybGF5LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS1kZXYtc2VydmVyL2NsaWVudC9vdmVybGF5LmpzPzJhYzYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuLy8gVGhlIGVycm9yIG92ZXJsYXkgaXMgaW5zcGlyZWQgKGFuZCBtb3N0bHkgY29waWVkKSBmcm9tIENyZWF0ZSBSZWFjdCBBcHAgKGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9va2luY3ViYXRvci9jcmVhdGUtcmVhY3QtYXBwKVxyXG4vLyBUaGV5LCBpbiB0dXJuLCBnb3QgaW5zcGlyZWQgYnkgd2VicGFjay1ob3QtbWlkZGxld2FyZSAoaHR0cHM6Ly9naXRodWIuY29tL2dsZW5qYW1pbi93ZWJwYWNrLWhvdC1taWRkbGV3YXJlKS5cclxuXHJcbnZhciBhbnNpSFRNTCA9IHJlcXVpcmUoJ2Fuc2ktaHRtbCcpO1xyXG52YXIgRW50aXRpZXMgPSByZXF1aXJlKCdodG1sLWVudGl0aWVzJykuQWxsSHRtbEVudGl0aWVzO1xyXG5cclxudmFyIGVudGl0aWVzID0gbmV3IEVudGl0aWVzKCk7XHJcblxyXG52YXIgY29sb3JzID0ge1xyXG4gIHJlc2V0OiBbJ3RyYW5zcGFyZW50JywgJ3RyYW5zcGFyZW50J10sXHJcbiAgYmxhY2s6ICcxODE4MTgnLFxyXG4gIHJlZDogJ0UzNjA0OScsXHJcbiAgZ3JlZW46ICdCM0NCNzQnLFxyXG4gIHllbGxvdzogJ0ZGRDA4MCcsXHJcbiAgYmx1ZTogJzdDQUZDMicsXHJcbiAgbWFnZW50YTogJzdGQUNDQScsXHJcbiAgY3lhbjogJ0MzQzJFRicsXHJcbiAgbGlnaHRncmV5OiAnRUJFN0UzJyxcclxuICBkYXJrZ3JleTogJzZENzg5MSdcclxufTtcclxuYW5zaUhUTUwuc2V0Q29sb3JzKGNvbG9ycyk7XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVPdmVybGF5SWZyYW1lKG9uSWZyYW1lTG9hZCkge1xyXG4gIHZhciBpZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTtcclxuICBpZnJhbWUuaWQgPSAnd2VicGFjay1kZXYtc2VydmVyLWNsaWVudC1vdmVybGF5JztcclxuICBpZnJhbWUuc3JjID0gJ2Fib3V0OmJsYW5rJztcclxuICBpZnJhbWUuc3R5bGUucG9zaXRpb24gPSAnZml4ZWQnO1xyXG4gIGlmcmFtZS5zdHlsZS5sZWZ0ID0gMDtcclxuICBpZnJhbWUuc3R5bGUudG9wID0gMDtcclxuICBpZnJhbWUuc3R5bGUucmlnaHQgPSAwO1xyXG4gIGlmcmFtZS5zdHlsZS5ib3R0b20gPSAwO1xyXG4gIGlmcmFtZS5zdHlsZS53aWR0aCA9ICcxMDB2dyc7XHJcbiAgaWZyYW1lLnN0eWxlLmhlaWdodCA9ICcxMDB2aCc7XHJcbiAgaWZyYW1lLnN0eWxlLmJvcmRlciA9ICdub25lJztcclxuICBpZnJhbWUuc3R5bGUuekluZGV4ID0gOTk5OTk5OTk5OTtcclxuICBpZnJhbWUub25sb2FkID0gb25JZnJhbWVMb2FkO1xyXG4gIHJldHVybiBpZnJhbWU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFkZE92ZXJsYXlEaXZUbyhpZnJhbWUpIHtcclxuICB2YXIgZGl2ID0gaWZyYW1lLmNvbnRlbnREb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICBkaXYuaWQgPSAnd2VicGFjay1kZXYtc2VydmVyLWNsaWVudC1vdmVybGF5LWRpdic7XHJcbiAgZGl2LnN0eWxlLnBvc2l0aW9uID0gJ2ZpeGVkJztcclxuICBkaXYuc3R5bGUuYm94U2l6aW5nID0gJ2JvcmRlci1ib3gnO1xyXG4gIGRpdi5zdHlsZS5sZWZ0ID0gMDtcclxuICBkaXYuc3R5bGUudG9wID0gMDtcclxuICBkaXYuc3R5bGUucmlnaHQgPSAwO1xyXG4gIGRpdi5zdHlsZS5ib3R0b20gPSAwO1xyXG4gIGRpdi5zdHlsZS53aWR0aCA9ICcxMDB2dyc7XHJcbiAgZGl2LnN0eWxlLmhlaWdodCA9ICcxMDB2aCc7XHJcbiAgZGl2LnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICdyZ2JhKDAsIDAsIDAsIDAuODUpJztcclxuICBkaXYuc3R5bGUuY29sb3IgPSAnI0U4RThFOCc7XHJcbiAgZGl2LnN0eWxlLmZvbnRGYW1pbHkgPSAnTWVubG8sIENvbnNvbGFzLCBtb25vc3BhY2UnO1xyXG4gIGRpdi5zdHlsZS5mb250U2l6ZSA9ICdsYXJnZSc7XHJcbiAgZGl2LnN0eWxlLnBhZGRpbmcgPSAnMnJlbSc7XHJcbiAgZGl2LnN0eWxlLmxpbmVIZWlnaHQgPSAnMS4yJztcclxuICBkaXYuc3R5bGUud2hpdGVTcGFjZSA9ICdwcmUtd3JhcCc7XHJcbiAgZGl2LnN0eWxlLm92ZXJmbG93ID0gJ2F1dG8nO1xyXG4gIGlmcmFtZS5jb250ZW50RG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaXYpO1xyXG4gIHJldHVybiBkaXY7XHJcbn1cclxuXHJcbnZhciBvdmVybGF5SWZyYW1lID0gbnVsbDtcclxudmFyIG92ZXJsYXlEaXYgPSBudWxsO1xyXG52YXIgbGFzdE9uT3ZlcmxheURpdlJlYWR5ID0gbnVsbDtcclxuXHJcbmZ1bmN0aW9uIGVuc3VyZU92ZXJsYXlEaXZFeGlzdHMob25PdmVybGF5RGl2UmVhZHkpIHtcclxuICBpZiAob3ZlcmxheURpdikge1xyXG4gICAgLy8gRXZlcnl0aGluZyBpcyByZWFkeSwgY2FsbCB0aGUgY2FsbGJhY2sgcmlnaHQgYXdheS5cclxuICAgIG9uT3ZlcmxheURpdlJlYWR5KG92ZXJsYXlEaXYpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLy8gQ3JlYXRpbmcgYW4gaWZyYW1lIG1heSBiZSBhc3luY2hyb25vdXMgc28gd2UnbGwgc2NoZWR1bGUgdGhlIGNhbGxiYWNrLlxyXG4gIC8vIEluIGNhc2Ugb2YgbXVsdGlwbGUgY2FsbHMsIGxhc3QgY2FsbGJhY2sgd2lucy5cclxuICBsYXN0T25PdmVybGF5RGl2UmVhZHkgPSBvbk92ZXJsYXlEaXZSZWFkeTtcclxuXHJcbiAgaWYgKG92ZXJsYXlJZnJhbWUpIHtcclxuICAgIC8vIFdlJ3JlIGFscmVhZHkgY3JlYXRpbmcgaXQuXHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvLyBDcmVhdGUgaWZyYW1lIGFuZCwgd2hlbiBpdCBpcyByZWFkeSwgYSBkaXYgaW5zaWRlIGl0LlxyXG4gIG92ZXJsYXlJZnJhbWUgPSBjcmVhdGVPdmVybGF5SWZyYW1lKGZ1bmN0aW9uICgpIHtcclxuICAgIG92ZXJsYXlEaXYgPSBhZGRPdmVybGF5RGl2VG8ob3ZlcmxheUlmcmFtZSk7XHJcbiAgICAvLyBOb3cgd2UgY2FuIHRhbGshXHJcbiAgICBsYXN0T25PdmVybGF5RGl2UmVhZHkob3ZlcmxheURpdik7XHJcbiAgfSk7XHJcblxyXG4gIC8vIFphbGdvIGFsZXJ0OiBvbklmcmFtZUxvYWQoKSB3aWxsIGJlIGNhbGxlZCBlaXRoZXIgc3luY2hyb25vdXNseVxyXG4gIC8vIG9yIGFzeW5jaHJvbm91c2x5IGRlcGVuZGluZyBvbiB0aGUgYnJvd3Nlci5cclxuICAvLyBXZSBkZWxheSBhZGRpbmcgaXQgc28gYG92ZXJsYXlJZnJhbWVgIGlzIHNldCB3aGVuIGBvbklmcmFtZUxvYWRgIGZpcmVzLlxyXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQob3ZlcmxheUlmcmFtZSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNob3dNZXNzYWdlT3ZlcmxheShtZXNzYWdlKSB7XHJcbiAgZW5zdXJlT3ZlcmxheURpdkV4aXN0cyhmdW5jdGlvbiAoZGl2KSB7XHJcbiAgICAvLyBNYWtlIGl0IGxvb2sgc2ltaWxhciB0byBvdXIgdGVybWluYWwuXHJcbiAgICBkaXYuaW5uZXJIVE1MID0gJzxzcGFuIHN0eWxlPVwiY29sb3I6ICMnICsgY29sb3JzLnJlZCArICdcIj5GYWlsZWQgdG8gY29tcGlsZS48L3NwYW4+PGJyPjxicj4nICsgYW5zaUhUTUwoZW50aXRpZXMuZW5jb2RlKG1lc3NhZ2UpKTtcclxuICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gZGVzdHJveUVycm9yT3ZlcmxheSgpIHtcclxuICBpZiAoIW92ZXJsYXlEaXYpIHtcclxuICAgIC8vIEl0IGlzIG5vdCB0aGVyZSBpbiB0aGUgZmlyc3QgcGxhY2UuXHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvLyBDbGVhbiB1cCBhbmQgcmVzZXQgaW50ZXJuYWwgc3RhdGUuXHJcbiAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChvdmVybGF5SWZyYW1lKTtcclxuICBvdmVybGF5RGl2ID0gbnVsbDtcclxuICBvdmVybGF5SWZyYW1lID0gbnVsbDtcclxuICBsYXN0T25PdmVybGF5RGl2UmVhZHkgPSBudWxsO1xyXG59XHJcblxyXG4vLyBTdWNjZXNzZnVsIGNvbXBpbGF0aW9uLlxyXG5leHBvcnRzLmNsZWFyID0gZnVuY3Rpb24gaGFuZGxlU3VjY2VzcygpIHtcclxuICBkZXN0cm95RXJyb3JPdmVybGF5KCk7XHJcbn07XHJcblxyXG4vLyBDb21waWxhdGlvbiB3aXRoIGVycm9ycyAoZS5nLiBzeW50YXggZXJyb3Igb3IgbWlzc2luZyBtb2R1bGVzKS5cclxuZXhwb3J0cy5zaG93TWVzc2FnZSA9IGZ1bmN0aW9uIGhhbmRsZU1lc3NhZ2UobWVzc2FnZXMpIHtcclxuICBzaG93TWVzc2FnZU92ZXJsYXkobWVzc2FnZXNbMF0pO1xyXG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//#sourceURL=webpack-internal:///./node_modules/webpack-dev-server/client/overlay.js\n");/***/}),/***/"./node_modules/webpack-dev-server/client/socket.js":/*!*********************************************!*\;!***(webpack)-dev-server/client/socket.js***!;\*********************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\nvar SockJS=__webpack_require__(/*!sockjs-client/dist/sockjs*/\"./node_modules/sockjs-client/dist/sockjs.js\");\r\n\r\nvar retries=0;\r\nvar sock=null;\r\n\r\nvar socket=function initSocket(url,handlers){\r\n sock=new SockJS(url);\r\n\r\n sock.onopen=function onopen(){\r\n retries=0;\r\n};\r\n\r\n sock.onclose=function onclose(){\r\n if(retries===0){\r\n handlers.close();\r\n}\r\n\r\n//Try to reconnect.\r\n sock=null;\r\n\r\n//After 10 retries stop trying,to prevent logspam.\r\n if(retries<=10){\r\n//Exponentially increase timeout to reconnect.\r\n//Respectfully copied from the package`got`.\r\n//eslint-disable-next-line no-mixed-operators,no-restricted-properties\r\n var retryInMs=1000*Math.pow(2,retries)+Math.random()*100;\r\n retries+=1;\r\n\r\n setTimeout(function(){\r\n socket(url,handlers);\r\n},retryInMs);\r\n}\r\n};\r\n\r\n sock.onmessage=function onmessage(e){\r\n//This assumes that all data sent via the websocket is JSON.\r\n var msg=JSON.parse(e.data);\r\n if(handlers[msg.type]){\r\n handlers[msg.type](msg.data);\r\n}\r\n};\r\n};\r\n\r\nmodule.exports=socket;//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay1kZXYtc2VydmVyL2NsaWVudC9zb2NrZXQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvY2xpZW50L3NvY2tldC5qcz9lMjljIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbnZhciBTb2NrSlMgPSByZXF1aXJlKCdzb2NranMtY2xpZW50L2Rpc3Qvc29ja2pzJyk7XHJcblxyXG52YXIgcmV0cmllcyA9IDA7XHJcbnZhciBzb2NrID0gbnVsbDtcclxuXHJcbnZhciBzb2NrZXQgPSBmdW5jdGlvbiBpbml0U29ja2V0KHVybCwgaGFuZGxlcnMpIHtcclxuICBzb2NrID0gbmV3IFNvY2tKUyh1cmwpO1xyXG5cclxuICBzb2NrLm9ub3BlbiA9IGZ1bmN0aW9uIG9ub3BlbigpIHtcclxuICAgIHJldHJpZXMgPSAwO1xyXG4gIH07XHJcblxyXG4gIHNvY2sub25jbG9zZSA9IGZ1bmN0aW9uIG9uY2xvc2UoKSB7XHJcbiAgICBpZiAocmV0cmllcyA9PT0gMCkge1xyXG4gICAgICBoYW5kbGVycy5jbG9zZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFRyeSB0byByZWNvbm5lY3QuXHJcbiAgICBzb2NrID0gbnVsbDtcclxuXHJcbiAgICAvLyBBZnRlciAxMCByZXRyaWVzIHN0b3AgdHJ5aW5nLCB0byBwcmV2ZW50IGxvZ3NwYW0uXHJcbiAgICBpZiAocmV0cmllcyA8PSAxMCkge1xyXG4gICAgICAvLyBFeHBvbmVudGlhbGx5IGluY3JlYXNlIHRpbWVvdXQgdG8gcmVjb25uZWN0LlxyXG4gICAgICAvLyBSZXNwZWN0ZnVsbHkgY29waWVkIGZyb20gdGhlIHBhY2thZ2UgYGdvdGAuXHJcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1taXhlZC1vcGVyYXRvcnMsIG5vLXJlc3RyaWN0ZWQtcHJvcGVydGllc1xyXG4gICAgICB2YXIgcmV0cnlJbk1zID0gMTAwMCAqIE1hdGgucG93KDIsIHJldHJpZXMpICsgTWF0aC5yYW5kb20oKSAqIDEwMDtcclxuICAgICAgcmV0cmllcyArPSAxO1xyXG5cclxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc29ja2V0KHVybCwgaGFuZGxlcnMpO1xyXG4gICAgICB9LCByZXRyeUluTXMpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHNvY2sub25tZXNzYWdlID0gZnVuY3Rpb24gb25tZXNzYWdlKGUpIHtcclxuICAgIC8vIFRoaXMgYXNzdW1lcyB0aGF0IGFsbCBkYXRhIHNlbnQgdmlhIHRoZSB3ZWJzb2NrZXQgaXMgSlNPTi5cclxuICAgIHZhciBtc2cgPSBKU09OLnBhcnNlKGUuZGF0YSk7XHJcbiAgICBpZiAoaGFuZGxlcnNbbXNnLnR5cGVdKSB7XHJcbiAgICAgIGhhbmRsZXJzW21zZy50eXBlXShtc2cuZGF0YSk7XHJcbiAgICB9XHJcbiAgfTtcclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gc29ja2V0OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//#sourceURL=webpack-internal:///./node_modules/webpack-dev-server/client/socket.js\n");/***/}),/***/"./node_modules/webpack/buildin/global.js":/*!***********************************!*\;!***(webpack)/buildin/global.js***!;\***********************************//*!no static exports found*//***/(function(module,exports){eval("var g;\r\n\r\n//This works in non-strict mode\r\ng=(function(){\r\n\treturn this;\r\n})();\r\n\r\ntry{\r\n\t//This works if eval is allowed(see CSP)\r\n\tg=g||new Function(\"return this\")();\r\n}catch(e){\r\n\t//This works if the window reference is available\r\n\tif(typeof window===\"object\")g=window;\r\n}\r\n\r\n//g can still be undefined,but nothing to do about it...\r\n//We return undefined,instead of nothing here,so it's\r\n//easier to handle this case.if(!global){...}\r\n\r\nmodule.exports=g;\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2dsb2JhbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/Y2QwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XHJcbn0gY2F0Y2ggKGUpIHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxyXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xyXG59XHJcblxyXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXHJcbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXHJcbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZztcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//#sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n");/***/}),/***/"./node_modules/webpack/buildin/module.js":/*!***********************************!*\;!***(webpack)/buildin/module.js***!;\***********************************//*!no static exports found*//***/(function(module,exports){eval("module.exports=function(module){\r\n\tif(!module.webpackPolyfill){\r\n\t\tmodule.deprecate=function(){};\r\n\t\tmodule.paths=[];\r\n\t\t//module.parent=undefined by default\r\n\t\tif(!module.children)module.children=[];\r\n\t\tObject.defineProperty(module,\"loaded\",{\r\n\t\t\tenumerable:true,\r\n\t\t\tget:function(){\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module,\"id\",{\r\n\t\t\tenumerable:true,\r\n\t\t\tget:function(){\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill=1;\r\n\t}\r\n\treturn module;\r\n};\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL21vZHVsZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9tb2R1bGUuanM/Y2VkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xyXG5cdGlmICghbW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xyXG5cdFx0bW9kdWxlLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKCkge307XHJcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcclxuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxyXG5cdFx0aWYgKCFtb2R1bGUuY2hpbGRyZW4pIG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xyXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxyXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcclxuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcclxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XHJcblx0fVxyXG5cdHJldHVybiBtb2R1bGU7XHJcbn07XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//#sourceURL=webpack-internal:///./node_modules/webpack/buildin/module.js\n");/***/}),/***/"./node_modules/webpack/hot sync^\\.\\/log$":/*!*************************************************!*\;!***(webpack)/hot sync nonrecursive^\.\/log$***!;\*************************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){eval("var map={\n\t\"./log\":\"./node_modules/webpack/hot/log.js\"\n};\n\n\nfunction webpackContext(req){\n\tvar id=webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req){\n\tvar id=map[req];\n\tif(!(id+1)){//check for number or string\n\t\tvar e=new Error(\"Cannot find module'\"+req+\"'\");\n\t\te.code='MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys=function webpackContextKeys(){\n\treturn Object.keys(map);\n};\nwebpackContext.resolve=webpackContextResolve;\nmodule.exports=webpackContext;\nwebpackContext.id=\"./node_modules/webpack/hot sync^\\\\.\\\\/log$\";//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9ob3Qgc3luYyBeXFwuXFwvbG9nJC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvaG90IHN5bmMgbm9ucmVjdXJzaXZlIF5cXC5cXC9sb2ckPzFjM2QiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG1hcCA9IHtcblx0XCIuL2xvZ1wiOiBcIi4vbm9kZV9tb2R1bGVzL3dlYnBhY2svaG90L2xvZy5qc1wiXG59O1xuXG5cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0KHJlcSkge1xuXHR2YXIgaWQgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKTtcblx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oaWQpO1xufVxuZnVuY3Rpb24gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSkge1xuXHR2YXIgaWQgPSBtYXBbcmVxXTtcblx0aWYoIShpZCArIDEpKSB7IC8vIGNoZWNrIGZvciBudW1iZXIgb3Igc3RyaW5nXG5cdFx0dmFyIGUgPSBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiICsgcmVxICsgXCInXCIpO1xuXHRcdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0XHR0aHJvdyBlO1xuXHR9XG5cdHJldHVybiBpZDtcbn1cbndlYnBhY2tDb250ZXh0LmtleXMgPSBmdW5jdGlvbiB3ZWJwYWNrQ29udGV4dEtleXMoKSB7XG5cdHJldHVybiBPYmplY3Qua2V5cyhtYXApO1xufTtcbndlYnBhY2tDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmU7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tDb250ZXh0O1xud2VicGFja0NvbnRleHQuaWQgPSBcIi4vbm9kZV9tb2R1bGVzL3dlYnBhY2svaG90IHN5bmMgXlxcXFwuXFxcXC9sb2ckXCI7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//#sourceURL=webpack-internal:///./node_modules/webpack/hot sync^\\.\\/log$\n");/***/}),/***/"./node_modules/webpack/hot/dev-server.js":/*!***********************************!*\;!***(webpack)/hot/dev-server.js***!;\***********************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){eval("/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers@sokra\r\n*/\r\n/*globals window __webpack_hash__*/\r\nif(true){\r\n\tvar lastHash;\r\n\tvar upToDate=function upToDate(){\r\n\t\treturn lastHash.indexOf(__webpack_require__.h())>=0;\r\n\t};\r\n\tvar log=__webpack_require__(/*!./log*/\"./node_modules/webpack/hot/log.js\");\r\n\tvar check=function check(){\r\n\t\tmodule.hot\r\n\t\t\t.check(true)\r\n\t\t\t.then(function(updatedModules){\r\n\t\t\t\tif(!updatedModules){\r\n\t\t\t\t\tlog(\"warning\",\"[HMR]Cannot find update.Need to do a full reload!\");\r\n\t\t\t\t\tlog(\r\n\t\t\t\t\t\t\"warning\",\r\n\t\t\t\t\t\t\"[HMR](Probably because of restarting the webpack-dev-server)\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!upToDate()){\r\n\t\t\t\t\tcheck();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t__webpack_require__(/*!./log-apply-result*/\"./node_modules/webpack/hot/log-apply-result.js\")(updatedModules,updatedModules);\r\n\r\n\t\t\t\tif(upToDate()){\r\n\t\t\t\t\tlog(\"info\",\"[HMR]App is up to date.\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(function(err){\r\n\t\t\t\tvar status=module.hot.status();\r\n\t\t\t\tif([\"abort\",\"fail\"].indexOf(status)>=0){\r\n\t\t\t\t\tlog(\r\n\t\t\t\t\t\t\"warning\",\r\n\t\t\t\t\t\t\"[HMR]Cannot apply update.Need to do a full reload!\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tlog(\"warning\",\"[HMR]\"+(err.stack||err.message));\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlog(\"warning\",\"[HMR]Update failed:\"+(err.stack||err.message));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\tvar hotEmitter=__webpack_require__(/*!./emitter*/\"./node_modules/webpack/hot/emitter.js\");\r\n\thotEmitter.on(\"webpackHotUpdate\",function(currentHash){\r\n\t\tlastHash=currentHash;\r\n\t\tif(!upToDate()&&module.hot.status()===\"idle\"){\r\n\t\t\tlog(\"info\",\"[HMR]Checking for updates on the server...\");\r\n\t\t\tcheck();\r\n\t\t}\r\n\t});\r\n\tlog(\"info\",\"[HMR]Waiting for update signal from WDS...\");\r\n}else{}\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9ob3QvZGV2LXNlcnZlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvaG90L2Rldi1zZXJ2ZXIuanM/Njg5NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXHJcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxyXG4qL1xyXG4vKmdsb2JhbHMgd2luZG93IF9fd2VicGFja19oYXNoX18gKi9cclxuaWYgKG1vZHVsZS5ob3QpIHtcclxuXHR2YXIgbGFzdEhhc2g7XHJcblx0dmFyIHVwVG9EYXRlID0gZnVuY3Rpb24gdXBUb0RhdGUoKSB7XHJcblx0XHRyZXR1cm4gbGFzdEhhc2guaW5kZXhPZihfX3dlYnBhY2tfaGFzaF9fKSA+PSAwO1xyXG5cdH07XHJcblx0dmFyIGxvZyA9IHJlcXVpcmUoXCIuL2xvZ1wiKTtcclxuXHR2YXIgY2hlY2sgPSBmdW5jdGlvbiBjaGVjaygpIHtcclxuXHRcdG1vZHVsZS5ob3RcclxuXHRcdFx0LmNoZWNrKHRydWUpXHJcblx0XHRcdC50aGVuKGZ1bmN0aW9uKHVwZGF0ZWRNb2R1bGVzKSB7XHJcblx0XHRcdFx0aWYgKCF1cGRhdGVkTW9kdWxlcykge1xyXG5cdFx0XHRcdFx0bG9nKFwid2FybmluZ1wiLCBcIltITVJdIENhbm5vdCBmaW5kIHVwZGF0ZS4gTmVlZCB0byBkbyBhIGZ1bGwgcmVsb2FkIVwiKTtcclxuXHRcdFx0XHRcdGxvZyhcclxuXHRcdFx0XHRcdFx0XCJ3YXJuaW5nXCIsXHJcblx0XHRcdFx0XHRcdFwiW0hNUl0gKFByb2JhYmx5IGJlY2F1c2Ugb2YgcmVzdGFydGluZyB0aGUgd2VicGFjay1kZXYtc2VydmVyKVwiXHJcblx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdFx0d2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xyXG5cdFx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0aWYgKCF1cFRvRGF0ZSgpKSB7XHJcblx0XHRcdFx0XHRjaGVjaygpO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0cmVxdWlyZShcIi4vbG9nLWFwcGx5LXJlc3VsdFwiKSh1cGRhdGVkTW9kdWxlcywgdXBkYXRlZE1vZHVsZXMpO1xyXG5cclxuXHRcdFx0XHRpZiAodXBUb0RhdGUoKSkge1xyXG5cdFx0XHRcdFx0bG9nKFwiaW5mb1wiLCBcIltITVJdIEFwcCBpcyB1cCB0byBkYXRlLlwiKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pXHJcblx0XHRcdC5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHR2YXIgc3RhdHVzID0gbW9kdWxlLmhvdC5zdGF0dXMoKTtcclxuXHRcdFx0XHRpZiAoW1wiYWJvcnRcIiwgXCJmYWlsXCJdLmluZGV4T2Yoc3RhdHVzKSA+PSAwKSB7XHJcblx0XHRcdFx0XHRsb2coXHJcblx0XHRcdFx0XHRcdFwid2FybmluZ1wiLFxyXG5cdFx0XHRcdFx0XHRcIltITVJdIENhbm5vdCBhcHBseSB1cGRhdGUuIE5lZWQgdG8gZG8gYSBmdWxsIHJlbG9hZCFcIlxyXG5cdFx0XHRcdFx0KTtcclxuXHRcdFx0XHRcdGxvZyhcIndhcm5pbmdcIiwgXCJbSE1SXSBcIiArIChlcnIuc3RhY2sgfHwgZXJyLm1lc3NhZ2UpKTtcclxuXHRcdFx0XHRcdHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0bG9nKFwid2FybmluZ1wiLCBcIltITVJdIFVwZGF0ZSBmYWlsZWQ6IFwiICsgKGVyci5zdGFjayB8fCBlcnIubWVzc2FnZSkpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblx0fTtcclxuXHR2YXIgaG90RW1pdHRlciA9IHJlcXVpcmUoXCIuL2VtaXR0ZXJcIik7XHJcblx0aG90RW1pdHRlci5vbihcIndlYnBhY2tIb3RVcGRhdGVcIiwgZnVuY3Rpb24oY3VycmVudEhhc2gpIHtcclxuXHRcdGxhc3RIYXNoID0gY3VycmVudEhhc2g7XHJcblx0XHRpZiAoIXVwVG9EYXRlKCkgJiYgbW9kdWxlLmhvdC5zdGF0dXMoKSA9PT0gXCJpZGxlXCIpIHtcclxuXHRcdFx0bG9nKFwiaW5mb1wiLCBcIltITVJdIENoZWNraW5nIGZvciB1cGRhdGVzIG9uIHRoZSBzZXJ2ZXIuLi5cIik7XHJcblx0XHRcdGNoZWNrKCk7XHJcblx0XHR9XHJcblx0fSk7XHJcblx0bG9nKFwiaW5mb1wiLCBcIltITVJdIFdhaXRpbmcgZm9yIHVwZGF0ZSBzaWduYWwgZnJvbSBXRFMuLi5cIik7XHJcbn0gZWxzZSB7XHJcblx0dGhyb3cgbmV3IEVycm9yKFwiW0hNUl0gSG90IE1vZHVsZSBSZXBsYWNlbWVudCBpcyBkaXNhYmxlZC5cIik7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBRUE7Iiwic291cmNlUm9vdCI6IiJ9\n//#sourceURL=webpack-internal:///./node_modules/webpack/hot/dev-server.js\n");/***/}),/***/"./node_modules/webpack/hot/emitter.js":/*!********************************!*\;!***(webpack)/hot/emitter.js***!;\********************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){eval("var EventEmitter=__webpack_require__(/*!events*/\"./node_modules/events/events.js\");\r\nmodule.exports=new EventEmitter();\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9ob3QvZW1pdHRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvaG90L2VtaXR0ZXIuanM/YTZiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZShcImV2ZW50c1wiKTtcclxubW9kdWxlLmV4cG9ydHMgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//#sourceURL=webpack-internal:///./node_modules/webpack/hot/emitter.js\n");/***/}),/***/"./node_modules/webpack/hot/log-apply-result.js":/*!*****************************************!*\;!***(webpack)/hot/log-apply-result.js***!;\*****************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){eval("/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers@sokra\r\n*/\r\nmodule.exports=function(updatedModules,renewedModules){\r\n\tvar unacceptedModules=updatedModules.filter(function(moduleId){\r\n\t\treturn renewedModules&&renewedModules.indexOf(moduleId)<0;\r\n\t});\r\n\tvar log=__webpack_require__(/*!./log*/\"./node_modules/webpack/hot/log.js\");\r\n\r\n\tif(unacceptedModules.length>0){\r\n\t\tlog(\r\n\t\t\t\"warning\",\r\n\t\t\t\"[HMR]The following modules couldn't be hot updated:(They would need a full reload!)\"\r\n\t\t);\r\n\t\tunacceptedModules.forEach(function(moduleId){\r\n\t\t\tlog(\"warning\",\"[HMR]-\"+moduleId);\r\n\t\t});\r\n\t}\r\n\r\n\tif(!renewedModules||renewedModules.length===0){\r\n\t\tlog(\"info\",\"[HMR]Nothing hot updated.\");\r\n\t}else{\r\n\t\tlog(\"info\",\"[HMR]Updated modules:\");\r\n\t\trenewedModules.forEach(function(moduleId){\r\n\t\t\tif(typeof moduleId===\"string\"&&moduleId.indexOf(\"!\")!==-1){\r\n\t\t\t\tvar parts=moduleId.split(\"!\");\r\n\t\t\t\tlog.groupCollapsed(\"info\",\"[HMR]-\"+parts.pop());\r\n\t\t\t\tlog(\"info\",\"[HMR]-\"+moduleId);\r\n\t\t\t\tlog.groupEnd(\"info\");\r\n\t\t\t}else{\r\n\t\t\t\tlog(\"info\",\"[HMR]-\"+moduleId);\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar numberIds=renewedModules.every(function(moduleId){\r\n\t\t\treturn typeof moduleId===\"number\";\r\n\t\t});\r\n\t\tif(numberIds)\r\n\t\t\tlog(\r\n\t\t\t\t\"info\",\r\n\t\t\t\t\"[HMR]Consider using the NamedModulesPlugin for module names.\"\r\n\t\t\t);\r\n\t}\r\n};\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9ob3QvbG9nLWFwcGx5LXJlc3VsdC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvaG90L2xvZy1hcHBseS1yZXN1bHQuanM/ZTUyZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXHJcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxyXG4qL1xyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVwZGF0ZWRNb2R1bGVzLCByZW5ld2VkTW9kdWxlcykge1xyXG5cdHZhciB1bmFjY2VwdGVkTW9kdWxlcyA9IHVwZGF0ZWRNb2R1bGVzLmZpbHRlcihmdW5jdGlvbihtb2R1bGVJZCkge1xyXG5cdFx0cmV0dXJuIHJlbmV3ZWRNb2R1bGVzICYmIHJlbmV3ZWRNb2R1bGVzLmluZGV4T2YobW9kdWxlSWQpIDwgMDtcclxuXHR9KTtcclxuXHR2YXIgbG9nID0gcmVxdWlyZShcIi4vbG9nXCIpO1xyXG5cclxuXHRpZiAodW5hY2NlcHRlZE1vZHVsZXMubGVuZ3RoID4gMCkge1xyXG5cdFx0bG9nKFxyXG5cdFx0XHRcIndhcm5pbmdcIixcclxuXHRcdFx0XCJbSE1SXSBUaGUgZm9sbG93aW5nIG1vZHVsZXMgY291bGRuJ3QgYmUgaG90IHVwZGF0ZWQ6IChUaGV5IHdvdWxkIG5lZWQgYSBmdWxsIHJlbG9hZCEpXCJcclxuXHRcdCk7XHJcblx0XHR1bmFjY2VwdGVkTW9kdWxlcy5mb3JFYWNoKGZ1bmN0aW9uKG1vZHVsZUlkKSB7XHJcblx0XHRcdGxvZyhcIndhcm5pbmdcIiwgXCJbSE1SXSAgLSBcIiArIG1vZHVsZUlkKTtcclxuXHRcdH0pO1xyXG5cdH1cclxuXHJcblx0aWYgKCFyZW5ld2VkTW9kdWxlcyB8fCByZW5ld2VkTW9kdWxlcy5sZW5ndGggPT09IDApIHtcclxuXHRcdGxvZyhcImluZm9cIiwgXCJbSE1SXSBOb3RoaW5nIGhvdCB1cGRhdGVkLlwiKTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0bG9nKFwiaW5mb1wiLCBcIltITVJdIFVwZGF0ZWQgbW9kdWxlczpcIik7XHJcblx0XHRyZW5ld2VkTW9kdWxlcy5mb3JFYWNoKGZ1bmN0aW9uKG1vZHVsZUlkKSB7XHJcblx0XHRcdGlmICh0eXBlb2YgbW9kdWxlSWQgPT09IFwic3RyaW5nXCIgJiYgbW9kdWxlSWQuaW5kZXhPZihcIiFcIikgIT09IC0xKSB7XHJcblx0XHRcdFx0dmFyIHBhcnRzID0gbW9kdWxlSWQuc3BsaXQoXCIhXCIpO1xyXG5cdFx0XHRcdGxvZy5ncm91cENvbGxhcHNlZChcImluZm9cIiwgXCJbSE1SXSAgLSBcIiArIHBhcnRzLnBvcCgpKTtcclxuXHRcdFx0XHRsb2coXCJpbmZvXCIsIFwiW0hNUl0gIC0gXCIgKyBtb2R1bGVJZCk7XHJcblx0XHRcdFx0bG9nLmdyb3VwRW5kKFwiaW5mb1wiKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRsb2coXCJpbmZvXCIsIFwiW0hNUl0gIC0gXCIgKyBtb2R1bGVJZCk7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdFx0dmFyIG51bWJlcklkcyA9IHJlbmV3ZWRNb2R1bGVzLmV2ZXJ5KGZ1bmN0aW9uKG1vZHVsZUlkKSB7XHJcblx0XHRcdHJldHVybiB0eXBlb2YgbW9kdWxlSWQgPT09IFwibnVtYmVyXCI7XHJcblx0XHR9KTtcclxuXHRcdGlmIChudW1iZXJJZHMpXHJcblx0XHRcdGxvZyhcclxuXHRcdFx0XHRcImluZm9cIixcclxuXHRcdFx0XHRcIltITVJdIENvbnNpZGVyIHVzaW5nIHRoZSBOYW1lZE1vZHVsZXNQbHVnaW4gZm9yIG1vZHVsZSBuYW1lcy5cIlxyXG5cdFx0XHQpO1xyXG5cdH1cclxufTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//#sourceURL=webpack-internal:///./node_modules/webpack/hot/log-apply-result.js\n");/***/}),/***/"./node_modules/webpack/hot/log.js":/*!****************************!*\{!***(webpack)/hot/log.js***!}\****************************//*!no static exports found*//***/(function(module,exports){eval("var logLevel=\"info\";\r\n\r\nfunction dummy(){}\r\n\r\nfunction shouldLog(level){\r\n\tvar shouldLog=\r\n\t\t(logLevel===\"info\"&&level===\"info\")||\r\n\t\t([\"info\",\"warning\"].indexOf(logLevel)>=0&&level===\"warning\")||\r\n\t\t([\"info\",\"warning\",\"error\"].indexOf(logLevel)>=0&&level===\"error\");\r\n\treturn shouldLog;\r\n}\r\n\r\nfunction logGroup(logFn){\r\n\treturn function(level,msg){\r\n\t\tif(shouldLog(level)){\r\n\t\t\tlogFn(msg);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nmodule.exports=function(level,msg){\r\n\tif(shouldLog(level)){\r\n\t\tif(level===\"info\"){\r\n\t\t\tconsole.log(msg);\r\n\t\t}else if(level===\"warning\"){\r\n\t\t\tconsole.warn(msg);\r\n\t\t}else if(level===\"error\"){\r\n\t\t\tconsole.error(msg);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/*eslint-disable node/no-unsupported-features/node-builtins*/\r\nvar group=console.group||dummy;\r\nvar groupCollapsed=console.groupCollapsed||dummy;\r\nvar groupEnd=console.groupEnd||dummy;\r\n/*eslint-enable node/no-unsupported-features/node-builtins*/\r\n\r\nmodule.exports.group=logGroup(group);\r\n\r\nmodule.exports.groupCollapsed=logGroup(groupCollapsed);\r\n\r\nmodule.exports.groupEnd=logGroup(groupEnd);\r\n\r\nmodule.exports.setLogLevel=function(level){\r\n\tlogLevel=level;\r\n};\r\n//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9ob3QvbG9nLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9ob3QvbG9nLmpzPzFhZmQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGxvZ0xldmVsID0gXCJpbmZvXCI7XHJcblxyXG5mdW5jdGlvbiBkdW1teSgpIHt9XHJcblxyXG5mdW5jdGlvbiBzaG91bGRMb2cobGV2ZWwpIHtcclxuXHR2YXIgc2hvdWxkTG9nID1cclxuXHRcdChsb2dMZXZlbCA9PT0gXCJpbmZvXCIgJiYgbGV2ZWwgPT09IFwiaW5mb1wiKSB8fFxyXG5cdFx0KFtcImluZm9cIiwgXCJ3YXJuaW5nXCJdLmluZGV4T2YobG9nTGV2ZWwpID49IDAgJiYgbGV2ZWwgPT09IFwid2FybmluZ1wiKSB8fFxyXG5cdFx0KFtcImluZm9cIiwgXCJ3YXJuaW5nXCIsIFwiZXJyb3JcIl0uaW5kZXhPZihsb2dMZXZlbCkgPj0gMCAmJiBsZXZlbCA9PT0gXCJlcnJvclwiKTtcclxuXHRyZXR1cm4gc2hvdWxkTG9nO1xyXG59XHJcblxyXG5mdW5jdGlvbiBsb2dHcm91cChsb2dGbikge1xyXG5cdHJldHVybiBmdW5jdGlvbihsZXZlbCwgbXNnKSB7XHJcblx0XHRpZiAoc2hvdWxkTG9nKGxldmVsKSkge1xyXG5cdFx0XHRsb2dGbihtc2cpO1xyXG5cdFx0fVxyXG5cdH07XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGV2ZWwsIG1zZykge1xyXG5cdGlmIChzaG91bGRMb2cobGV2ZWwpKSB7XHJcblx0XHRpZiAobGV2ZWwgPT09IFwiaW5mb1wiKSB7XHJcblx0XHRcdGNvbnNvbGUubG9nKG1zZyk7XHJcblx0XHR9IGVsc2UgaWYgKGxldmVsID09PSBcIndhcm5pbmdcIikge1xyXG5cdFx0XHRjb25zb2xlLndhcm4obXNnKTtcclxuXHRcdH0gZWxzZSBpZiAobGV2ZWwgPT09IFwiZXJyb3JcIikge1xyXG5cdFx0XHRjb25zb2xlLmVycm9yKG1zZyk7XHJcblx0XHR9XHJcblx0fVxyXG59O1xyXG5cclxuLyogZXNsaW50LWRpc2FibGUgbm9kZS9uby11bnN1cHBvcnRlZC1mZWF0dXJlcy9ub2RlLWJ1aWx0aW5zICovXHJcbnZhciBncm91cCA9IGNvbnNvbGUuZ3JvdXAgfHwgZHVtbXk7XHJcbnZhciBncm91cENvbGxhcHNlZCA9IGNvbnNvbGUuZ3JvdXBDb2xsYXBzZWQgfHwgZHVtbXk7XHJcbnZhciBncm91cEVuZCA9IGNvbnNvbGUuZ3JvdXBFbmQgfHwgZHVtbXk7XHJcbi8qIGVzbGludC1lbmFibGUgbm9kZS9uby11bnN1cHBvcnRlZC1mZWF0dXJlcy9ub2RlLWJ1aWx0aW5zICovXHJcblxyXG5tb2R1bGUuZXhwb3J0cy5ncm91cCA9IGxvZ0dyb3VwKGdyb3VwKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzLmdyb3VwQ29sbGFwc2VkID0gbG9nR3JvdXAoZ3JvdXBDb2xsYXBzZWQpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMuZ3JvdXBFbmQgPSBsb2dHcm91cChncm91cEVuZCk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cy5zZXRMb2dMZXZlbCA9IGZ1bmN0aW9uKGxldmVsKSB7XHJcblx0bG9nTGV2ZWwgPSBsZXZlbDtcclxufTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//#sourceURL=webpack-internal:///./node_modules/webpack/hot/log.js\n");/***/}),/***/"./src/index.js":/*!**********************!*\;!***./src/index.js***!;\**********************//*!no static exports found*//***/(function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _ripple=__webpack_require__(/*!@material/ripple*/\"./node_modules/@material/ripple/dist/mdc.ripple.js\");\n\nvar _textfield=__webpack_require__(/*!@material/textfield*/\"./node_modules/@material/textfield/dist/mdc.textfield.js\");\n\nvar _helperText=__webpack_require__(/*!@material/textfield/helper-text*/\"./node_modules/@material/textfield/helper-text/index.js\");\n\nvar _icon=__webpack_require__(/*!@material/textfield/icon*/\"./node_modules/@material/textfield/icon/index.js\");\n\nvar _notchedOutline=__webpack_require__(/*!@material/notched-outline*/\"./node_modules/@material/notched-outline/dist/mdc.notchedOutline.js\");\n\nvar _floatingLabel=__webpack_require__(/*!@material/floating-label*/\"./node_modules/@material/floating-label/dist/mdc.floatingLabel.js\");\n\nvar _slider=__webpack_require__(/*!@material/slider*/\"./node_modules/@material/slider/dist/mdc.slider.js\");\n\n__webpack_require__(/*!../assets/stylesheets/scss/app.scss*/\"./assets/stylesheets/scss/app.scss\");\n\nvar selectButton='.mdc-button';\nvar selectTextField='.mdc-text-field';\nvar selectHelperText='.mdc-text-field-helper-text';\nvar selectTextFieldIcon='.mdc-text-field-icon';\nvar selectNotchedOutline='.mdc-notched-outline';\nvar selectFloatingLabel='.mdc-floating-label';\nvar selectSlider='.mdc-slider';\n\n/*Buttons*/\n\nif($(selectButton).length){\n\tvar buttonRipple=new _ripple.MDCRipple(document.querySelector(selectButton));\n}\n\n/*Script inputbox*/\n\n\nif($(selectTextField).length){\n\tvar textFields=[];\n\tvar mdcTextFields=[];\n\t$(selectTextField).each(function(index){\n\t\ttextFields[index]=this;\n\t\tmdcTextFields[index]=new _textfield.MDCTextField(this);\n\t});\n}\n\n/*Helper Text*/\n\nif($(selectHelperText).length){\n\tvar helperText=new _helperText.MDCTextFieldHelperText(document.querySelector(selectHelperText));\n}\n\n/*Icon*/\n\nif($(selectTextFieldIcon).length){\n\tvar icon=new _icon.MDCTextFieldIcon(document.querySelector(selectTextFieldIcon));\n}\n\nif($(selectNotchedOutline).length){\n\tvar notchedOutline=new _notchedOutline.MDCNotchedOutline(document.querySelector(selectNotchedOutline));\n}\n\nif($(selectFloatingLabel).length){\n\tvar floatingLabel=new _floatingLabel.MDCFloatingLabel(document.querySelector(selectFloatingLabel));\n}\n\nif($(selectSlider).length){\n\n\tvar sliders=[];\n\tvar mdcSliders=[];\n\t$(selectSlider).each(function(index){\n\t\tsliders[index]=this;\n\t\tmdcSliders[index]=new _slider.MDCSlider(this);\n\t\t//mdcSliders[index].listen('MDCSlider:change',()=>console.log(`Value changed to ${mdcSliders[index].value}`));\n\t});\n}//#sourceURL=[module]\n//#sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2luZGV4LmpzPzEyZDUiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZShcIi4uL2Fzc2V0cy9zdHlsZXNoZWV0cy9zY3NzL2FwcC5zY3NzXCIpO1xyXG5cclxudmFyIHNlbGVjdEJ1dHRvbiA9ICcubWRjLWJ1dHRvbic7XHJcbnZhciBzZWxlY3RUZXh0RmllbGQgPSAnLm1kYy10ZXh0LWZpZWxkJztcclxudmFyIHNlbGVjdEhlbHBlclRleHQgPSAnLm1kYy10ZXh0LWZpZWxkLWhlbHBlci10ZXh0JztcclxudmFyIHNlbGVjdFRleHRGaWVsZEljb24gPSAnLm1kYy10ZXh0LWZpZWxkLWljb24nO1xyXG52YXIgc2VsZWN0Tm90Y2hlZE91dGxpbmUgPSAnLm1kYy1ub3RjaGVkLW91dGxpbmUnO1xyXG52YXIgc2VsZWN0RmxvYXRpbmdMYWJlbCA9ICcubWRjLWZsb2F0aW5nLWxhYmVsJztcclxudmFyIHNlbGVjdFNsaWRlciA9ICcubWRjLXNsaWRlcic7XHJcblxyXG4vKiBCdXR0b25zICovXHJcbmltcG9ydCB7TURDUmlwcGxlfSBmcm9tICdAbWF0ZXJpYWwvcmlwcGxlJztcclxuaWYgKCQoc2VsZWN0QnV0dG9uKS5sZW5ndGgpIHtcclxuXHRjb25zdCBidXR0b25SaXBwbGUgPSBuZXcgTURDUmlwcGxlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0QnV0dG9uKSk7XHJcbn1cclxuXHJcbi8qIFNjcmlwdCBpbnB1dGJveCAqL1xyXG5pbXBvcnQge01EQ1RleHRGaWVsZH0gZnJvbSAnQG1hdGVyaWFsL3RleHRmaWVsZCc7XHJcblxyXG5pZiAoJChzZWxlY3RUZXh0RmllbGQpLmxlbmd0aCkge1xyXG5cdHZhciB0ZXh0RmllbGRzID0gW107XHJcblx0dmFyIG1kY1RleHRGaWVsZHMgPSBbXTtcclxuXHQkKHNlbGVjdFRleHRGaWVsZCkuZWFjaChmdW5jdGlvbiggaW5kZXggKSB7XHJcblx0ICBcdHRleHRGaWVsZHNbaW5kZXhdID0gdGhpcztcclxuXHQgIFx0bWRjVGV4dEZpZWxkc1tpbmRleF0gPSBuZXcgTURDVGV4dEZpZWxkKHRoaXMpO1xyXG5cdH0pO1xyXG59XHJcblxyXG4vKiBIZWxwZXIgVGV4dCAqL1xyXG5pbXBvcnQge01EQ1RleHRGaWVsZEhlbHBlclRleHR9IGZyb20gJ0BtYXRlcmlhbC90ZXh0ZmllbGQvaGVscGVyLXRleHQnO1xyXG5pZiAoJChzZWxlY3RIZWxwZXJUZXh0KS5sZW5ndGgpIHtcclxuXHRjb25zdCBoZWxwZXJUZXh0ID0gbmV3IE1EQ1RleHRGaWVsZEhlbHBlclRleHQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RIZWxwZXJUZXh0KSk7XHJcbn1cclxuXHJcbi8qIEljb24gKi9cclxuaW1wb3J0IHtNRENUZXh0RmllbGRJY29ufSBmcm9tICdAbWF0ZXJpYWwvdGV4dGZpZWxkL2ljb24nO1xyXG5pZiAoJChzZWxlY3RUZXh0RmllbGRJY29uKS5sZW5ndGgpIHtcclxuXHRjb25zdCBpY29uID0gbmV3IE1EQ1RleHRGaWVsZEljb24oZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RUZXh0RmllbGRJY29uKSk7XHJcbn1cclxuXHJcbmltcG9ydCB7TURDTm90Y2hlZE91dGxpbmV9IGZyb20gJ0BtYXRlcmlhbC9ub3RjaGVkLW91dGxpbmUnO1xyXG5pZiAoJChzZWxlY3ROb3RjaGVkT3V0bGluZSkubGVuZ3RoKSB7XHJcblx0Y29uc3Qgbm90Y2hlZE91dGxpbmUgPSBuZXcgTURDTm90Y2hlZE91dGxpbmUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3ROb3RjaGVkT3V0bGluZSkpO1xyXG59XHJcblxyXG5pbXBvcnQge01EQ0Zsb2F0aW5nTGFiZWx9IGZyb20gJ0BtYXRlcmlhbC9mbG9hdGluZy1sYWJlbCc7XHJcbmlmICgkKHNlbGVjdEZsb2F0aW5nTGFiZWwpLmxlbmd0aCkge1xyXG5cdGNvbnN0IGZsb2F0aW5nTGFiZWwgPSBuZXcgTURDRmxvYXRpbmdMYWJlbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdEZsb2F0aW5nTGFiZWwpKTtcclxufVxyXG5cclxuaW1wb3J0IHtNRENTbGlkZXJ9IGZyb20gJ0BtYXRlcmlhbC9zbGlkZXInO1xyXG5pZiAoJChzZWxlY3RTbGlkZXIpLmxlbmd0aCkge1xyXG5cclxuXHR2YXIgc2xpZGVycyA9IFtdO1xyXG5cdHZhciBtZGNTbGlkZXJzID0gW107XHJcblx0JChzZWxlY3RTbGlkZXIpLmVhY2goZnVuY3Rpb24oIGluZGV4ICkge1xyXG5cdCAgXHRzbGlkZXJzW2luZGV4XSA9IHRoaXM7XHJcblx0ICBcdG1kY1NsaWRlcnNbaW5kZXhdID0gbmV3IE1EQ1NsaWRlcih0aGlzKTtcclxuXHQgIFx0XHRcdC8vbWRjU2xpZGVyc1tpbmRleF0ubGlzdGVuKCdNRENTbGlkZXI6Y2hhbmdlJywgKCkgPT4gY29uc29sZS5sb2coYFZhbHVlIGNoYW5nZWQgdG8gJHttZGNTbGlkZXJzW2luZGV4XS52YWx1ZX1gKSk7XHJcblx0fSk7XHJcbn1cclxuXHJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFXQTtBQUNBO0FBS0E7QUFDQTtBQVdBO0FBQ0E7QUFLQTtBQUNBO0FBSUE7QUFDQTtBQUlBO0FBQ0E7QUFJQTtBQUNBO0FBbkRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//#sourceURL=webpack-internal:///./src/index.js\n");/***/}),/***/0:/*!**********************************************************************************************************!*\;!***multi(webpack)-dev-server/client?http://localhost:8080(webpack)/hot/dev-server.js./src/index.js***!;\**********************************************************************************************************//*!no static exports found*//***/(function(module,exports,__webpack_require__){__webpack_require__(/*!C:\xampp\htdocs\bonjourvelo\webpack-project\node_modules\webpack-dev-server\client\index.js?http://localhost:8080*/"./node_modules/webpack-dev-server/client/index.js?http://localhost:8080");__webpack_require__(/*!C:\xampp\htdocs\bonjourvelo\webpack-project\node_modules\webpack\hot\dev-server.js*/"./node_modules/webpack/hot/dev-server.js");module.exports=__webpack_require__(/*!./src/index.js*/"./src/index.js");/***/})/******/});/*Compiler*/console.log=tempConsole[0];console.error=tempConsole[1];console.info=tempConsole[2];